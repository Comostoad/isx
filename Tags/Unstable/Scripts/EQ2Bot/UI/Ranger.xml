<?xml version="1.0" encoding="UTF-8" ?>
<ISUI>
	<Commandcheckbox Name='AoEMode' Template='EQ2.Commandcheckbox'>
		<X>10</X>
		<Y>50</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Enable AoE Mode</Text>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[AoEMode]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Cast AoE Spells",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[AoEMode]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Cast AoE Spells",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Cast AoE Spells]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='PBAoEMode' Template='EQ2.Commandcheckbox'>
		<X>10</X>
		<Y>70</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Enable PBAoE Mode</Text>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[PBAoEMode]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Cast PBAoE Spells",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[PBAoEMode]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Cast PBAoE Spells",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Cast PBAoE Spells]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='cbSurroundingAttacks' Template='EQ2.Commandcheckbox'>
		<Visible>1</Visible>
		<X>10</X>
		<Y>90</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Buff AA Surrounding Attacks:</Text>
		<OnLeftClick>
			if ${This.Checked}
			{

				Script[EQ2Bot].Variable[SurroundingAttacksMode]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Buff Surrounding Attacks",TRUE]:Save
			}
			else
			{

				Script[EQ2Bot].Variable[SurroundingAttacksMode]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Buff Surrounding Attacks",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Buff Surrounding Attacks]}</Data>
	</Commandcheckbox>	
	<Commandcheckbox Name='BowAttackMode' Template='EQ2.Commandcheckbox'>
		<Visible>1</Visible>
		<X>10</X>
		<Y>110</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Use Bow Attacks</Text>
		<AutoTooltip>Uses Bow Attacks</AutoTooltip>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[BowAttacksMode]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Cast Bow Attack Spells",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[BowAttacksMode]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Cast Bow Attack Spells",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Cast Bow Attack Spells]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='RangedAttackMode' Template='EQ2.Commandcheckbox'>
		<Visible>1</Visible>
		<X>10</X>
		<Y>130</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Use Ranged Attacks Only</Text>
		<AutoTooltip>Use only ranged spells, arts and auto attack</AutoTooltip>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[RangedAttackMode]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Use Ranged Attacks Only",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[RangedAttackMode]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Use Ranged Attacks Only",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Use Ranged Attacks Only]}</Data>
	</Commandcheckbox>
	<Text Name='lblMainWeapon' Template='EQ2.text'>
		<X>10</X>
		<Y>150</Y>
		<Width>20%</Width>
		<Height>20</Height>
		<Alignment>Left</Alignment>
		<Text>Main Hand:</Text>
		<AutoTooltip>Main Hand weapon to equip when not using an AA weapon</AutoTooltip>
	</Text>
	<combobox name='cbMainWeapon' Template='EQ2.Combobox'>
		<x>100</x>
		<y>150</y>
		<width>60%</width>
		<height>20</height>
		<OnLeftClick>
			declare Counter int
			Counter:Set[1]
			This:ClearItems
			Me:CreateCustomInventoryArray[nonbankonly]
			do
			{
				if ${Me.CustomInventory[${Counter}].Type.Equal[Weapon]}
				{
					This:AddItem["${Me.CustomInventory[${Counter}].Name}"]
				}
			}
			while ${Counter:Inc}&lt;=${Me.CustomInventoryArraySize}
			Counter:Set[1]
			do
			{
				if ${Me.Equipment[${Counter}].Type.Equal[Weapon]}
				{
					This:AddItem["${Me.Equipment[${Counter}].Name}"]
				}
			}
			while ${Counter:Inc}&lt;=22
		</OnLeftClick>
		<OnLoad>
			This:AddItem["${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Main]}"]
			This.ItemByValue[${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Main]}]:Select
		</OnLoad>
		<OnSelect>
			Script[EQ2Bot].Variable[WeaponMain]:Set[${This.SelectedItem.Text}]
			SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set[Main,"${This.SelectedItem.Text}"]:Save
		</OnSelect>
	</combobox>
	<Text Name='lblOffHand' Template='EQ2.text'>
		<X>10</X>
		<Y>170</Y>
		<Width>20%</Width>
		<Height>20</Height>
		<Alignment>Left</Alignment>
		<Text>Off Hand:</Text>
		<AutoTooltip>Off hand item to equip when not using an AA off hand item</AutoTooltip>
	</Text>
	<combobox name='cbOffHand' Template='EQ2.Combobox'>
		<x>100</x>
		<y>170</y>
		<width>60%</width>
		<height>20</height>
		<AutoTooltip>Off hand item to equip when not using an AA off hand item</AutoTooltip>
		<OnLeftClick>
			declare Counter int
			Counter:Set[1]
			This:ClearItems
			Me:CreateCustomInventoryArray[nonbankonly]
			do
			{
				if ${Me.CustomInventory[${Counter}].Type.Equal[Shield]} || ${Me.CustomInventory[${Counter}].Type.Equal[Weapon]}
				{
					This:AddItem["${Me.CustomInventory[${Counter}].Name}"]
				}
			}
			while ${Counter:Inc}&lt;=${Me.CustomInventoryArraySize}
			Counter:Set[1]
			do
			{
				if ${Me.Equipment[${Counter}].Type.Equal[Shield]} || ${Me.Equipment[${Counter}].Type.Equal[Weapon]}
				{
					This:AddItem["${Me.Equipment[${Counter}].Name}"]
				}
			}
			while ${Counter:Inc}&lt;=22
		</OnLeftClick>
		<OnLoad>
			This:AddItem["${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[OffHand]}"]
			This.ItemByValue[${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[OffHand]}]:Select
		</OnLoad>
		<OnSelect>
			Script[EQ2Bot].Variable[OffHand]:Set[${This.SelectedItem.Text}]
			SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set[OffHand,"${This.SelectedItem.Text}"]:Save
		</OnSelect>
	</combobox>
	<Text Name='lblDagger' Template='EQ2.text'>
		<X>10</X>
		<Y>190</Y>
		<Width>20%</Width>
		<Height>20</Height>
		<Alignment>Left</Alignment>
		<Text>AA Dagger:</Text>
		<AutoTooltip>Weapon to use during Dagger required AA skills</AutoTooltip>
	</Text>
	<combobox name='cbDagger' Template='EQ2.Combobox'>
		<x>100</x>
		<y>190</y>
		<width>60%</width>
		<height>20</height>
		<OnLeftClick>
			declare Counter int
			Counter:Set[1]
			This:ClearItems
			Me:CreateCustomInventoryArray[nonbankonly]
			do
			{
				if ${Me.CustomInventory[${Counter}].SubType.Equal[Dagger]}
				{
					This:AddItem["${Me.CustomInventory[${Counter}].Name}"]
				}
			}
			while ${Counter:Inc}&lt;=${Me.CustomInventoryArraySize}
			Counter:Set[1]
			do
			{
				if ${Me.Equipment[${Counter}].SubType.Equal[Dagger]}
				{
					This:AddItem["${Me.Equipment[${Counter}].Name}"]
				}
			}
			while ${Counter:Inc}&lt;=22
		</OnLeftClick>
		<OnLoad>
			This:AddItem["${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Dagger]}"]
			This.ItemByValue[${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Dagger]}]:Select
		</OnLoad>
		<OnSelect>
			Script[EQ2Bot].Variable[WeaponDagger]:Set[${This.SelectedItem.Text}]
			SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set[Dagger,"${This.SelectedItem.Text}"]:Save
		</OnSelect>
	</combobox>
	<Text Name='lblSword' Template='EQ2.text'>
		<X>10</X>
		<Y>210</Y>
		<Width>20%</Width>
		<Height>20</Height>
		<Alignment>Left</Alignment>
		<Text>AA Sword:</Text>
		<AutoTooltip>Weapon to use during Sword required AA skills</AutoTooltip>
	</Text>
	<combobox name='cbSword' Template='EQ2.Combobox'>
		<x>100</x>
		<y>210</y>
		<width>60%</width>
		<height>20</height>
		<OnLeftClick>
			declare Counter int
			Counter:Set[1]
			This:ClearItems
			Me:CreateCustomInventoryArray[nonbankonly]
			do
			{
				if ${Me.CustomInventory[${Counter}].SubType.Equal[Sword]} || ${Me.CustomInventory[${Counter}].SubType.Equal[Great Sword]}
				{
					This:AddItem["${Me.CustomInventory[${Counter}].Name}"]
				}
			}
			while ${Counter:Inc}&lt;=${Me.CustomInventoryArraySize}
			Counter:Set[1]
			do
			{
				if ${Me.Equipment[${Counter}].SubType.Equal[Sword]} || ${Me.Equipment[${Counter}].SubType.Equal[Great Sword]}
				{
					This:AddItem["${Me.Equipment[${Counter}].Name}"]
				}
			}
			while ${Counter:Inc}&lt;=22
		</OnLeftClick>
		<OnLoad>
			This:AddItem["${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Sword]}"]
			This.ItemByValue[${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Sword]}]:Select
		</OnLoad>
		<OnSelect>
			Script[EQ2Bot].Variable[WeaponSword]:Set[${This.SelectedItem.Text}]
			SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set[Sword,"${This.SelectedItem.Text}"]:Save
		</OnSelect>
	</combobox>
	<Text Name='lblRapier' Template='EQ2.text'>
		<X>10</X>
		<Y>230</Y>
		<Width>20%</Width>
		<Height>20</Height>
		<Alignment>Left</Alignment>
		<Text>AA Rapier:</Text>
		<AutoTooltip>Weapon to use during Rapier required AA skills</AutoTooltip>
	</Text>
	<combobox name='cbRapier' Template='EQ2.Combobox'>
		<x>100</x>
		<y>230</y>
		<width>60%</width>
		<height>20</height>
		<OnLeftClick>
			declare Counter int
			Counter:Set[1]
			This:ClearItems
			Me:CreateCustomInventoryArray[nonbankonly]
			do
			{
				if ${Me.CustomInventory[${Counter}].SubType.Equal[Rapier]}						{
					This:AddItem["${Me.CustomInventory[${Counter}].Name}"]
				}
			}
			while ${Counter:Inc}&lt;=${Me.CustomInventoryArraySize}
			Counter:Set[1]
			do
			{
				if ${Me.Equipment[${Counter}].SubType.Equal[Rapier]}							{
					This:AddItem["${Me.Equipment[${Counter}].Name}"]
				}
			}
			while ${Counter:Inc}&lt;=22
		</OnLeftClick>
		<OnLoad>
			This:AddItem["${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Rapier]}"]
			This.ItemByValue[${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Rapier]}]:Select
		</OnLoad>
		<OnSelect>
			Script[EQ2Bot].Variable[WeaponRapier]:Set[${This.SelectedItem.Text}]
			SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set[Rapier,"${This.SelectedItem.Text}"]:Save
		</OnSelect>
	</combobox>
	<Text Name='lblSpear' Template='EQ2.text'>
		<X>10</X>
		<Y>250</Y>
		<Width>20%</Width>
		<Height>20</Height>
		<Alignment>Left</Alignment>
		<Text>AA Spear:</Text>
		<AutoTooltip>Spear to use during Spear required AA skills</AutoTooltip>
	</Text>
	<combobox name='cbSpear' Template='EQ2.Combobox'>
		<x>100</x>
		<y>250</y>
		<width>60%</width>
		<height>20</height>
		<AutoTooltip>Spear to use during Spear required AA skills</AutoTooltip>
		<OnLeftClick>
			declare Counter int
			Counter:Set[1]
			This:ClearItems
			Me:CreateCustomInventoryArray[nonbankonly]
			do
			{
				if ${Me.CustomInventory[${Counter}].SubType.Equal[Spear]}
				{
					This:AddItem["${Me.CustomInventory[${Counter}].Name}"]
				}
			}
			while ${Counter:Inc}&lt;=${Me.CustomInventoryArraySize}
			Counter:Set[1]
			do
			{
				if ${Me.Equipment[${Counter}].SubType.Equal[Spear]}
				{
					This:AddItem["${Me.Equipment[${Counter}].Name}"]
				}
			}
			while ${Counter:Inc}&lt;=22
		</OnLeftClick>
		<OnLoad>
			This:AddItem["${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Spear]}"]
			This.ItemByValue[${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Spear]}]:Select
		</OnLoad>
		<OnSelect>
			Script[EQ2Bot].Variable[Spear]:Set[${This.SelectedItem.Text}]
			SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set[Spear,"${This.SelectedItem.Text}"]:Save
		</OnSelect>
	</combobox>
</ISUI>