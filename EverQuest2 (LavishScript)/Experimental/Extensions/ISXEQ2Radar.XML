<?xml version="1.0" encoding="UTF-8" ?>
<!--
Radar Testing
-->
<ISUI>
	<template name='lightbluedot'>
		<Top>0</Top>
		<Left>0</Left>
		<Bottom>16</Bottom>
		<Right>16</Right>
	</template>
	<template name='browndot'>
		<Top>0</Top>
		<Left>16</Left>
		<Bottom>16</Bottom>
		<Right>32</Right>
	</template>
	<template name='yellowdot'>
		<Top>0</Top>
		<Left>32</Left>
		<Bottom>16</Bottom>
		<Right>48</Right>
	</template>
	<template name='lightgreendot'>
		<Top>0</Top>
		<Left>48</Left>
		<Bottom>16</Bottom>
		<Right>64</Right>
	</template>
	<template name='pinkdot'>
		<Top>0</Top>
		<Left>64</Left>
		<Bottom>16</Bottom>
		<Right>80</Right>
	</template>
	<template name='darkgreendot'>
		<Top>0</Top>
		<Left>80</Left>
		<Bottom>16</Bottom>
		<Right>96</Right>
	</template>
	<template name='whitedot'>
		<Top>16</Top>
		<Left>0</Left>
		<Bottom>32</Bottom>
		<Right>16</Right>
	</template>
	<template name='graydot'>
		<Top>16</Top>
		<Left>16</Left>
		<Bottom>32</Bottom>
		<Right>32</Right>
	</template>
	<template name='reddot'>
		<Top>16</Top>
		<Left>32</Left>
		<Bottom>32</Bottom>
		<Right>48</Right>
	</template>
	<template name='darkpurpledot'>
		<Top>16</Top>
		<Left>48</Left>
		<Bottom>32</Bottom>
		<Right>64</Right>
	</template>
	<template name='darkbluedot'>
		<Top>16</Top>
		<Left>64</Left>
		<Bottom>32</Bottom>
		<Right>80</Right>
	</template>
	<template name='orangedot'>
		<Top>16</Top>
		<Left>80</Left>
		<Bottom>32</Bottom>
		<Right>96</Right>
	</template>
	<template name='lightpurpledot'>
		<Top>32</Top>
		<Left>0</Left>
		<Bottom>48</Bottom>
		<Right>16</Right>
	</template>
	<template name='khakidot'>
		<Top>32</Top>
		<Left>16</Left>
		<Bottom>48</Bottom>
		<Right>32</Right>
	</template>
	<template name='aquadot'>
		<Top>32</Top>
		<Left>32</Left>
		<Bottom>48</Bottom>
		<Right>48</Right>
	</template>
	<template name='rosedot'>
		<Top>32</Top>
		<Left>48</Left>
		<Bottom>48</Bottom>
		<Right>64</Right>
	</template>
	<template name='lightaquadot'>
		<Top>32</Top>
		<Left>64</Left>
		<Bottom>48</Bottom>
		<Right>80</Right>
	</template>
	<template name='darkorangedot'>
		<Top>32</Top>
		<Left>80</Left>
		<Bottom>48</Bottom>
		<Right>96</Right>
	</template>
	<template name='brightpurpledot'>
		<Top>48</Top>
		<Left>0</Left>
		<Bottom>64</Bottom>
		<Right>16</Right>
	</template>
	<template name='brightgreendot'>
		<Top>48</Top>
		<Left>16</Left>
		<Bottom>64</Bottom>
		<Right>32</Right>
	</template>
	<template name='brightyellowdot'>
		<Top>48</Top>
		<Left>32</Left>
		<Bottom>64</Bottom>
		<Right>48</Right>
	</template>
	<template name='brightorangedot'>
		<Top>48</Top>
		<Left>48</Left>
		<Bottom>64</Bottom>
		<Right>64</Right>
	</template>
	<template name='brightbluedot'>
		<Top>48</Top>
		<Left>64</Left>
		<Bottom>64</Bottom>
		<Right>80</Right>
	</template>
	<template name='brightpinkdot'>
		<Top>48</Top>
		<Left>80</Left>
		<Bottom>64</Bottom>
		<Right>96</Right>
	</template>

	<template Name='radar'>
		<Font template='Default Font' />
		<ClipY>0</ClipY>
		<ClipRadius>1</ClipRadius>
		<ShowLabels>1</ShowLabels>
		<Rotation>1</Rotation>
		<ClipText>1</ClipText>
		<RadarSize>40.0</RadarSize>
	</template>
	<template Name='eq2radar' Template='radar'>
		<BlipTypes>
			<BlipType Name='Me' Filename='ISXEQ2Radar.png' ColorKey='0' template='lightbluedot' />
			<BlipType Name='PC' Filename='ISXEQ2Radar.png' ColorKey='0' template='lightgreendot' />
			<BlipType Name='NPC' Filename='ISXEQ2Radar.png' ColorKey='0' template='yellowdot' />
			<BlipType Name='AggroNPC' Filename='ISXEQ2Radar.png' ColorKey='0' template='reddot' />
			<BlipType Name='NamedNPC' filename='ISXEQ2Radar.png' ColorKey='0' template='orangedot' />
			<BlipType Name='NoKill NPC' Filename='ISXEQ2Radar.png' ColorKey='0' template='whitedot' />
			<BlipType Name='Special' Filename='ISXEQ2Radar.png' ColorKey='0' template='pinkdot' />
			<BlipType Name='Resource' Filename='ISXEQ2Radar.png' ColorKey='0' template='darkgreendot' />
			<BlipType Name='Tradeskill Unit' Filename='ISXEQ2Radar.png' ColorKey='0' template='browndot' />
			<BlipType Name='Door' filename='ISXEQ2Radar.png' ColorKey='0' template='brightbluedot' />
			<BlipType Name='Corpse' Filename='ISXEQ2Radar.png' ColorKey='0' template='graydot' />
			<BlipType Name='Pet' Filename='ISXEQ2Radar.png' ColorKey='0' template='darkpurpledot' />
			<BlipType Name='MyPet' Filename='ISXEQ2Radar.png' ColorKey='0' template='darkbluedot' />
			<BlipType Name='Chest' filename='ISXEQ2Radar.png' ColorKey='0' template='lightpurpledot' />
			<BlipType Name='Unknown' filename='ISXEQ2Radar.png' ColorKey='0' template='brightyellowdot' />
		</BlipTypes>
	</template>
	<template Name="Black Font" template="Default Font">
	  <!-- 	  <Color>FF000000</Color> -->
	</template>

	<Window Name='Radar Window'>
		<TitleBar Name='TitleBar' template='window.TitleBar'>
			<Alpha>1</Alpha>
			<FadeDelay>0</FadeDelay>
			<FadeDuration>200</FadeDuration>
			<FadeAlpha>0</FadeAlpha>
			<Children>
				<text Name='Title' template='window.TitleBar.title' />
				<button Name='Minimize' template='window.TitleBar.Minimize' />
				<commandbutton name='Custom Close Button' template='window.TitleBar.Close'>
					<Command>radar off</Command>
				</commandbutton>
			</Children>
		</TitleBar>
		<OnLoad>
			declarevar rwActiveRadar int global 1
			addatom -global "atom rwUpdateFilters(string radarname)\n{\ndeclare rwCount int local 1\nUIElement[filterlist@filters@tab@radarconfig]:ClearSelection:ClearItems\nwhile \${rwCount}&lt;=\${Radar[\${radarname}].NumCustomFilters}\n{\nUIElement[filterlist@filters@tab@radarconfig]:AddItem[\${Radar[\${radarname}].CustomFilter[\${rwCount}]}]\nrwCount:Inc\n}\n}\n"
			declarevar rwZoomLevel int global 30
		</OnLoad>
		<OnUnload>
			deletevar rwActiveRadar
			deleteatom -global rwUpdateFilters
			deletevar rwZoomLevel
		</OnUnload>
		<X>0</X>
		<Y>0</Y>
		<Width>305</Width>
		<Height>200</Height>
		<Resizable>1</Resizable>
		<Border>2</Border>
		<BackgroundColor>00000000</BackgroundColor>
	  <Client Template='window.Client'>
		<Alpha>0.4</Alpha>
		<OnLoad>
		  This:SetLeftClickThru[true]
		  This:SetRightClickThru[true]
		</OnLoad>
	  </Client>
		<Children>
			<frame name='Buttonframe' template='frame'>
				<X>0</X>
				<Y>0</Y>
				<Width>300</Width>
				<Height>66</Height>
				<Alpha>100</Alpha>
				<FadeDelay>0</FadeDelay>
				<FadeDuration>200</FadeDuration>
				<FadeAlpha>0</FadeAlpha>
				<Children>
					<commandbutton name='Show'>
						<X>5</X>
						<Y>5</Y>
						<Width>40</Width>
						<Height>18</Height>
						<Text>${If[${UIElement[Radar Window].BackgroundColor}==0,Show,Hide]}</Text>
						<Command>UIElement[Radar Window]:SetBackgroundColor[${If[${UIElement[Radar Window].BackgroundColor}==0,FF000000,0]}]</Command>
					</commandbutton>
					<button name='Config window'>
						<X>50</X>
						<Y>5</Y>
						<Width>85</Width>
						<Height>18</Height>
						<Text>Configure</Text>
						<OnLeftClick>
							UIElement[radarconfig]:ToggleVisible
						</OnLeftClick>
					</button>
					<Text Name="zoom">
						<X>5</X>
						<Y>28</Y>
						<Width>50</Width>
						<Height>18</Height>
						<Text>Zoom +</Text>
					</Text>
					<Slider name="ZoomSlider">
						<X>52</X>
						<Y>25</Y>
						<Width>85</Width>
						<Height>18</Height>
						<OnLeftClick>
							rwZoomLevel:Set[${UIElement[ZoomSlider@Buttonframe@Radar Window].Value}]
							Radar[radar1]:SetSize[${rwZoomLevel}]
							Radar[radar2]:SetSize[${rwZoomLevel}]
							Radar[radar3]:SetSize[${rwZoomLevel}]
							Radar[radar4]:SetSize[${rwZoomLevel}]
						</OnLeftClick>
						<OnMouseMove>
							if ${rwZoomLevel}!=${UIElement[ZoomSlider@Buttonframe@Radar Window].Value}
							{
								rwZoomLevel:Set[${UIElement[ZoomSlider@Buttonframe@Radar Window].Value}]
								Radar[radar1]:SetSize[${rwZoomLevel}]
								Radar[radar2]:SetSize[${rwZoomLevel}]
								Radar[radar3]:SetSize[${rwZoomLevel}]
								Radar[radar4]:SetSize[${rwZoomLevel}]
							}
						</OnMouseMove>
					</Slider>
					<Text Name="zoomminus">
						<X>137</X>
						<Y>25</Y>
						<Height>18</Height>
						<Width>20</Width>
						<Text>-</Text>
					</Text>
					<Text name="AlphaLabel">
						<X>5</X>
						<Y>47</Y>
						<Width>50</Width>
						<Height>18</Height>
						<Text>Bkg</Text>
					</Text>
					<Slider name="BackgroundAlpha">
						<X>52</X>
						<Y>45</Y>
						<Width>85</Width>
						<Height>18</Height>
						<Range>99</Range>
						<OnChange>
							UIElement[Client@Radar Window]:SetAlpha[${Math.Calc[${This.Value} / 100 + 0.01]}]
						</OnChange>
						<OnLoad>This:SetValue[${Math.Calc[${UIElement[Client@Radar Window].Alpha} * 100]}]</OnLoad>
					</Slider>
					<Text Name='zoom value' Template='EQ2.text'>
						<X>80%</X>
						<Y>26</Y>
						<Height>18</Height>
						<Width>40</Width>
						<Text>(${UIElement[ZoomSlider@Buttonframe@Radar Window].Value})</Text>
					</Text>
					<TabControl Name='mytabs'>
						<FrameBorder>0</FrameBorder>
						<X>140</X>
						<Y>5</Y>
						<Width>150</Width>
						<Height>16</Height>
						<Tabs>
							<Tab Name='1' />
							<Tab Name='2' />
							<Tab Name='3' />
							<Tab Name='4' />
						</Tabs>
						<OnLeftClick>
							if ${UIElement[1@mytabs@Buttonframe@Radar Window].Visible}
							{
								UIElement[radar1@radar window]:Show
								UIElement[radar2@radar window]:Hide
								UIElement[radar3@radar window]:Hide
								UIElement[radar4@radar window]:Hide
								rwActiveRadar:Set[1]
							}
							if ${UIElement[2@mytabs@Buttonframe@Radar Window].Visible}
							{
								UIElement[radar1@radar window]:Hide
								UIElement[radar2@radar window]:Show
								UIElement[radar3@radar window]:Hide
								UIElement[radar4@radar window]:Hide
								rwActiveRadar:Set[2]
							}
							if ${UIElement[3@mytabs@Buttonframe@Radar Window].Visible}
							{
								UIElement[radar1@radar window]:Hide
								UIElement[radar2@radar window]:Hide
								UIElement[radar3@radar window]:Show
								UIElement[radar4@radar window]:Hide
								rwActiveRadar:Set[3]
							}
							if ${UIElement[4@mytabs@Buttonframe@Radar Window].Visible}
							{
								UIElement[radar1@radar window]:Hide
								UIElement[radar2@radar window]:Hide
								UIElement[radar3@radar window]:Hide
								UIElement[radar4@radar window]:Show
								rwActiveRadar:Set[4]
							}
							rwUpdateFilters radar${rwActiveRadar}
						</OnLeftClick>
					</TabControl>
				</Children>
			</frame>
			<eq2radar Name='radar1'>
				<X>0</X>
				<Y>20</Y>
				<Alpha>200</Alpha>
				<Width>100%</Width>
				<Height>r20</Height>
				<Visible>1</Visible>
				<ShowMe>1</ShowMe>
				<ShowTSUnits>1</ShowTSUnits>
				<ShowNPCs>1</ShowNPCs>
				<ShowAggroNPCs>1</ShowAggroNPCs>
				<ShowPCs>1</ShowPCs>
				<ShowSpecials>1</ShowSpecials>
				<ShowResources>1</ShowResources>
				<ShowNoKillNPCs>1</ShowNoKillNPCs>
				<ShowCorpses>1</ShowCorpses>
				<ShowPets>1</ShowPets>
				<ShowMyPet>1</ShowMyPet>
				<ShowNamedNPCs>1</ShowNamedNPCs>
				<ShowChests>1</ShowChests>
				<ShowDoors>1</ShowDoors>
				<ShowUnknowns>1</ShowUnknowns>
				<ColorizeLabels>1</ColorizeLabels>
				<Children>
					<tooltip Name='Radar Tooltip'></tooltip>
				</Children>
			</eq2radar>
			<eq2radar Name='radar2'>
				<X>0</X>
				<Y>20</Y>
			  <Alpha>200</Alpha>
			  <Width>100%</Width>
				<Height>r20</Height>
				<Visible>0</Visible>
				<ShowMe>1</ShowMe>
				<ShowTSUnits>0</ShowTSUnits>
				<ShowNPCs>1</ShowNPCs>
				<ShowAggroNPCs>1</ShowAggroNPCs>
				<ShowPCs>1</ShowPCs>
				<ShowSpecials>0</ShowSpecials>
				<ShowResources>0</ShowResources>
				<ShowNoKillNPCs>0</ShowNoKillNPCs>
				<ShowCorpses>1</ShowCorpses>
				<ShowPets>0</ShowPets>
				<ShowMyPet>0</ShowMyPet>
				<ShowNamedNPCs>1</ShowNamedNPCs>
				<ShowDoors>0</ShowDoors>
				<ShowUnknowns>0</ShowUnknowns>
				<ColorizeLabels>1</ColorizeLabels>
				<Children>
					<tooltip Name='Radar Tooltip'></tooltip>
				</Children>
			</eq2radar>
			<eq2radar Name='radar3'>
				<X>0</X>
				<Y>20</Y>
			  <Alpha>200</Alpha>
			  <Width>100%</Width>
				<Height>r20</Height>
				<Visible>0</Visible>
				<ShowMe>1</ShowMe>
				<ShowTSUnits>1</ShowTSUnits>
				<ShowNPCs>0</ShowNPCs>
				<ShowAggroNPCs>1</ShowAggroNPCs>
				<ShowPCs>0</ShowPCs>
				<ShowSpecials>0</ShowSpecials>
				<ShowResources>1</ShowResources>
				<ShowNoKillNPCs>0</ShowNoKillNPCs>
				<ShowCorpses>0</ShowCorpses>
				<ShowPets>0</ShowPets>
				<ShowMyPet>0</ShowMyPet>
				<ShowNamedNPCs>1</ShowNamedNPCs>
				<ShowDoors>0</ShowDoors>
				<ShowUnknowns>0</ShowUnknowns>
				<ColorizeLabels>1</ColorizeLabels>
				<Children>
					<tooltip Name='Radar Tooltip'></tooltip>
				</Children>
			</eq2radar>
			<eq2radar Name='radar4'>
				<X>0</X>
				<Y>20</Y>
			  <Alpha>200</Alpha>
			  <Width>100%</Width>
				<Height>r20</Height>
				<Visible>0</Visible>
				<ShowMe>1</ShowMe>
				<ShowTSUnits>0</ShowTSUnits>
				<ShowNPCs>0</ShowNPCs>
				<ShowAggroNPCs>0</ShowAggroNPCs>
				<ShowPCs>0</ShowPCs>
				<ShowSpecials>1</ShowSpecials>
				<ShowResources>0</ShowResources>
				<ShowNoKillNPCs>1</ShowNoKillNPCs>
				<ShowCorpses>0</ShowCorpses>
				<ShowPets>0</ShowPets>
				<ShowMyPet>0</ShowMyPet>
				<ShowNamedNPCs>0</ShowNamedNPCs>
				<ShowDoors>1</ShowDoors>
				<ShowUnknowns>1</ShowUnknowns>
				<ColorizeLabels>1</ColorizeLabels>
				<Children>
					<tooltip Name='Radar Tooltip'></tooltip>
				</Children>
			</eq2radar>
		</Children>
	</Window>
	<Window Name='RadarConfig'>
		<OnLoad>
			timedcommand 1 "rwUpdateFilters radar${rwActiveRadar}"
			timedcommand 1 UIElement[ZoomSlider@Buttonframe@Radar Window]:SetRange[300]
			timedcommand 1 UIElement[ZoomSlider@Buttonframe@Radar Window]:SetValue[${Radar[radar1].Size}]
			timedcommand 1 Radar[radar1]:SetSize[${UIElement[ZoomSlider@Buttonframe@Radar Window].Value}]
			timedcommand 1 Radar[radar2]:SetSize[${UIElement[ZoomSlider@Buttonframe@Radar Window].Value}]
			timedcommand 1 Radar[radar3]:SetSize[${UIElement[ZoomSlider@Buttonframe@Radar Window].Value}]
			timedcommand 1 Radar[radar4]:SetSize[${UIElement[ZoomSlider@Buttonframe@Radar Window].Value}]
		</OnLoad>
		<X>0</X>
		<Y>0</Y>
		<Width>310</Width>
		<Height>326</Height>
		<Border>0</Border>
		<Visible>0</Visible>
		<Title>Radar ${rwActiveRadar} Configuration</Title>
		<Children>
			<TabControl Name="tab">
				<X>5</X>
				<Y>5</Y>
				<Width>r10</Width>
				<Height>r10</Height>
			  <FrameTexture Template="tabcontrol.FrameTexture">
				<Alpha>.5</Alpha>
			  </FrameTexture>
			  <Tabs>
					<Tab Name="Filters">
					  <commandCheckbox name="FilterMe">
						  <Alpha>10</Alpha>
						  <X>5</X>
							<Y>5</Y>
							<Width>145</Width>
							<Height>18</Height>
							<Text>Show Me</Text>
							<Font Template="Black Font" />
							<Data>${Radar[radar${rwActiveRadar}].ShowingMe}</Data>
							<OnLeftClick>
								Radar[radar${rwActiveRadar}]:FilterMe
							</OnLeftClick>
						</commandCheckbox>
						<commandCheckbox name="FilterNPC">
						  <Alpha>10</Alpha>
						  <X>5</X>
							<Y>25</Y>
							<Width>145</Width>
							<Height>18</Height>
							<Text>Show MOBs</Text>
							<Font Template="Black Font" />
							<Data>${Radar[radar${rwActiveRadar}].ShowingNPCs}</Data>
							<OnLeftClick>
								Radar[radar${rwActiveRadar}]:FilterNPCs
							</OnLeftClick>
						</commandCheckbox>
						<commandCheckbox name="FilterKOS">
						  <Alpha>10</Alpha>
						  <X>5</X>
							<Y>45</Y>
							<Width>145</Width>
							<Height>18</Height>
							<Font Template="Black Font" />
							<Text>Show KOS NPCs</Text>
							<Data>${Radar[radar${rwActiveRadar}].ShowingAggroNPCs}</Data>
							<OnLeftClick>
								Radar[radar${rwActiveRadar}]:FilterAggroNPCs
							</OnLeftClick>
						</commandCheckbox>
						<commandCheckbox name="FilterNamed">
						  <Alpha>10</Alpha>
						  <X>5</X>
							<Y>65</Y>
							<Width>145</Width>
							<Height>18</Height>
							<Font Template="Black Font" />
							<Text>Show Named</Text>
							<Data>${Radar[radar${rwActiveRadar}].ShowingNamedNPCs}</Data>
							<OnLeftClick>
								Radar[radar${rwActiveRadar}]:FilterNamedNPCs
							</OnLeftClick>
						</commandCheckbox>
						<commandCheckbox name="FilterPC">
						  <Alpha>10</Alpha>
						  <X>5</X>
							<Y>85</Y>
							<Width>145</Width>
							<Height>18</Height>
							<Text>Show PCs</Text>
							<Data>${Radar[radar${rwActiveRadar}].ShowingPCs}</Data>
							<Font Template="Black Font" />
							<OnLeftClick>
								Radar[radar${rwActiveRadar}]:FilterPCs
							</OnLeftClick>
						</commandCheckbox>
						<commandCheckbox name="FilterNoKill">
						  <Alpha>10</Alpha>
						  <X>5</X>
							<Y>105</Y>
							<Width>145</Width>
							<Height>18</Height>
							<Font Template="Black Font" />
							<Text>Show NPCs</Text>
							<Data>${Radar[radar${rwActiveRadar}].ShowingNoKillNPCs}</Data>
							<OnLeftClick>
								Radar[radar${rwActiveRadar}]:FilterNoKillNPCs
							</OnLeftClick>
						</commandCheckbox>
						<commandCheckbox name="FilterChests">
						  <Alpha>10</Alpha>
						  <X>5</X>
							<Y>125</Y>
							<Width>145</Width>
							<Height>18</Height>
							<Font Template="Black Font" />
							<Text>Show Chests</Text>
							<Data>${Radar[radar${rwActiveRadar}].ShowingChests}</Data>
							<OnLeftClick>
								Radar[radar${rwActiveRadar}]:FilterChests
							</OnLeftClick>
						</commandCheckbox>
						<commandCheckbox name="FilterUnknown">
							<Alpha>10</Alpha>
							<X>5</X>
							<Y>145</Y>
							<Width>145</Width>
							<Height>18</Height>
							<Font Template="Black Font" />
							<Text>Show Unknown</Text>
							<Data>${Radar[radar${rwActiveRadar}].ShowingUnknowns}</Data>
							<OnLeftClick>
								Radar[radar${rwActiveRadar}]:FilterUnknowns
							</OnLeftClick>
						</commandCheckbox>

						<commandCheckbox name="FilterSpecials">
						  <Alpha>10</Alpha>
						  <X>140</X>
							<Y>25</Y>
							<Width>145</Width>
							<Height>18</Height>
							<Font Template="Black Font" />
							<Text>Show Specials</Text>
							<Data>${Radar[radar${rwActiveRadar}].ShowingSpecials}</Data>
							<OnLeftClick>
								Radar[radar${rwActiveRadar}]:FilterSpecials
							</OnLeftClick>
						</commandCheckbox>
						<commandCheckbox name="FilterResources">
						  <Alpha>10</Alpha>
						  <X>140</X>
							<Y>5</Y>
							<Width>145</Width>
							<Height>18</Height>
							<Font Template="Black Font" />
							<Text>Show Resources</Text>
							<Data>${Radar[radar${rwActiveRadar}].ShowingResources}</Data>
							<OnLeftClick>
								Radar[radar${rwActiveRadar}]:FilterResources
							</OnLeftClick>
						</commandCheckbox>
						<commandCheckbox name="FilterCorpses">
						  <Alpha>10</Alpha>
						  <X>140</X>
							<Y>45</Y>
							<Width>145</Width>
							<Height>18</Height>
							<Font Template="Black Font" />
							<Text>Show Corpses</Text>
							<Data>${Radar[radar${rwActiveRadar}].ShowingCorpses}</Data>
							<OnLeftClick>
								Radar[radar${rwActiveRadar}]:FilterCorpses
							</OnLeftClick>
						</commandCheckbox>
						<commandCheckbox name="FilterTSUnits">
						  <Alpha>10</Alpha>
						  <X>140</X>
							<Y>65</Y>
							<Width>145</Width>
							<Height>18</Height>
							<Font Template="Black Font" />
							<Text>Show Tradeskill</Text>
							<Data>${Radar[radar${rwActiveRadar}].ShowingTSUnits}</Data>
							<OnLeftClick>
								Radar[radar${rwActiveRadar}]:FilterTSUnits
							</OnLeftClick>
						</commandCheckbox>
						<commandCheckbox name="FilterMyPet">
						  <Alpha>10</Alpha>
						  <X>140</X>
							<Y>85</Y>
							<Width>145</Width>
							<Height>18</Height>
							<Font Template="Black Font" />
							<Text>Show My Pet</Text>
							<Data>${Radar[radar${rwActiveRadar}].ShowingMyPet}</Data>
							<OnLeftClick>
								Radar[radar${rwActiveRadar}]:FilterMyPet
							</OnLeftClick>
						</commandCheckbox>
						<commandCheckbox name="FilterPets">
							<Alpha>10</Alpha>
							<X>140</X>
							<Y>105</Y>
							<Width>145</Width>
							<Height>18</Height>
							<Font Template="Black Font" />
							<Text>Show Pets</Text>
							<Data>${Radar[radar${rwActiveRadar}].ShowingPets}</Data>
							<OnLeftClick>
								Radar[radar${rwActiveRadar}]:FilterPets
							</OnLeftClick>
						</commandCheckbox>
						<commandCheckbox name="FilterDoors">
							<Alpha>10</Alpha>
							<X>140</X>
							<Y>125</Y>
							<Width>145</Width>
							<Height>18</Height>
							<Font Template="Black Font" />
							<Text>Show Doors</Text>
							<Data>${Radar[radar${rwActiveRadar}].ShowingDoors}</Data>
							<OnLeftClick>
								Radar[radar${rwActiveRadar}]:FilterDoors
							</OnLeftClick>
						</commandCheckbox>
						<commandCheckbox name="Label Color">
							<Alpha>10</Alpha>
							<X>140</X>
							<Y>145</Y>
							<Width>145</Width>
							<Height>18</Height>
							<Font Template="Black Font" />
							<Text>Label Concolor</Text>
							<Data>${Radar[radar${rwActiveRadar}].ColorizingLabels}</Data>
							<OnLeftClick>
								Radar[radar${rwActiveRadar}]:ColorizeLabels
							</OnLeftClick>
						</commandCheckbox>

						<Text Name="CustomFiltersText">
						  <Alpha>10</Alpha>
						  <X>5</X>
							<Y>165</Y>
							<Width>150</Width>
							<Height>18</Height>
							<Font Template="Black Font" />
							<Text>Custom Filters:</Text>
						</Text>
						<TextEntry Name="FilterEntry">
						  <Alpha>10</Alpha>
						  <X>5</X>
							<Y>185</Y>
							<Width>200</Width>
							<Height>18</Height>
							<MaxLength>100</MaxLength>
							<Text />
						</TextEntry>
						<Listbox Name="FilterList">
						  <Alpha>10</Alpha>
						  <X>5</X>
							<Y>205</Y>
							<Width>200</Width>
							<Height>68</Height>
							<SelectMultiple>0</SelectMultiple>
							<Sort>Text</Sort>
							<Items />
						</Listbox>
						<Button Name="AddTarget">
						  <Alpha>10</Alpha>
						  <X>215</X>
							<Y>165</Y>
							<Width>75</Width>
							<Height>18</Height>
							<Text>Add Tgt</Text>
							<OnLeftClick>
								if ${Target(exists)}
								{
									Radar[radar${rwActiveRadar}]:SetCustomFilter[${Target}]
									rwUpdateFilters radar${rwActiveRadar}
								}
							</OnLeftClick>
						</Button>
						<Button Name="Add">
						  <Alpha>10</Alpha>
						  <X>215</X>
							<Y>185</Y>
							<Width>75</Width>
							<Height>18</Height>
							<Text>Add</Text>
							<OnLeftClick>
								if ${UIElement[FilterEntry@filters@tab@RadarConfig].Text.NotEqual[""]}
								{
									Radar[radar${rwActiveRadar}]:SetCustomFilter[${UIElement[FilterEntry@filters@tab@RadarConfig].Text}]
									UIElement[FilterEntry@filters@tab@RadarConfig]:SetText[""]
									rwUpdateFilters radar${rwActiveRadar}
								}
							</OnLeftClick>
						</Button>
						<Button Name="Remove">
						  <Alpha>10</Alpha>
						  <X>215</X>
							<Y>205</Y>
							<Width>75</Width>
							<Height>18</Height>
							<Text>Remove</Text>
							<OnLeftClick>
								if ${UIElement[FilterList@filters@tab@RadarConfig].SelectedItem(exists)}
								{
									Radar[radar${rwActiveRadar}]:SetCustomFilter[${UIElement[FilterList@filters@tab@RadarConfig].SelectedItem}]
									rwUpdateFilters radar${rwActiveRadar}
								}
							</OnLeftClick>
						</Button>
						<Button Name="Clear">
						  <Alpha>10</Alpha>
						  <X>215</X>
							<Y>225</Y>
							<Width>75</Width>
							<Height>18</Height>
							<Text>Clear</Text>
							<OnLeftClick>
								if ${Radar[radar${rwActiveRadar}].NumCustomFilters}&gt;0
								{
									while ${Radar[radar${rwActiveRadar}].NumCustomFilters}
									{
										Radar[radar${rwActiveRadar}]:SetCustomFilter[${Radar[radar${rwActiveRadar}].CustomFilter[1]}]
									}
									rwUpdateFilters radar${rwActiveRadar}
								}
							</OnLeftClick>
						</Button>
						<Button Name="Refresh">
						  <Alpha>10</Alpha>
						  <X>215</X>
							<Y>245</Y>
							<Width>75</Width>
							<Height>18</Height>
							<Text>Refresh</Text>
							<OnLeftClick>
								rwUpdateFilters radar${rwActiveRadar}
							</OnLeftClick>
						</Button>
					</Tab>
					<Tab Name="Settings">
					  <commandCheckbox name="ShowLabels">
						  <Alpha>10</Alpha>
						  <X>5</X>
							<Y>5</Y>
							<Width>145</Width>
							<Height>18</Height>
							<Text>Show Labels</Text>
							<Font Template="Black Font" />
							<Data>${Radar[radar${rwActiveRadar}].ShowingLabels}</Data>
							<OnLeftClick>
								Radar[radar${rwActiveRadar}]:ShowLabels
							</OnLeftClick>
						</commandCheckbox>
						<commandCheckbox name="Yaxisclip">
						  <Alpha>10</Alpha>
						  <X>5</X>
							<Y>25</Y>
							<Width>145</Width>
							<Height>18</Height>
							<Text>Clip Y Axis</Text>
							<AutoTooltip>EQ2 keeps Height information in the 'Y' axis. This will filter out spawns that are above or below you.</AutoTooltip>
							<Font Template="Black Font" />
							<Data>${Radar[radar${rwActiveRadar}].YAxisClippingOn}</Data>
							<OnLeftClick>
								Radar[radar${rwActiveRadar}]:YAxisClipping
							</OnLeftClick>
						</commandCheckbox>
						<commandCheckbox name="ClipRadius">
						  <Alpha>10</Alpha>
						  <X>5</X>
							<Y>45</Y>
							<Width>145</Width>
							<Height>18</Height>
							<Text>Clip Radius</Text>
							<AutoTooltip>Clip spawns in a radius around the character</AutoTooltip>
							<Font Template="Black Font" />
							<Data>${Radar[radar${rwActiveRadar}].ClipRadiusOn}</Data>
							<OnLeftClick>
								Radar[radar${rwActiveRadar}]:ClipRadius
							</OnLeftClick>
						</commandCheckbox>
						<commandCheckbox name="Rotation">
						  <Alpha>10</Alpha>
						  <X>5</X>
							<Y>65</Y>
							<Width>145</Width>
							<Height>18</Height>
							<Text>Rotation</Text>
							<AutoTooltip>Do you wish the radar to turn with you?</AutoTooltip>
							<Font Template="Black Font" />
							<Data>${Radar[radar${rwActiveRadar}].RotationOn}</Data>
							<OnLeftClick>
								Radar[radar${rwActiveRadar}]:Rotation
							</OnLeftClick>
						</commandCheckbox>
						<commandCheckbox name="TextClip">
						  <Alpha>10</Alpha>
						  <X>5</X>
							<Y>85</Y>
							<Width>145</Width>
							<Height>18</Height>
							<Text>Clip Text</Text>
							<AutoTooltip>This will clip the label text to the borders of the window.</AutoTooltip>
							<Font Template="Black Font" />
							<Data>${Radar[radar${rwActiveRadar}].ClippingTextOn}</Data>
							<OnLeftClick>
								Radar[radar${rwActiveRadar}]:ClipText
							</OnLeftClick>
						</commandCheckbox>
						<Checkbox name='AutoHideButtons'>
						  <Alpha>10</Alpha>
						  <X>5</X>
							<Y>105</Y>
							<Width>145</Width>
							<Height>18</Height>
							<AutoTooltip>This will cause the zoom slider and other radar buttons to hide themselves when the mouse is outside of the window.</AutoTooltip>
							<Font Template="Black Font" />
							<Text>Autohide Buttons/Slider</Text>
							<OnLoad>
								if ${SettingXML[Extensions/isxeq2radarsettings.xml].Set[Radar].GetString[AutoHideButtons,FALSE]}
								{
									This:SetChecked
									timedcommand 3 UIElement[Buttonframe@Radar Window]:SetFadeDelay[1]
								}
							</OnLoad>
							<OnLeftClick>
								UIElement[Buttonframe@Radar Window]:SetFadeDelay[${If[${This.Checked},1,0]}]
								UIElement[Buttonframe@Radar Window]:ResetFade
								SettingXML[Extensions/isxeq2radarsettings.xml].Set[Radar]:Set[AutoHideButtons,${This.Checked}]:Save
							</OnLeftClick>
						</Checkbox>
						<Checkbox name='AutoHideTitle'>
						  <Alpha>10</Alpha>
						  <X>5</X>
							<Y>125</Y>
							<Width>145</Width>
							<Height>18</Height>
							<AutoTooltip>This will cause the radar window titlebar to hide itself when mouse is outside of the window.</AutoTooltip>
							<Font Template="Black Font" />
							<Text>Autohide Window Title</Text>
							<OnLoad>
								if ${SettingXML[Extensions/isxeq2radarsettings.xml].Set[Radar].GetString[AutoHideTitlebar,FALSE]}
								{
									This:SetChecked
									timedcommand 3 UIElement[TitleBar@Radar Window]:SetFadeDelay[1]
								}
							</OnLoad>
							<OnLeftClick>
								UIElement[TitleBar@Radar Window]:SetFadeDelay[${If[${This.Checked},1,0]}]
								UIElement[TitleBar@Radar Window]:ResetFade
								SettingXML[Extensions/isxeq2radarsettings.xml].Set[Radar]:Set[AutoHideTitlebar,${This.Checked}]:Save
							</OnLeftClick>
						</Checkbox>
						<Checkbox name='HideBorder'>
						  <Alpha>10</Alpha>
						  <X>5</X>
							<Y>145</Y>
							<Width>145</Width>
							<Height>18</Height>
							<AutoTooltip>This will completely hide the window border.</AutoTooltip>
							<Font Template="Black Font" />
							<Text>Hide Border</Text>
							<OnLoad>
								if ${SettingXML[Extensions/isxeq2radarsettings.xml].Set[Radar].GetString[HideBorder,FALSE]}
								{
									This:SetChecked
									UIElement[Radar Window]:SetBorder[0]
								}
							</OnLoad>
							<OnLeftClick>
								UIElement[Radar Window]:SetBorder[${If[${This.Checked},0,3]}]
								SettingXML[Extensions/isxeq2radarsettings.xml].Set[Radar]:Set[HideBorder,${This.Checked}]:Save
							</OnLeftClick>
						</Checkbox>
						<Checkbox name='HideSlider'>
						  <Alpha>10</Alpha>
						  <X>5</X>
							<Y>165</Y>
							<Width>145</Width>
							<Height>18</Height>
							<AutoTooltip>This will completely hide the zoom slider.</AutoTooltip>
							<Font Template="Black Font" />
							<Text>Hide Slider</Text>
							<OnLoad>
								if ${SettingXML[Extensions/isxeq2radarsettings.xml].Set[Radar].GetString[HideSlider,FALSE]}
								{
									This:SetChecked
									UIElement[zoom@Buttonframe@Radar Window]:Hide
									UIElement[ZoomSlider@Buttonframe@Radar Window]:Hide
									UIElement[zoomminus@Buttonframe@Radar Window]:Hide
								}
							</OnLoad>
							<OnLeftClick>
								UIElement[zoom@Buttonframe@Radar Window]:ToggleVisible
								UIElement[ZoomSlider@Buttonframe@Radar Window]:ToggleVisible
								UIElement[zoomminus@Buttonframe@Radar Window]:ToggleVisible
								SettingXML[Extensions/isxeq2radarsettings.xml].Set[Radar]:Set[HideSlider,${This.Checked}]:Save
							</OnLeftClick>
						</Checkbox>
					</Tab>
				</Tabs>
			</TabControl>
		</Children>
	</Window>
</ISUI>

