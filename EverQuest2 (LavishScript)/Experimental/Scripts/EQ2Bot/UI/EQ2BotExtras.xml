<?xml version="1.0" encoding="UTF-8" ?>
<ISUI>
	<Commandcheckbox Name='AutoFollow' Template='EQ2.Commandcheckbox'>
		<X>5</X>
		<Y>10</Y>
		<Width>40</Width>
		<Height>20</Height>
		<Text>Enable Auto Follow</Text>
		<AutoTooltip>Select to use EQ2 AutoFollow on the Main Assist instead of EQ2bot Follow</AutoTooltip>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[AutoFollowMode]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[EQ2BotExtras]:Set["Auto Follow Mode",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[AutoFollowMode]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[EQ2BotExtras]:Set["Auto Follow Mode",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[EQ2BotExtras].GetString[Auto Follow Mode]}</Data>
	</Commandcheckbox>
	<combobox name='AutoFollowee' Template='EQ2.Combobox'>
		<x>155</x>
		<y>10</y>
		<Width>150</width>
		<Height>20</height>
		<AutoTooltip>The Group Member to auto follow</AutoTooltip>
		<Items></items>
		<OnLoad>
			This:AddItem[${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[EQ2BotExtras].GetString[AutoFollowee]}]
			This.ItemByValue[${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[EQ2BotExtras].GetString[AutoFollowee]}]:Select
		</OnLoad>
		<OnSelect>
			Script[EQ2Bot].Variable[AutoFollowee]:Set[${This.SelectedItem.Text}]
			SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[EQ2BotExtras]:Set[AutoFollowee,${This.SelectedItem.Text}]:Save</OnSelect>
		<OnLeftClick>
			declare tmpvar int

			This:ClearItems
			tmpvar:Set[1]
				do
				{
					if ${Me.Group[${tmpvar}](exists)}
					{
						This:AddItem[${Me.Group[${tmpvar}].Name}]
					}
				}
				while ${tmpvar:Inc}&lt;=5
		</OnLeftClick>
	</combobox>
	<Commandcheckbox Name='EpicMode' Template='EQ2.Commandcheckbox'>
		<X>375</X>
		<Y>10</Y>
		<Width>40</Width>
		<Height>20</Height>
		<Text>Enable Epic Encounter Logic</Text>
		<AutoTooltip>Select to designate to scripts to use Epic battle routines</AutoTooltip>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[EpicMode]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[EQ2BotExtras]:Set["EpicMode",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[EpicMode]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[EQ2BotExtras]:Set["EpicMode",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[EQ2BotExtras].GetString[EpicMode]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='CombatFollow' Template='EQ2.Commandcheckbox'>
		<X>5</X>
		<Y>30</Y>
		<Width>40</Width>
		<Height>20</Height>
		<Text>Resume Follow after Combat, Zoning, or Rez ONLY</Text>
		<AutoTooltip>A less persistent version of follow</AutoTooltip>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[CombatFollow]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[EQ2BotExtras]:Set["CombatFollow",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[CombatFollow]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[EQ2BotExtras]:Set["CombatFollow",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[EQ2BotExtras].GetString[CombatFollow]}</Data>
	</Commandcheckbox>

	<Commandcheckbox Name='WarnTank' Template='EQ2.Commandcheckbox'>
		<X>5</X>
		<Y>50</Y>
		<Width>40</Width>
		<Height>20</Height>
		<Text>Warn Tank When Aggro</Text>
		<AutoTooltip>Select to automatically send a tell to the main tank when you have an npc on you</AutoTooltip>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[WarnTankWhenAggro]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[EQ2BotExtras]:Set["Warn tank when I have a mob on me",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[WarnTankWhenAggro]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[EQ2BotExtras]:Set["Warn tank when I have a mob on me",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[EQ2BotExtras].GetString[Warn tank when I have a mob on me]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='Shard' Template='EQ2.Commandcheckbox'>
		<Visible>1</Visible>
		<X>5</X>
		<Y>70</Y>
		<Width>80</Width>
		<Height>20</Height>
		<Text>Request Shards From:</Text>
		<AutoTooltip>Select to use Conjuror Shards for power</AutoTooltip>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[ShardMode]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[EQ2BotExtras]:Set["Shard Mode",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[ShardMode]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[EQ2BotExtras]:Set["Shard Mode",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[EQ2BotExtras].GetString[Shard Mode]}</Data>
	</Commandcheckbox>
	<combobox name='ShardGroupMember' Template='EQ2.Combobox'>
		<x>155</x>
		<y>70</y>
		<Width>150</width>
		<Height>20</height>
		<AutoTooltip>The Group Member to request shards from</AutoTooltip>
		<Items></items>
		<OnLoad>
			This:AddItem[${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[EQ2BotExtras].GetString[Shard Group Member]}]
			This.ItemByValue[${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[EQ2BotExtras].GetString[Shard Group Member]}]:Select
		</OnLoad>
		<OnSelect>
			Script[EQ2Bot].Variable[ShardGroupMember]:Set[${This.SelectedItem.Text}]
			SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[EQ2BotExtras]:Set[Shard Group Member,${This.SelectedItem.Text}]:Save</OnSelect>
		<OnLeftClick>
			declare tmpvar int

			This:ClearItems
			tmpvar:Set[1]
			if ${Me.InRaid}
			{
				do
				{
					if ${Me.Raid[${tmpvar}](exists)} &amp;&amp; (${Me.Raid[${tmpvar}].Class.Equal[conjuror]} || ${Me.Raid[${tmpvar}].Class.Equal[necromancer]})
					{
						This:AddItem[${Me.Raid[${tmpvar}].Name}]
					}
				}
				while ${tmpvar:Inc}&lt;=24
			}
			else
			{
				do
				{
					if ${Me.Group[${tmpvar}](exists)} &amp;&amp; (${Me.Group[${tmpvar}].Class.Equal[conjuror]} || ${Me.Group[${tmpvar}].Class.Equal[necromancer]})
					{
						This:AddItem[${Me.Group[${tmpvar}].Name}]
					}
				}
				while ${tmpvar:Inc}&lt;=5
			}
		</OnLeftClick>
	</combobox>
	<Commandcheckbox Name='DoHOs' Template='EQ2.Commandcheckbox'>
		<X>5</X>
		<Y>90</Y>
		<Width>40</Width>
		<Height>20</Height>
		<Text>Participate in HOs</Text>
		<AutoTooltip>Select to advance and complete HOs before casting any other spells</AutoTooltip>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[DoHOs]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[EQ2BotExtras]:Set["DoHOs",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[DoHOs]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[EQ2BotExtras]:Set["DoHOs",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[EQ2BotExtras].GetString[DoHOs]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='PetGuard' Template='EQ2.Commandcheckbox'>
		<X>5</X>
		<Y>110</Y>
		<Width>40</Width>
		<Height>20</Height>
		<Text>Pet Guard Self/Me</Text>
		<AutoTooltip>Select to enable pet guard self and pet guard me after being backed off</AutoTooltip>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[PetGuard]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[EQ2BotExtras]:Set["PetGuard",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[PetGuard]:Set[FALSE]
				EQ2Execute /pet backoff
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[EQ2BotExtras]:Set["PetGuard",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[EQ2BotExtras].GetString[PetGuard]}</Data>
	</Commandcheckbox>

		<Commandcheckbox name='Use Potions' Template='EQ2.Commandcheckbox'>
			<X>5</X>
			<Y>130</Y>
			<Width>100</Width>
			<Height>20</height>
			<Text>Use Potions for cures</Text>
			<OnLeftClick>
				if ${This.Checked}
				{
					Script[EQ2Bot].Variable[UseCurePotions]:Set[TRUE]
					SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[EQ2BotExtras]:Set["Use potions for cures?",TRUE]:Save
				}
				else
				{
					Script[EQ2Bot].Variable[UseCurePotions]:Set[FALSE]
					SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[EQ2BotExtras]:Set["Use potions for cures?",FALSE]:Save
				}
			</OnLeftClick>
			<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[EQ2BotExtras].GetString[Use potions for cures?]}</Data>
		</Commandcheckbox>

		<Text Name='lblArcane' Template='EQ2.text'>
			<X>5</X>
			<Y>150</Y>
			<Width>50</Width>
			<Height>20</Height>
			<Alignment>Left</Alignment>
			<Text>Arcane</Text>
			<AutoTooltip>Potion to use for Arcane</AutoTooltip>
		</Text>
		<combobox name='cbArcane' Template='EQ2.Combobox'>
			<x>75</x>
			<y>150</y>
			<width>250</width>
			<height>20</height>
			<AutoTooltip>Potion to use for Arcane</AutoTooltip>
			<OnLeftClick>
				declare Counter int
				declare ArcaneShort string "Arcane Remedy"
				Counter:Set[1]
				This:ClearItems
				Me:CreateCustomInventoryArray[nonbankonly]
				do
				{
					if ${Me.CustomInventory[${Counter}].Name.Right[13].Equal[${ArcaneShort}]}
					{
						This:AddItem[${Me.CustomInventory[${Counter}].Name}]
					}
				}
				while ${Counter:Inc}&lt;=${Me.CustomInventoryArraySize}
				Counter:Set[1]
				do
				{
					if ${Me.Equipment[${Counter}].Name.Right[13].Equal[${ArcaneShort}]}
					{
						This:AddItem[${Me.Equipment[${Counter}].Name}]
					}
				}
				while ${Counter:Inc}&lt;=22
			</OnLeftClick>
			<OnLoad>
				This:AddItem[${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[EQ2BotExtras].GetString[Arcane Potion Name]}]
				This.ItemByValue[${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[EQ2BotExtras].GetString[Arcane Potion Name]}]:Select
			</OnLoad>
			<OnSelect>
				Script[EQ2Bot].Variable[ArcanePotion]:Set[${This.SelectedItem.Text}]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[EQ2BotExtras]:Set[Arcane Potion Name,${This.SelectedItem.Text}]:Save
			</OnSelect>
		</combobox>

		<Text Name='lblElemental' Template='EQ2.text'>
			<X>10</X>
			<Y>170</Y>
			<Width>50</Width>
			<Height>20</Height>
			<Alignment>Left</Alignment>
			<Text>Elemental</Text>
			<AutoTooltip>Potion to use for Elemental</AutoTooltip>
		</Text>
		<combobox name='cbElemental' Template='EQ2.Combobox'>
			<x>75</x>
			<y>170</y>
			<width>250</width>
			<height>20</height>
			<AutoTooltip>Potion to use for Elemental</AutoTooltip>
			<OnLeftClick>
				declare Counter int
				declare ElementalShort string "Elemental Remedy"
				Counter:Set[1]
				This:ClearItems
				Me:CreateCustomInventoryArray[nonbankonly]
				do
				{
					if ${Me.CustomInventory[${Counter}].Name.Right[16].Equal[${ElementalShort}]}
					{
						This:AddItem[${Me.CustomInventory[${Counter}].Name}]
					}
				}
				while ${Counter:Inc}&lt;=${Me.CustomInventoryArraySize}
				Counter:Set[1]
				do
				{
					if ${Me.Equipment[${Counter}].Name.Right[16].Equal[${ElementalShort}]}
					{
						This:AddItem[${Me.Equipment[${Counter}].Name}]
					}
				}
				while ${Counter:Inc}&lt;=22
			</OnLeftClick>
			<OnLoad>
				This:AddItem[${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[EQ2BotExtras].GetString[Elemental Potion Name]}]
				This.ItemByValue[${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[EQ2BotExtras].GetString[Elemental Potion Name]}]:Select
			</OnLoad>
			<OnSelect>
				Script[EQ2Bot].Variable[ElementalPotion]:Set[${This.SelectedItem.Text}]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[EQ2BotExtras]:Set[Elemental Potion Name,${This.SelectedItem.Text}]:Save
			</OnSelect>
		</combobox>

		<Text Name='lblNoxious' Template='EQ2.text'>
			<X>10</X>
			<Y>190</Y>
			<Width>50</Width>
			<Height>20</Height>
			<Alignment>Left</Alignment>
			<Text>Noxious</Text>
			<AutoTooltip>Potion to use for Noxious</AutoTooltip>
		</Text>
		<combobox name='cbNoxious' Template='EQ2.Combobox'>
			<x>75</x>
			<y>190</y>
			<width>250</width>
			<height>20</height>
			<AutoTooltip>Potion to use for Noxious</AutoTooltip>
			<OnLeftClick>
				declare Counter int
				declare NoxiousShort string "Noxious Remedy"
				Counter:Set[1]
				This:ClearItems
				Me:CreateCustomInventoryArray[nonbankonly]
				do
				{
					if ${Me.CustomInventory[${Counter}].Name.Right[14].Equal[${NoxiousShort}]}
					{
						This:AddItem[${Me.CustomInventory[${Counter}].Name}]
					}
				}
				while ${Counter:Inc}&lt;=${Me.CustomInventoryArraySize}
				Counter:Set[1]
				do
				{
					if ${Me.Equipment[${Counter}].Name.Right[14].Equal[${NoxiousShort}]}
					{
						This:AddItem[${Me.Equipment[${Counter}].Name}]
					}
				}
				while ${Counter:Inc}&lt;=22
			</OnLeftClick>
			<OnLoad>
				This:AddItem[${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[EQ2BotExtras].GetString[Noxious Potion Name]}]
				This.ItemByValue[${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[EQ2BotExtras].GetString[Noxious Potion Name]}]:Select
			</OnLoad>
			<OnSelect>
				Script[EQ2Bot].Variable[NoxiousPotion]:Set[${This.SelectedItem.Text}]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[EQ2BotExtras]:Set[Noxious Potion Name,${This.SelectedItem.Text}]:Save
			</OnSelect>
		</combobox>

		<Text Name='lblTrauma' Template='EQ2.text'>
			<X>10</X>
			<Y>210</Y>
			<Width>50</Width>
			<Height>20</Height>
			<Alignment>Left</Alignment>
			<Text>Trauma</Text>
			<AutoTooltip>Potion to use for Trauma</AutoTooltip>
		</Text>
		<combobox name='cbTrauma' Template='EQ2.Combobox'>
			<x>75</x>
			<y>210</y>
			<width>250</width>
			<height>20</height>
			<AutoTooltip>Potion to use for Trauma</AutoTooltip>
			<OnLeftClick>
				declare Counter int
				declare TraumaShort string "Trauma Remedy"
				Counter:Set[1]
				This:ClearItems
				Me:CreateCustomInventoryArray[nonbankonly]
				do
				{
					if ${Me.CustomInventory[${Counter}].Name.Right[13].Equal[${TraumaShort}]}
					{
						This:AddItem[${Me.CustomInventory[${Counter}].Name}]
					}
				}
				while ${Counter:Inc}&lt;=${Me.CustomInventoryArraySize}
				Counter:Set[1]
				do
				{
					if ${Me.Equipment[${Counter}].Name.Right[13].Equal[${TraumaShort}]}
					{
						This:AddItem[${Me.Equipment[${Counter}].Name}]
					}
				}
				while ${Counter:Inc}&lt;=22
			</OnLeftClick>
			<OnLoad>
				This:AddItem[${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[EQ2BotExtras].GetString[Trauma Potion Name]}]
				This.ItemByValue[${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[EQ2BotExtras].GetString[Trauma Potion Name]}]:Select
			</OnLoad>
			<OnSelect>
				Script[EQ2Bot].Variable[TraumaPotion]:Set[${This.SelectedItem.Text}]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[EQ2BotExtras]:Set[Trauma Potion Name,${This.SelectedItem.Text}]:Save
			</OnSelect>
		</combobox>

`</ISUI>