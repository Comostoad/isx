<?xml version="1.0" encoding="UTF-8"?>
<ISUI>
	<!-- This is a tab to be "injected" into other LGUI Pieces by PatherGUI.ISS -->
	<Button name='ClearButton'>
		<X>6%</X>
		<Y>2%</Y>
		<Width>18%</Width>
		<Height>6%</Height>
		<Text>Clear</Text>
		<AutoTooltip>Reload All Points</AutoTooltip>
		<OnLeftClick>
			Navigation -reset
			This.Parent.FindUsableChild[PatherGUINavpointListbox,listbox]:ClearItems
		</OnLeftClick>
	</Button>
	<Button name='ReloadButton'>
		<X>6%</X>
		<Y>8%</Y>
		<Width>18%</Width>
		<Height>6%</Height>
		<Text>Reload</Text>
		<AutoTooltip>Reload All Points</AutoTooltip>
		<OnLeftClick>
			Navigation -reset
			Navigation -load "${PatherFilepath}${Zone.ShortName}.xml"
			DeclareVariable i int local 0
			DeclareVariable pointdisp string local
			This.Parent.FindUsableChild[PatherGUINavpointListbox,listbox]:ClearItems
			while ${i:Inc} &lt;= ${Navigation.World[${Zone.ShortName}].Points}
				executeatom PGUIAddToListbox ${i}
			executeatom PGUIUpdateTimestamp
			This.Parent.FindChild[AddTextentry]:SetText[${Zone.ShortName}_${PGUIGlobalTimestamp}]
		</OnLeftClick>
		<OnLoad>
			declarevariable PGUIGlobalTimestamp int global
			addatom -global "atom PGUIAddToListbox(int point)\n{\nDeclareVariable pointdisp string local\npointdisp:Set[\"\${point.LeadingZeroes[3]}: \${Navigation.World[\${Zone.ShortName}].Point[\${point}]}\"]\nif \${Navigation.World[\${Zone.ShortName}].Point[\${point}].Note.Equal[keypoint]}\npointdisp:Concat[\"*\"]\nwhile \${pointdisp.Length} &lt; 40\npointdisp:Concat[\" \"]\nUIElement[screen].FindUsableChild[PatherGUINavpointListbox,listbox]:AddItem[\"\${pointdisp}(\${Navigation.World[\${Zone.ShortName}].Point[\${point}].X.Centi},\${Navigation.World[\${Zone.ShortName}].Point[\${point}].Y.Centi},\${Navigation.World[\${Zone.ShortName}].Point[\${point}].Z.Centi})\",\${point}]\n}"
			addatom -global "atom PGUIUpdateTimestamp()\n{\nPGUIGlobalTimestamp:Set[\${Time.Timestamp}]\n}"
		</OnLoad>
		<OnUnload>
			deletevariable PGUIGlobalTimestamp
			deleteatom -global PGUIAddToListbox
			deleteatom -global PGUIUpdateTimestamp
		</OnUnload>
	</Button>
	<Button name='RemoveButton'>
		<X>6%</X>
		<Y>14%</Y>
		<Width>18%</Width>
		<Height>6%</Height>
		<Text>Remove</Text>
		<AutoTooltip>Remove Selected Points (Remaining points will be saved to file)</AutoTooltip>
		<OnLeftClick>
			DeclareVariable i int local 0
			echo ${This.Parent.FindUsableChild[PatherGUINavpointListbox,listbox].SelectedItems}
			while ${i:Inc} &lt;=${This.Parent.FindUsableChild[PatherGUINavpointListbox,listbox].SelectedItems}
			{
				Navigation.World[${Zone.ShortName}].Point[${This.Parent.FindUsableChild[PatherGUINavpointListbox,listbox].SelectedItem[${i}].Value}]:Delete
			}
			Navigation -dump "${PatherFilepath}${Zone.ShortName}.xml"
			Navigation -reset
			Navigation -load "${PatherFilepath}${Zone.ShortName}.xml"
			This.Parent.FindUsableChild[PatherGUINavpointListbox,listbox]:ClearItems
			i:Set[0]
			while ${i:Inc} &lt;= ${Navigation.World[${Zone.ShortName}].Points}
				executeatom PGUIAddToListbox ${i}
			executeatom PGUIUpdateTimestamp
			This.Parent.FindChild[AddTextentry]:SetText[${Zone.ShortName}_${PGUIGlobalTimestamp}]
		</OnLeftClick>
	</Button>
	<Button name='AddButton'>
		<X>25%</X>
		<Y>8%</Y>
		<Width>18%</Width>
		<Height>6%</Height>
		<Text>Add</Text>
		<AutoTooltip>Adds a point with the name given</AutoTooltip>
		<OnLeftClick>
			if ${PGUIGlobalTimestamp}!=${Time.Timestamp}
			{
				NavPoint -set "${Zone.ShortName}" "${This.Parent.FindChild[AddTextentry].Text}" ${Me.X} ${Me.Y} ${Me.Z}
				if ${Navigation.World[${Zone.ShortName}].Points}>1
				{
					NavPoint -connect -bidirectional "${Zone.ShortName}" "${Navigation.World[${Zone.ShortName}].Point[${Math.Calc[${Navigation.World[${Zone.ShortName}].Points}-1].Int}].Name}" "${This.Parent.FindChild[AddTextentry].Text}"
				}
				if ${This.Parent.FindChild[AddTextentry].Text.NotEqual[${Zone.ShortName}_${PGUIGlobalTimestamp}]}
					Navigation.World[${Zone.ShortName}].Point[${This.Parent.FindChild[AddTextentry].Text}]:SetNote[keypoint]
				executeatom PGUIUpdateTimestamp
				This.Parent.FindChild[AddTextentry]:SetText[${Zone.ShortName}_${PGUIGlobalTimestamp}]
				executeatom PGUIAddToListbox ${Navigation.World[${Zone.ShortName}].Points}
				announce "\\#FF6E6ENavigational Point Added" 1 2
			}
			else
			{
				echo Please wait at least 1 second between adding new nav points
			}
		</OnLeftClick>
	</Button>
	<Text name='AddText'>
		<X>46%</X>
		<Y>8%</Y>
		<Width>20%</Width>
		<Height>6%</Height>
		<Text>A point named:</Text>
	</Text>
	<Textentry name='AddTextentry'>
		<X>75%</X>
		<Y>8%</Y>
		<Width>20%</Width>
		<Height>6%</Height>
		<MaxLength>128</MaxLength>
		<OnLoad>
			executeatom PGUIUpdateTimestamp
			This:SetText[${Zone.ShortName}_${PGUIGlobalTimestamp}]
		</OnLoad>
	</Textentry>
	<Button name='AutoButton'>
		<X>25%</X>
		<Y>14%</Y>
		<Width>18%</Width>
		<Height>6%</Height>
		<Text>Auto Plot</Text>
		<OnLoad>
			DeclareVariable PGUIAutoX float global
			DeclareVariable PGUIAutoZ float global
			DeclareVariable PGUIAutoHeading float global
			DeclareVariable PGUIAutoPathing bool global FALSE
		</Onload>
		<OnUnLoad>
			DeleteVariable PGUIAutoX
			DeleteVariable PGUIAutoZ
			DeleteVariable PGUIAutoHeading
			DeleteVariable PGUIAutoPathing
		</OnUnLoad>
		<OnLeftClick>
			PGUIAutoPathing:Toggle
			This:SetText[${If[${PGUIAutoPathing},Plotting,Auto Plot]}]
			PGUIAutoX:Set[${Me.X}]
			PGUIAutoZ:Set[${Me.Z}]
			PGUIAutoHeading:Set[${If[${Me.Heading}&gt;360,${Math.Calc[${Me.Heading}-360]},${Me.Heading}]}]
		</OnLeftClick>
		<OnRender>
			if ${PGUIAutoPathing}
			{
				if ${Math.Distance[${Me.X},${Me.Z},${PGUIAutoX},${PGUIAutoZ}]} &gt;= ${Float[${This.Parent.FindChild[slidervalue].Text}]} &amp;&amp; ${Math.Calc[${Me.Heading}-360]}!=${PGUIAutoHeading} &amp;&amp; ${Me.Heading}!=${PGUIAutoHeading}
				{
					echo plotting a new point
					if ${PGUIGlobalTimestamp}!=${Time.Timestamp}
					{
						NavPoint -set "${Zone.ShortName}" "${This.Parent.FindChild[AddTextentry].Text}" ${Me.X} ${Me.Y} ${Me.Z}
						if ${Navigation.World[${Zone.ShortName}].Points}>1
						{
							NavPoint -connect -bidirectional "${Zone.ShortName}" "${Navigation.World[${Zone.ShortName}].Point[${Math.Calc[${Navigation.World[${Zone.ShortName}].Points}-1].Int}].Name}" "${This.Parent.FindChild[AddTextentry].Text}"
						}
						if ${This.Parent.FindChild[AddTextentry].Text.NotEqual[${Zone.ShortName}_${PGUIGlobalTimestamp}]}
							Navigation.World[${Zone.ShortName}].Point[${This.Parent.FindChild[AddTextentry].Text}]:SetNote[keypoint]
						executeatom PGUIUpdateTimestamp
						This.Parent.FindChild[AddTextentry]:SetText[${Zone.ShortName}_${PGUIGlobalTimestamp}]
						executeatom PGUIAddToListbox ${Navigation.World[${Zone.ShortName}].Points}
					}
					PGUIAutoX:Set[${Me.X}]
					PGUIAutoZ:Set[${Me.Z}]
					PGUIAutoHeading:Set[${If[${Me.Heading}&gt;360,${Math.Calc[${Me.Heading}-360]},${Me.Heading}]}]
				}
			}
		</OnRender>
	</Button>
	<Text name='AutoText'>
		<X>46%</X>
		<Y>15%</Y>
		<Width>25%</Width>
		<Height>6%</Height>
		<Text>Min distance:</Text>
	</Text>
	<Text name='SliderValue'>
		<X>68%</X>
		<Y>16%</Y>
		<Width>8%</Width>
		<Height>6%</Height>
		<Font>
			<Color>FFFF80FF</Color>
		</Font>
	</Text>
	<Slider name='AutoSlider'>
		<X>75%</X>
		<Y>14%</Y>
		<Width>20%</Width>
		<Height>6%</Height>
		<Range>98</Range>
		<OnLoad>
			This:SetValue[8]
			This.Parent.FindChild[SliderValue]:SetText[${Math.Calc[${This.Value}+2].Int}]
		</OnLoad>
		<OnChange>
			This.Parent.FindChild[SliderValue]:SetText[${Math.Calc[${This.Value}+2].Int}]
		</OnChange>
	</Slider>
	<Frame name='Navpoint Frame'>
		<X>1%</X>
		<Y>20%</Y>
		<Height>80%</Height>
		<Width>99%</Width>
		<Visible>1</Visible>
		<Children>
			<Button name='Navpoint Title'>
				<X>0</X>
				<Y>0</Y>
				<Width>100%</Width> 
				<Height>5%</Height> 
				<TextColor>FFEECC00</TextColor>
				<Text>save ${If[${Navigation.World[${Zone.ShortName}].Points},${Navigation.World[${Zone.ShortName}].Points},0]} navigation points</Text>
				<OnLeftClick>
					Navigation -dump "${PatherFilepath}${Zone.ShortName}.xml"
					announce "Navigational Points have been Saved" 1 3
					EQ2Echo Your pathing changes have been saved, please restart your script.
				</OnLeftClick>
			</Button>
			<Listbox name='PatherGUINavpointListbox'>
				<X>0</X>
				<Y>5%</Y>
				<Width>100%</Width>
				<Height>95%</Height>
				<Font>
					<Name>terminal</Name>
					<Size>10</Size>
				</Font>
				<Texture />
				<SelectMultiple>1</SelectMultiple>
				<Sort>Value</Sort>
				<OnLoad>
					DeclareVariable i int local 0
					DeclareVariable pointdisp string local
					while ${i:Inc} &lt;= ${Navigation.World[${Zone.ShortName}].Points}
					{
						pointdisp:Set["${i.LeadingZeroes[3]}: ${Navigation.World[${Zone.ShortName}].Point[${i}]}"]
						if ${Navigation.World[${Zone.ShortName}].Point[${i}].Note.Equal[keypoint]}
							pointdisp:Concat["*"]
						while ${pointdisp.Length} &lt; 40
							pointdisp:Concat[" "]
						This:AddItem["${pointdisp}(${Navigation.World[${Zone.ShortName}].Point[${i}].X.Centi},${Navigation.World[${Zone.ShortName}].Point[${i}].Y.Centi},${Navigation.World[${Zone.ShortName}].Point[${i}].Z.Centi})",${i}]
					}
				</OnLoad>
			</Listbox>
		</Children>
	</Frame>
</ISUI>
