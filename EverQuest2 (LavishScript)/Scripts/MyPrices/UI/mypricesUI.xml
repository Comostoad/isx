<?xml version="1.0" encoding="UTF-8"?>
<ISUI>
	<!-- Main Window -->
	<Window Name='MyPrices'>
	<X>5%</X>
	<Y>10%</Y>
	<Width>475</Width>
	<Height>600</Height>
	<StorePosition>1</StorePosition>
	<Title>MyPrices Broker system</Title>
	  <TitleBar template='window.Titlebar'>
		<Children>
		  <Text Name='Title' Template='window.Titlebar.Title' />
		  <Button Name='Minimize' Template='window.Titlebar.Minimize' />
		  <Button Name='Maximize' Template='window.Titlebar.Maximize' />
		  <commandbutton name='Custom Close Button' Template='window.Titlebar.Close'>
			<Command>Script[myprices]:End</Command>
		  </commandbutton>
		</Children>
	  </TitleBar>
	  <Children>
		<Tabcontrol Name='GUITabs'>
		  <X>1%</X>
		  <Y>1%</Y>
		  <Height>98%</Height>
		  <Width>98%</Width>
		  <Tabs>
			<Tab Name='Sell'>
			  <Text name='ConfigSell Text'>
				<X>5%</X>
				<Y>10</Y>
						<Width>80%</Width>
						<Height>20</Height>
						<Alignment>Left</Alignment>
						<Font>
							<Color>FFFFFFE5</Color>
						</Font>
						<Text>MyPrices Options:</Text>
					</Text>
					<Text name='Errortext'>
						<X>5%</X>
						<Y>30</Y>
						<Width>80%</Width>
						<Height>20</Height>
						<Alignment>Left</Alignment>
						<Font>
							<Color>FFFFFFE5</Color>
						</Font>
					</Text>
					<checkbox Name='MatchLowPrice'>
						<X>5%</X>
						<Y>50</Y>
						<Width>20%</Width>
						<Height>20</Height>
						<Text>Auto-Match Lower Prices</Text>
						<AutoTooltip>
							Automatically match any prices lower than your own.
						</AutoTooltip>
						<OnLoad>
							if ${Script[myprices].VariableScope.MatchLowPrice}
							{
								UIElement[MatchLowPrice@Sell@GUITabs@MyPrices]:SetChecked
							}
							else
							{
								UIElement[MatchLowPrice@Sell@GUITabs@MyPrices]:UnsetChecked
							}
						</OnLoad>
						<OnLeftClick>
							if ${UIElement[MatchLowPrice@Sell@GUITabs@MyPrices].Checked}
							{
								Script[myprices]:QueueCommand[call SaveSetting MatchLowPrice TRUE]
								Script[myprices].VariableScope.MatchLowPrice:Set[TRUE]
							}
							else
							{
								Script[myprices]:QueueCommand[call SaveSetting MatchLowPrice FALSE]
								Script[myprices].VariableScope.MatchLowPrice:Set[FALSE]
							}
						</OnLeftClick>
					</checkbox>
					<checkbox Name='MerchantMatch'>
						<X>5%</X>
						<Y>70</Y>
						<Width>20%</Width>
						<Height>20</Height>
						<Text>Merchant Match</Text>
						<AutoTooltip>
							Don't set prices below what a merchant will buy an item for.
						</AutoTooltip>
						<OnLoad>
						if ${Script[myprices].VariableScope.MerchantMatch}
						{
							UIElement[MerchantMatch@Sell@GUITabs@MyPrices]:SetChecked
						}
						else
						{
							UIElement[MerchantMatch@Sell@GUITabs@MyPrices]:UnsetChecked
						}
						</OnLoad>
						<OnLeftClick>
							if ${UIElement[MerchantMatch@Sell@GUITabs@MyPrices].Checked}
							{
								Script[myprices]:QueueCommand[call SaveSetting MerchantMatch TRUE]
								Script[myprices].VariableScope.MerchantMatch:Set[TRUE]
							}
							else
							{
								Script[myprices]:QueueCommand[call SaveSetting MerchantMatch FALSE]
								Script[myprices].VariableScope.MerchantMatch:Set[FALSE]
							}
						</OnLeftClick>
					</checkbox>
					<checkbox Name='MatchHighPrice'>
						<X>5%</X>
						<Y>90</Y>
						<Width>20%</Width>
						<Height>20</Height>
						<Text>Auto-Match Higher Prices</Text>
						<AutoTooltip>
							Automatically match your prices to the next Lowest Price if your prices are too low.
						</AutoTooltip>
						<OnLoad>
						if ${Script[myprices].VariableScope.IncreasePrice}
						{
							UIElement[MatchHighPrice@Sell@GUITabs@MyPrices]:SetChecked
						}
						else
						{
							UIElement[MatchHighPrice@Sell@GUITabs@MyPrices]:UnsetChecked
						}
						</OnLoad>
						<OnLeftClick>
							if ${UIElement[MatchHighPrice@Sell@GUITabs@MyPrices].Checked}
							{
								Script[myprices]:QueueCommand[call SaveSetting IncreasePrice TRUE]
								Script[myprices].VariableScope.IncreasePrice:Set[TRUE]
							}
							else
							{
								Script[myprices]:QueueCommand[call SaveSetting IncreasePrice FALSE]
								Script[myprices].VariableScope.IncreasePrice:Set[FALSE]
							}
						</OnLeftClick>
					</checkbox>
					<checkbox Name='SetUnlistedPrices'>
						<X>5%</X>
						<Y>110</Y>
						<Width>20%</Width>
						<Height>20</Height>
						<Text>Set Prices for Unlisted items</Text>
						<AutoTooltip>
							Match prices of Unlisted items and mark them for sale.
						</AutoTooltip>
						<OnLoad>
						if ${Script[myprices].VariableScope.SetUnlistedPrices}
						{
							UIElement[SetUnlistedPrices@Sell@GUITabs@MyPrices]:SetChecked
						}
						else
						{
							UIElement[SetUnlistedPrices@Sell@GUITabs@MyPrices]:UnsetChecked
						}
						</OnLoad>
						<OnLeftClick>
							if ${UIElement[SetUnlistedPrices@Sell@GUITabs@MyPrices].Checked}
							{
								Script[myprices]:QueueCommand[call SaveSetting SetUnlistedPrices TRUE]
								Script[myprices].VariableScope.SetUnlistedPrices:Set[TRUE]
							}
							else
							{
								Script[myprices]:QueueCommand[call SaveSetting SetUnlistedPrices FALSE]
								Script[myprices].VariableScope.SetUnlistedPrices:Set[FALSE]
							}
						</OnLeftClick>
					</checkbox>
					<checkbox Name='IgnoreCopper'>
						<X>5%</X>
						<Y>130</Y>
						<Width>20%</Width>
						<Height>20</Height>
						<Text>Ignore Copper</Text>
						<AutoTooltip>
							If your price is > 1 gold then ignore copper
						</AutoTooltip>
						<OnLoad>
						if ${Script[myprices].VariableScope.IgnoreCopper}
						{
							UIElement[IgnoreCopper@Sell@GUITabs@MyPrices]:SetChecked
						}
						else
						{
							UIElement[IgnoreCopper@Sell@GUITabs@MyPrices]:UnsetChecked
						}
						</OnLoad>
						<OnLeftClick>
							if ${UIElement[IgnoreCopper@Sell@GUITabs@MyPrices].Checked}
							{
								Script[myprices]:QueueCommand[call SaveSetting IgnoreCopper TRUE]
								Script[myprices].VariableScope.IgnoreCopper:Set[TRUE]
							}
							else
							{
								Script[myprices]:QueueCommand[call SaveSetting IgnoreCopper FALSE]
								Script[myprices].VariableScope.IgnoreCopper:Set[FALSE]
							}
						</OnLeftClick>
					</checkbox>
					<checkbox Name='ScanSellNonStop'>
						<X>5%</X>
						<Y>150</Y>
						<Width>20%</Width>
						<Height>20</Height>
						<Text>Auto-Loop</Text>
						<AutoTooltip>
							Keep scanning your Sale items in a constant loop.
						</AutoTooltip>
						<OnLoad>
						if ${Script[myprices].VariableScope.ScanSellNonStop}
						{
							UIElement[ScanSellNonStop@Sell@GUITabs@MyPrices]:SetChecked
						}
						else
						{
							UIElement[ScanSellNonStop@Sell@GUITabs@MyPrices]:UnsetChecked
						}
						</OnLoad>
						<OnLeftClick>
							if ${UIElement[ScanSellNonStop@Sell@GUITabs@MyPrices].Checked}
							{
								Script[myprices]:QueueCommand[call SaveSetting ScanSellNonStop TRUE]
								Script[myprices].VariableScope.ScanSellNonStop:Set[TRUE]
							}
							else
							{
								Script[myprices]:QueueCommand[call SaveSetting ScanSellNonStop FALSE]
								Script[myprices].VariableScope.ScanSellNonStop:Set[FALSE]
							}
						</OnLeftClick>
					</checkbox>
					<checkbox Name='Logging'>
						<X>5%</X>
						<Y>170</Y>
						<Width>20%</Width>
						<Height>20</Height>
						<Text>Logging</Text>
						<AutoTooltip>
							Turn on Logging
						</AutoTooltip>
						<OnLoad>
						if ${Script[myprices].VariableScope.Logging}
						{
							UIElement[Logging@Sell@GUITabs@MyPrices]:SetChecked
						}
						else
						{
							UIElement[Logging@Sell@GUITabs@MyPrices]:UnsetChecked
						}
						</OnLoad>
						<OnLeftClick>
							if ${UIElement[Logging@Sell@GUITabs@MyPrices].Checked}
							{
								Script[myprices]:QueueCommand[call SaveSetting Logging TRUE]
								Script[myprices].VariableScope.Logging:Set[TRUE]
							}
							else
							{
								Script[myprices]:QueueCommand[call SaveSetting Logging FALSE]
								Script[myprices].VariableScope.Logging:Set[FALSE]
							}
						</OnLeftClick>
					</checkbox>
					<checkbox Name='Natural'>
						<X>5%</X>
						<Y>190</Y>
						<Width>20%</Width>
						<Height>20</Height>
						<Text>Natural Scan</Text>
						<AutoTooltip>
							Perform more natural scans
						</AutoTooltip>
						<OnLoad>
						if ${Script[myprices].VariableScope.Natural}
						{
							UIElement[Natural@Sell@GUITabs@MyPrices]:SetChecked
						}
						else
						{
							UIElement[Natural@Sell@GUITabs@MyPrices]:UnsetChecked
						}
						</OnLoad>
						<OnLeftClick>
							if ${UIElement[Natural@Sell@GUITabs@MyPrices].Checked}
							{
								Script[myprices]:QueueCommand[call SaveSetting Natural TRUE]
								Script[myprices].VariableScope.Natural:Set[TRUE]
							}
							else
							{
								Script[myprices]:QueueCommand[call SaveSetting Natural FALSE]
								Script[myprices].VariableScope.Natural:Set[FALSE]
							}
						</OnLeftClick>
					</checkbox>
					<checkbox Name='ActualPrice'>
						<X>5%</X>
						<Y>210</Y>
						<Width>20%</Width>
						<Height>20</Height>
						<Text>Match Without Broker %</Text>
						<AutoTooltip>
							Match Prices without Broker fee.
						</AutoTooltip>
						<OnLoad>
						if ${Script[myprices].VariableScope.MatchActual}
						{
							UIElement[ActualPrice@Sell@GUITabs@MyPrices]:SetChecked
						}
						else
						{
							UIElement[ActualPrice@Sell@GUITabs@MyPrices]:UnsetChecked
						}
						</OnLoad>
						<OnLeftClick>
							if ${UIElement[ActualPrice@Sell@GUITabs@MyPrices].Checked}
							{
								Script[myprices]:QueueCommand[call SaveSetting ActualPrice TRUE]
								Script[myprices].VariableScope.MatchActual:Set[TRUE]
							}
							else
							{
								Script[myprices]:QueueCommand[call SaveSetting ActualPrice FALSE]
								Script[myprices].VariableScope.MatchActual:Set[FALSE]
							}
						</OnLeftClick>
					</checkbox>
					<checkbox Name='TakeCoin'>
						<X>5%</X>
						<Y>230</Y>
						<Width>20%</Width>
						<Height>20</Height>
						<Text>Take Coin</Text>
						<AutoTooltip>
							Take Coin From Broker boxes.
						</AutoTooltip>
						<OnLoad>
						if ${Script[myprices].VariableScope.TakeCoin}
						{
							UIElement[TakeCoin@Sell@GUITabs@MyPrices]:SetChecked
						}
						else
						{
							UIElement[TakeCoin@Sell@GUITabs@MyPrices]:UnsetChecked
						}
						</OnLoad>
						<OnLeftClick>
							if ${UIElement[TakeCoin@Sell@GUITabs@MyPrices].Checked}
							{
								Script[myprices]:QueueCommand[call SaveSetting TakeCoin TRUE]
								Script[myprices].VariableScope.TakeCoin:Set[TRUE]
							}
							else
							{
								Script[myprices]:QueueCommand[call SaveSetting TakeCoin FALSE]
								Script[myprices].VariableScope.TakeCoin:Set[FALSE]
							}
						</OnLeftClick>
					</checkbox>
					
					<Text Name='Normal'>
						<X>5%</X>
						<Y>270</Y>
						<Width>30%</Width> 
						<Height>15</Height>
						<Text>Black : Not Changed</Text>
					</Text>
					<Text Name='Red'>
						<X>5%</X>
						<Y>285</Y>
						<Width>30%</Width> 
						<Height>15</Height>
						<Text>Red : Unable to match</Text>
					</Text>
					<Text Name='Blue'>
						<X>5%</X>
						<Y>300</Y>
						<Width>30%</Width> 
						<Height>15</Height>
						<Text>Blue : New Item Listed</Text>
					</Text>
					<Text Name='Orange'>
						<X>5%</X>
						<Y>315</Y>
						<Width>30%</Width> 
						<Height>15</Height>
						<Text>Orange : Item Sold</Text>
					</Text>
					<Text Name='Yellow'>
						<X>5%</X>
						<Y>330</Y>
						<Width>30%</Width> 
						<Height>15</Height>
						<Text>Yellow : Craft Flagged</Text>
					</Text>
					<Text Name='PauseTimerText'>
						<X>25</X>
						<Y>350</Y>
						<Width>150</Width> 
						<Height>15</Height>
						<Text>Delay in Minutes :</Text>
					</Text>

					<Textentry Name='PauseTimer'>
						<X>140</X>
						<Y>350</Y>
						<Width>30</Width> 
						<Height>15</Height>
						<MaxLength>3</MaxLength>
						<OnLoad>
							UIElement[PauseTimer@Sell@GUITabs@MyPrices]:SetText[${Script[myprices].VariableScope.PauseTimer}]
						</OnLoad>
					</Textentry>
					<Commandbutton name='Craft'>
						<X>5%</X>
						<Y>370</Y>
						<Width>80</Width>
						<Height>18</Height>
						<Text>Craft List</Text>
						<AutoTooltip>
							Create recipe list for Craft.
						</AutoTooltip>
						<OnLeftClick>
							UIElement[Errortext@Sell@GUITabs@MyPrices]:SetText[" **Making List**"]
							Script[myprices]:QueueCommand[call LoadList]
							Script[myprices]:QueueCommand[call checkstock]
						</OnLeftClick>
					</Commandbutton>
					<Commandbutton name='RunCraft'>
						<X>23%</X>
						<Y>370</Y>
						<Width>90</Width>
						<Height>18</Height>
						<Text>Craft _myprices</Text>
						<AutoTooltip>
							Run Craft _myprices and Exit script
						</AutoTooltip>
						<OnLeftClick>
							UIElement[Errortext@Sell@GUITabs@MyPrices]:SetText[" Running Craft "]
							craft ${Me.TSSubClass}-_myprices
							Script[myprices].VariableScope.Exitmyprices:Set[TRUE]
						</OnLeftClick>
					</Commandbutton>
					<Commandbutton name='Place'>
						<X>5%</X>
						<Y>395</Y>
						<Width>80</Width>
						<Height>18</Height>
						<Text>Place Items</Text>
						<AutoTooltip>
							Put your crafted items on the broker.
						</AutoTooltip>
						<OnLeftClick>
							UIElement[Errortext@Sell@GUITabs@MyPrices]:SetText[" **Placing Items**"]
							Script[myprices]:QueueCommand[call buy item place]
						</OnLeftClick>
					</Commandbutton>
					<Text Name='Itemname'>
						<X>25</X>
						<Y>415</Y>
						<Width>44%</Width> 
						<Height>15</Height>
					</Text>
					<Text Name='Label1'>
						<X>25</X>
						<Y>430</Y>
						<Width>80</Width> 
						<Height>15</Height>
						<Text>Current Price</Text>
					</Text>
					<Textentry Name='PlatPrice'>
						<X>125</X>
						<Y>430</Y>
						<Width>50</Width> 
						<Height>15</Height>
						<MaxLength>5</MaxLength>
					</Textentry>
					<Text Name='PlatPriceText'>
						<X>180</X>
						<Y>430</Y>
						<Width>20</Width> 
						<Height>15</Height>
						<Text>PP</Text>
					</Text>
					<Textentry Name='GoldPrice'>
						<X>205</X>
						<Y>430</Y>
						<Width>30</Width> 
						<Height>15</Height>
						<MaxLength>3</MaxLength>
					</Textentry>
					<Text Name='GoldPriceText'>
						<X>240</X>
						<Y>430</Y>
						<Width>20</Width> 
						<Height>15</Height>
						<Text>GP</Text>
					</Text>
					<Textentry Name='SilverPrice'>
						<X>265</X>
						<Y>430</Y>
						<Width>30</Width> 
						<Height>15</Height>
						<MaxLength>3</MaxLength>
					</Textentry>
					<Text Name='SilverPriceText'>
						<X>300</X>
						<Y>430</Y>
						<Width>20</Width> 
						<Height>15</Height>
						<Text>SP</Text>
					</Text>
					<Textentry Name='CopperPrice'>
						<X>325</X>
						<Y>430</Y>
						<Width>30</Width> 
						<Height>15</Height>
						<MaxLength>3</MaxLength>
					</Textentry>
					<Text Name='CopperPriceText'>
						<X>360</X>
						<Y>430</Y>
						<Width>20</Width> 
						<Height>15</Height>
						<Text>CP</Text>
					</Text>

					<Text Name='Label2'>
						<X>25</X>
						<Y>450</Y>
						<Width>30%</Width> 
						<Height>15</Height>
						<Text>Minimum Price</Text>
					</Text>

					<Textentry Name='MinPlatPrice'>
						<X>125</X>
						<Y>450</Y>
						<Width>50</Width> 
						<Height>15</Height>
						<MaxLength>5</MaxLength>
					</Textentry>
					<Text Name='MinPlatPriceText'>
						<X>180</X>
						<Y>450</Y>
						<Width>20</Width> 
						<Height>15</Height>
						<Text>PP</Text>
					</Text>
					<Textentry Name='MinGoldPrice'>
						<X>205</X>
						<Y>450</Y>
						<Width>30</Width> 
						<Height>15</Height>
						<MaxLength>3</MaxLength>
					</Textentry>
					<Text Name='MinGoldPriceText'>
						<X>240</X>
						<Y>450</Y>
						<Width>20</Width> 
						<Height>15</Height>
						<Text>GP</Text>
					</Text>
					<Textentry Name='MinSilverPrice'>
						<X>265</X>
						<Y>450</Y>
						<Width>30</Width> 
						<Height>15</Height>
						<MaxLength>3</MaxLength>
					</Textentry>
					<Text Name='MinSilverPriceText'>
						<X>300</X>
						<Y>450</Y>
						<Width>20</Width> 
						<Height>15</Height>
						<Text>SP</Text>
					</Text>
					<Textentry Name='MinCopperPrice'>
						<X>325</X>
						<Y>450</Y>
						<Width>30</Width> 
						<Height>15</Height>
						<MaxLength>3</MaxLength>
					</Textentry>
					<Text Name='MinCopperPriceText'>
						<X>360</X>
						<Y>450</Y>
						<Width>20</Width> 
						<Height>15</Height>
						<Text>CP</Text>
					</Text>


					<Text Name='Label3'>
						<X>25</X>
						<Y>470</Y>
						<Width>30%</Width> 
						<Height>15</Height>
						<Text>Maximum Price</Text>
					</Text>

					<Textentry Name='MaxPlatPrice'>
						<X>125</X>
						<Y>470</Y>
						<Width>50</Width> 
						<Height>15</Height>
						<MaxLength>5</MaxLength>
					</Textentry>
					<Text Name='MaxPlatPriceText'>
						<X>180</X>
						<Y>470</Y>
						<Width>20</Width> 
						<Height>15</Height>
						<Text>PP</Text>
					</Text>
					<Textentry Name='MaxGoldPrice'>
						<X>205</X>
						<Y>470</Y>
						<Width>30</Width> 
						<Height>15</Height>
						<MaxLength>3</MaxLength>
					</Textentry>
					<Text Name='MaxGoldPriceText'>
						<X>240</X>
						<Y>470</Y>
						<Width>20</Width> 
						<Height>15</Height>
						<Text>GP</Text>
					</Text>
					<Textentry Name='MaxSilverPrice'>
						<X>265</X>
						<Y>470</Y>
						<Width>30</Width> 
						<Height>15</Height>
						<MaxLength>3</MaxLength>
					</Textentry>
					<Text Name='MaxSilverPriceText'>
						<X>300</X>
						<Y>470</Y>
						<Width>20</Width> 
						<Height>15</Height>
						<Text>SP</Text>
					</Text>
					<Textentry Name='MaxCopperPrice'>
						<X>325</X>
						<Y>470</Y>
						<Width>30</Width> 
						<Height>15</Height>
						<MaxLength>3</MaxLength>
					</Textentry>
					<Text Name='MaxCopperPriceText'>
						<X>360</X>
						<Y>470</Y>
						<Width>20</Width> 
						<Height>15</Height>
						<Text>CP</Text>
					</Text>

					<Commandbutton name='UpdatePrice'> 
						<X>400</X> 
						<Y>450</Y> 
						<Width>50</Width> 
						<Height>15</Height>
						<Text>Save</Text>
						<OnLeftClick>
							Script[myprices]:QueueCommand[call pricefromstring]
						</OnLeftClick>
						<AutoTooltip>
							Update your Min Sale Price
						</AutoTooltip>
					</Commandbutton>
					
					<checkbox Name='CraftItem'>
						<X>130</X>
						<Y>395</Y>
						<Width>20</Width>
						<Height>20</Height>
						<Text>Crafted Item</Text>
						<AutoTooltip>
							Mark this item as a crafted item.
						</AutoTooltip>
					</checkbox>

					<checkbox Name='MinPrice'>
						<X>325</X>
						<Y>395</Y>
						<Width>10%</Width>
						<Height>20</Height>
						<Text>Minimum price</Text>
						<AutoTooltip>
							Item has a Minimum Sale Price
						</AutoTooltip>
						<OnLoad>
							UIElement[MinPlatPrice@Sell@GUITabs@MyPrices]:SetAlpha[0.1]
							UIElement[MinGoldPrice@Sell@GUITabs@MyPrices]:SetAlpha[0.1]
							UIElement[MinSilverPrice@Sell@GUITabs@MyPrices]:SetAlpha[0.1]
							UIElement[MinCopperPrice@Sell@GUITabs@MyPrices]:SetAlpha[0.1]
							UIElement[MinPlatPriceText@Sell@GUITabs@MyPrices]:SetAlpha[0.1]
							UIElement[MinGoldPriceText@Sell@GUITabs@MyPrices]:SetAlpha[0.1]
							UIElement[MinSilverPriceText@Sell@GUITabs@MyPrices]:SetAlpha[0.1]
							UIElement[MinCopperPriceText@Sell@GUITabs@MyPrices]:SetAlpha[0.1]
							UIElement[label2@Sell@GUITabs@MyPrices]:SetAlpha[0.1]
						</OnLoad>						
						<OnLeftClick>
							if ${UIElement[MinPrice@Sell@GUITabs@MyPrices].Checked}
							{
							UIElement[MinPlatPrice@Sell@GUITabs@MyPrices]:SetAlpha[1]
							UIElement[MinGoldPrice@Sell@GUITabs@MyPrices]:SetAlpha[1]
							UIElement[MinSilverPrice@Sell@GUITabs@MyPrices]:SetAlpha[1]
							UIElement[MinCopperPrice@Sell@GUITabs@MyPrices]:SetAlpha[1]
							UIElement[MinPlatPriceText@Sell@GUITabs@MyPrices]:SetAlpha[1]
							UIElement[MinGoldPriceText@Sell@GUITabs@MyPrices]:SetAlpha[1]
							UIElement[MinSilverPriceText@Sell@GUITabs@MyPrices]:SetAlpha[1]
							UIElement[MinCopperPriceText@Sell@GUITabs@MyPrices]:SetAlpha[1]
							UIElement[label2@Sell@GUITabs@MyPrices]:SetAlpha[1]
							}
							else
							{
							UIElement[MinPlatPrice@Sell@GUITabs@MyPrices]:SetAlpha[0.1]
							UIElement[MinGoldPrice@Sell@GUITabs@MyPrices]:SetAlpha[0.1]
							UIElement[MinSilverPrice@Sell@GUITabs@MyPrices]:SetAlpha[0.1]
							UIElement[MinCopperPrice@Sell@GUITabs@MyPrices]:SetAlpha[0.1]
							UIElement[MinPlatPriceText@Sell@GUITabs@MyPrices]:SetAlpha[0.1]
							UIElement[MinGoldPriceText@Sell@GUITabs@MyPrices]:SetAlpha[0.1]
							UIElement[MinSilverPriceText@Sell@GUITabs@MyPrices]:SetAlpha[0.1]
							UIElement[MinCopperPriceText@Sell@GUITabs@MyPrices]:SetAlpha[0.1]
							UIElement[label2@Sell@GUITabs@MyPrices]:SetAlpha[0.1]
							}
						</OnLeftClick>
					</checkbox>
					
					<checkbox Name='MaxPrice'>
						<X>240</X>
						<Y>395</Y>
						<Width>10%</Width>
						<Height>20</Height>
						<Text>Max price</Text>
						<AutoTooltip>
							Item has a Maximum Sale Price
						</AutoTooltip>
						<OnLoad>
							UIElement[MaxPlatPrice@Sell@GUITabs@MyPrices]:SetAlpha[0.1]
							UIElement[MaxGoldPrice@Sell@GUITabs@MyPrices]:SetAlpha[0.1]
							UIElement[MaxSilverPrice@Sell@GUITabs@MyPrices]:SetAlpha[0.1]
							UIElement[MaxCopperPrice@Sell@GUITabs@MyPrices]:SetAlpha[0.1]
							UIElement[MaxPlatPriceText@Sell@GUITabs@MyPrices]:SetAlpha[0.1]
							UIElement[MaxGoldPriceText@Sell@GUITabs@MyPrices]:SetAlpha[0.1]
							UIElement[MaxSilverPriceText@Sell@GUITabs@MyPrices]:SetAlpha[0.1]
							UIElement[MaxCopperPriceText@Sell@GUITabs@MyPrices]:SetAlpha[0.1]
							UIElement[label3@Sell@GUITabs@MyPrices]:SetAlpha[0.1]
						</OnLoad>						
						<OnLeftClick>
							if ${UIElement[MaxPrice@Sell@GUITabs@MyPrices].Checked}
							{
							UIElement[MaxPlatPrice@Sell@GUITabs@MyPrices]:SetAlpha[1]
							UIElement[MaxGoldPrice@Sell@GUITabs@MyPrices]:SetAlpha[1]
							UIElement[MaxSilverPrice@Sell@GUITabs@MyPrices]:SetAlpha[1]
							UIElement[MaxCopperPrice@Sell@GUITabs@MyPrices]:SetAlpha[1]
							UIElement[MaxPlatPriceText@Sell@GUITabs@MyPrices]:SetAlpha[1]
							UIElement[MaxGoldPriceText@Sell@GUITabs@MyPrices]:SetAlpha[1]
							UIElement[MaxSilverPriceText@Sell@GUITabs@MyPrices]:SetAlpha[1]
							UIElement[MaxCopperPriceText@Sell@GUITabs@MyPrices]:SetAlpha[1]
							UIElement[label3@Sell@GUITabs@MyPrices]:SetAlpha[1]
							}
							else
							{
							UIElement[MaxPlatPrice@Sell@GUITabs@MyPrices]:SetAlpha[0.1]
							UIElement[MaxGoldPrice@Sell@GUITabs@MyPrices]:SetAlpha[0.1]
							UIElement[MaxSilverPrice@Sell@GUITabs@MyPrices]:SetAlpha[0.1]
							UIElement[MaxCopperPrice@Sell@GUITabs@MyPrices]:SetAlpha[0.1]
							UIElement[MaxPlatPriceText@Sell@GUITabs@MyPrices]:SetAlpha[0.1]
							UIElement[MaxGoldPriceText@Sell@GUITabs@MyPrices]:SetAlpha[0.1]
							UIElement[MaxSilverPriceText@Sell@GUITabs@MyPrices]:SetAlpha[0.1]
							UIElement[MaxCopperPriceText@Sell@GUITabs@MyPrices]:SetAlpha[0.1]
							UIElement[label3@Sell@GUITabs@MyPrices]:SetAlpha[0.1]
							}
						</OnLeftClick>
					</checkbox>
					
					<Commandbutton name='Rescan'>
						<X>85%</X>
						<Y>1%</Y>
						<Width>50</Width>
						<Height>15</Height>
						<Text>ReScan</Text>
						<AutoTooltip>
							Rescan the Your Broker boxes
						</AutoTooltip>
						<OnLeftClick>
							Script[myprices]:QueueCommand[call LoadList]
						</OnLeftClick>
					</Commandbutton>
 
					<checkbox Name='SellItems'>
						<X>45%</X>
						<Y>1%</Y>
						<Width>20%</Width>
						<Height>20</Height>
						<Text>Scan Sales</Text>
						<AutoTooltip>
							Check the prices of your items for sale.
						</AutoTooltip>
						<OnLoad>
						if ${Script[myprices].VariableScope.SellItems}
						{
							UIElement[SellItems@Sell@GUITabs@MyPrices]:SetChecked
						}
						else
						{
							UIElement[SellItems@Sell@GUITabs@MyPrices]:UnsetChecked
						}
						</OnLoad>
						<OnLeftClick>
							if ${UIElement[SellItems@Sell@GUITabs@MyPrices].Checked}
							{
								Script[myprices]:QueueCommand[call SaveSetting SellItems TRUE]
								Script[myprices].VariableScope.SellItems:Set[TRUE]
							}
							else
							{
								Script[myprices]:QueueCommand[call SaveSetting SellItems FALSE]
								Script[myprices].VariableScope.SellItems:Set[FALSE]
							}
						</OnLeftClick>
					</checkbox>

					<listbox Name='ItemList'>
						<X>45%</X>
						<Y>4%</Y>
						<Width>52%</Width>
						<Height>60%</Height>
						<SelectMultiple>0</SelectMultiple>
						<Sort>None</Sort>
						<OnSelect>
							Script[myprices].VariableScope.ClickID:Set[${ID}]
							Script[myprices]:QueueCommand[call FillMinPrice ${ID}]
							Script[myprices]:QueueCommand[call ClickBrokerSearch Sell ${ID}]
						</OnSelect>
					</listbox>
					<checkbox Name='1'>
						<X>45%</X>
						<Y>65%</Y>
						<Width>20</Width>
						<Height>20</Height>
						<Text>Box 1</Text>
						<AutoTooltip>
							Scan Box 1
						</AutoTooltip>
						<OnLoad>
						if ${Script[myprices].VariableScope.box[1]}
						{
							UIElement[1@Sell@GUITabs@MyPrices]:SetChecked
						}
						else
						{
							UIElement[1@Sell@GUITabs@MyPrices]:UnsetChecked
						}
						</OnLoad>
						<OnLeftClick>
							if ${UIElement[1@Sell@GUITabs@MyPrices].Checked}
							{
								Script[myprices]:QueueCommand[call SaveSetting box1 TRUE]
								Script[myprices].VariableScope.box[1]:Set[TRUE]
							}
							else
							{
								Script[myprices]:QueueCommand[call SaveSetting box1 FALSE]
								Script[myprices].VariableScope.box[1]:Set[FALSE]
							}
								Script[myprices]:QueueCommand[call LoadList]
						</OnLeftClick>
					</checkbox>
					<checkbox Name='2'>
						<X>60%</X>
						<Y>65%</Y>
						<Width>20</Width>
						<Height>20</Height>
						<Text>Box 2</Text>
						<AutoTooltip>
							Scan Box 2
						</AutoTooltip>
						<OnLoad>
						if ${Script[myprices].VariableScope.box[2]}
						{
							UIElement[2@Sell@GUITabs@MyPrices]:SetChecked
						}
						else
						{
							UIElement[2@Sell@GUITabs@MyPrices]:UnsetChecked
						}
						</OnLoad>
						<OnLeftClick>
							if ${UIElement[2@Sell@GUITabs@MyPrices].Checked}
							{
								Script[myprices]:QueueCommand[call SaveSetting box2 TRUE]
								Script[myprices].VariableScope.box[2]:Set[TRUE]
							}
							else
							{
								Script[myprices]:QueueCommand[call SaveSetting box2 FALSE]
								Script[myprices].VariableScope.box[2]:Set[FALSE]
							}
								Script[myprices]:QueueCommand[call LoadList]
						</OnLeftClick>
					</checkbox>
					<checkbox Name='3'>
						<X>75%</X>
						<Y>65%</Y>
						<Width>20</Width>
						<Height>20</Height>
						<Text>Box 3</Text>
						<AutoTooltip>
							Scan Box 3
						</AutoTooltip>
						<OnLoad>
						if ${Script[myprices].VariableScope.box[3]}
						{
							UIElement[3@Sell@GUITabs@MyPrices]:SetChecked
						}
						else
						{
							UIElement[3@Sell@GUITabs@MyPrices]:UnsetChecked
						}
						</OnLoad>
						<OnLeftClick>
							if ${UIElement[3@Sell@GUITabs@MyPrices].Checked}
							{
								Script[myprices]:QueueCommand[call SaveSetting box3 TRUE]
								Script[myprices].VariableScope.box[3]:Set[TRUE]
							}
							else
							{
								Script[myprices]:QueueCommand[call SaveSetting box3 FALSE]
								Script[myprices].VariableScope.box[3]:Set[FALSE]
							}
								Script[myprices]:QueueCommand[call LoadList]
						</OnLeftClick>
					</checkbox>
					<checkbox Name='4'>
						<X>45%</X>
						<Y>68%</Y>
						<Width>20</Width>
						<Height>20</Height>
						<Text>Box 4</Text>
						<AutoTooltip>
							Scan Box 4
						</AutoTooltip>
						<OnLoad>
						if ${Script[myprices].VariableScope.box[4]}
						{
							UIElement[4@Sell@GUITabs@MyPrices]:SetChecked
						}
						else
						{
							UIElement[4@Sell@GUITabs@MyPrices]:UnsetChecked
						}
						</OnLoad>
						<OnLeftClick>
							if ${UIElement[4@Sell@GUITabs@MyPrices].Checked}
							{
								Script[myprices]:QueueCommand[call SaveSetting box4 TRUE]
								Script[myprices].VariableScope.box[4]:Set[TRUE]
							}
							else
							{
								Script[myprices]:QueueCommand[call SaveSetting box4 FALSE]
								Script[myprices].VariableScope.box[4]:Set[FALSE]
							}
								Script[myprices]:QueueCommand[call LoadList]
						</OnLeftClick>
					</checkbox>
					<checkbox Name='5'>
						<X>60%</X>
						<Y>68%</Y>
						<Width>20</Width>
						<Height>20</Height>
						<Text>Box 5</Text>
						<AutoTooltip>
							Scan Box 5
						</AutoTooltip>
						<OnLoad>
						if ${Script[myprices].VariableScope.box[5]}
						{
							UIElement[5@Sell@GUITabs@MyPrices]:SetChecked
						}
						else
						{
							UIElement[5@Sell@GUITabs@MyPrices]:UnsetChecked
						}
						</OnLoad>
						<OnLeftClick>
							if ${UIElement[5@Sell@GUITabs@MyPrices].Checked}
							{
								Script[myprices]:QueueCommand[call SaveSetting box5 TRUE]
								Script[myprices].VariableScope.box[5]:Set[TRUE]
							}
							else
							{
								Script[myprices]:QueueCommand[call SaveSetting box5 FALSE]
								Script[myprices].VariableScope.box[5]:Set[FALSE]
							}
								Script[myprices]:QueueCommand[call LoadList]
						</OnLeftClick>
					</checkbox>
					<checkbox Name='6'>
						<X>75%</X>
						<Y>68%</Y>
						<Width>20</Width>
						<Height>20</Height>
						<Text>Box 6</Text>
						<AutoTooltip>
							Scan Box 6
						</AutoTooltip>
						<OnLoad>
						if ${Script[myprices].VariableScope.box[6]}
						{
							UIElement[6@Sell@GUITabs@MyPrices]:SetChecked
						}
						else
						{
							UIElement[6@Sell@GUITabs@MyPrices]:UnsetChecked
						}
						</OnLoad>
						<OnLeftClick>
							if ${UIElement[6@Sell@GUITabs@MyPrices].Checked}
							{
								Script[myprices]:QueueCommand[call SaveSetting box6 TRUE]
								Script[myprices].VariableScope.box[6]:Set[TRUE]
							}
							else
							{
								Script[myprices]:QueueCommand[call SaveSetting box6 FALSE]
								Script[myprices].VariableScope.box[6]:Set[FALSE]
							}
								Script[myprices]:QueueCommand[call LoadList]
						</OnLeftClick>
					</checkbox>
					<checkbox Name='7'>
						<X>87%</X>
						<Y>65%</Y>
						<Width>20</Width>
						<Height>20</Height>
						<Text>Box 7</Text>
						<AutoTooltip>
							Scan Box 7
						</AutoTooltip>
						<OnLoad>
						if ${Script[myprices].VariableScope.box[7]}
						{
							UIElement[7@Sell@GUITabs@MyPrices]:SetChecked
						}
						else
						{
							UIElement[7@Sell@GUITabs@MyPrices]:UnsetChecked
						}
						</OnLoad>
						<OnLeftClick>
							if ${UIElement[6@Sell@GUITabs@MyPrices].Checked}
							{
								Script[myprices]:QueueCommand[call SaveSetting box7 TRUE]
								Script[myprices].VariableScope.box[7]:Set[TRUE]
							}
							else
							{
								Script[myprices]:QueueCommand[call SaveSetting box7 FALSE]
								Script[myprices].VariableScope.box[7]:Set[FALSE]
							}
								Script[myprices]:QueueCommand[call LoadList]
						</OnLeftClick>
					</checkbox>
					<checkbox Name='8'>
						<X>87%</X>
						<Y>68%</Y>
						<Width>20</Width>
						<Height>20</Height>
						<Text>Box 8</Text>
						<AutoTooltip>
							Scan Box 8
						</AutoTooltip>
						<OnLoad>
						if ${Script[myprices].VariableScope.box[8]}
						{
							UIElement[8@Sell@GUITabs@MyPrices]:SetChecked
						}
						else
						{
							UIElement[8@Sell@GUITabs@MyPrices]:UnsetChecked
						}
						</OnLoad>
						<OnLeftClick>
							if ${UIElement[8@Sell@GUITabs@MyPrices].Checked}
							{
								Script[myprices]:QueueCommand[call SaveSetting box8 TRUE]
								Script[myprices].VariableScope.box[8]:Set[TRUE]
							}
							else
							{
								Script[myprices]:QueueCommand[call SaveSetting box6 FALSE]
								Script[myprices].VariableScope.box[8]:Set[FALSE]
							}
								Script[myprices]:QueueCommand[call LoadList]
						</OnLeftClick>
					</checkbox>
					<Commandbutton name='Start Scanning'> 
						<X>20%</X> 
						<Y>92%</Y> 
						<Width>25%</Width> 
						<Height>25</Height>
						<Text>Start Scanning</Text>
						<OnLeftClick>
							if ${Script[myprices].VariableScope.Pausemyprices}
							{
								UIElement[Start Scanning@Sell@GUITabs@MyPrices]:SetText[Stop Scanning]
								Script[myprices].VariableScope.Pausemyprices:Set[FALSE]
								Script[myprices].VariableScope.StopWaiting:Set[0]
							}
							else
							{
								UIElement[Start Scanning@Sell@GUITabs@MyPrices]:SetText[Start Scanning]
								Script[myprices].VariableScope.Pausemyprices:Set[TRUE]
								Script[myprices].VariableScope.StopWaiting:Set[1]
							}
						</OnLeftClick>
						<AutoTooltip>
							Start or pause myprices after the next scan is finshed
						</AutoTooltip>
					</Commandbutton>
					<Commandbutton name='Exit MyPrices'> 
						<X>60%</X> 
						<Y>92%</Y> 
						<Width>25%</Width> 
						<Height>25</Height>
						<Text>Stop and Quit</Text>
						<OnLeftClick>
							if !${Script[myprices].VariableScope.Exitmyprices}
							{
								UIElement[Exit MyPrices@Sell@GUITabs@MyPrices]:SetText[Closing Down]
								UIElement[Start Scanning@Sell@GUITabs@MyPrices]:SetText[Closing Down]
								Script[myprices].VariableScope.Exitmyprices:Set[TRUE]
								Script[myprices].VariableScope.StopWaiting:Set[1]
							}
						</OnLeftClick>
						<AutoTooltip>
							Stop scanning after next item and Quit
						</AutoTooltip>
					</Commandbutton>
				</Tab>
				<Tab Name='Buy'>
					<checkbox Name='BuyItems'>
						<X>5%</X>
						<Y>20</Y>
						<Width>20%</Width>
						<Height>20</Height>
						<Text>Buy Items</Text>
						<AutoTooltip>
							Scan the broker for items to buy.
						</AutoTooltip>
						<OnLoad>
						if ${Script[myprices].VariableScope.BuyItems}
						{
							UIElement[BuyItems@Buy@GUITabs@MyPrices]:SetChecked
						}
						else
						{
							UIElement[BuyItems@Buy@GUITabs@MyPrices]:UnsetChecked
						}
						</OnLoad>
						<OnLeftClick>
							if ${UIElement[BuyItems@Buy@GUITabs@MyPrices].Checked}
							{
								Script[myprices]:QueueCommand[call SaveSetting BuyItems TRUE]
								Script[myprices].VariableScope.BuyItems:Set[TRUE]
							}
							else
							{
								Script[myprices]:QueueCommand[call SaveSetting BuyItems FALSE]
								Script[myprices].VariableScope.BuyItems:Set[FALSE]
							}
						</OnLeftClick>
					</checkbox>
					<listbox Name='ItemList'>
						<X>5%</X>
						<Y>40</Y>
						<Width>90%</Width>
						<Height>50%</Height>
						<SelectMultiple>0</SelectMultiple>
						<Sort>None</Sort>
						<OnLoad>
							Script[myprices]:QueueCommand[call buy Buy Init]
						</OnLoad>
						<OnSelect>
							Script[myprices]:QueueCommand[call ShowBuyPrices ${ID}]
							Script[myprices]:QueueCommand[call ClickBrokerSearch Buy ${ID}]

						</OnSelect>
					</listbox>
					<Text Name='BuyNameText'>
						<X>30</X>
						<Y>340</Y>
						<Width>80</Width> 
						<Height>20</Height>
						<Text>Name</Text>
					</Text>
					<checkbox Name='Harvest'>
						<X>40</X>
						<Y>325</Y>
						<Width>100</Width>
						<Height>20</Height>
						<Text>Harvest</Text>
						<AutoTooltip>
							Item is a harvest item (200 per stack)
						</AutoTooltip>
					</checkbox>
					<Text Name='BuyNumberText'>
						<X>393</X>
						<Y>340</Y>
						<Width>80</Width> 
						<Height>20</Height>
						<Text>Number</Text>
					</Text>
					<checkbox Name='BuyNameOnly'>
						<X>110</X>
						<Y>325</Y>
						<Width>100</Width>
						<Height>20</Height>
						<Text>Name Only</Text>
						<OnLeftClick>
							if ${UIElement[BuyNameOnly@Buy@GUITabs@MyPrices].Checked}
							{
								UIElement[StartLevelText@Buy@GUITabs@MyPrices]:Hide
								UIElement[StartLevel@Buy@GUITabs@MyPrices]:Hide
								UIElement[EndLevelText@Buy@GUITabs@MyPrices]:Hide
								UIElement[EndLevel@Buy@GUITabs@MyPrices]:Hide
								UIElement[Tier@Buy@GUITabs@MyPrices]:Hide
							}
							else
							{
								UIElement[StartLevelText@Buy@GUITabs@MyPrices]:Show
								UIElement[StartLevel@Buy@GUITabs@MyPrices]:Show
								UIElement[EndLevelText@Buy@GUITabs@MyPrices]:Show
								UIElement[EndLevel@Buy@GUITabs@MyPrices]:Show
								UIElement[Tier@Buy@GUITabs@MyPrices]:Show
							}
						</OnLeftClick>
						<AutoTooltip>
							Match name Only (exact match)
						</AutoTooltip>
					</checkbox>
					<checkbox Name='BuyAttuneOnly'>
						<X>195</X>
						<Y>325</Y>
						<Width>100</Width>
						<Height>20</Height>
						<Text>Attuneable Only</Text>
						<AutoTooltip>
							Atunnable Items only
						</AutoTooltip>
					</checkbox>
					<checkbox Name='Transmute'>
						<X>315</X>
						<Y>325</Y>
						<Width>100</Width>
						<Height>20</Height>
						<Text>Auto Transmute</Text>
						<AutoTooltip>
							Transmute Items when bought
						</AutoTooltip>
					</checkbox>
					<Textentry Name='BuyName'>
						<X>25</X>
						<Y>355</Y>
						<Width>350</Width> 
						<Height>20</Height>
						<MaxLength>70</MaxLength>
					</Textentry>
					<Text name='StartLevelText'>
						<X>25</X>
						<Y>385</Y>
						<Width>90</Width> 
						<Height>20</Height>
						<Text>Start Level</Text>
					</Text>
					<Textentry name='StartLevel'>
						<X>95</X>
						<Y>385</Y>
						<Width>50</Width> 
						<Height>20</Height>
						<MaxLength>4</MaxLength>
					</Textentry>
					<Text name='EndLevelText'>
						<X>155</X>
						<Y>385</Y>
						<Width>90</Width> 
						<Height>20</Height>
						<Text>End Level</Text>
					</Text>
					<Textentry name='EndLevel'>
						<X>225</X>
						<Y>385</Y>
						<Width>50</Width> 
						<Height>20</Height>
						<MaxLength>4</MaxLength>
					</Textentry>
					<Textentry Name='BuyNumber'>
						<X>390</X>
						<Y>355</Y>
						<Width>50</Width> 
						<Height>20</Height>
						<MaxLength>6</MaxLength>
					</Textentry>
					<Textentry Name='MinPlatPrice'>
						<X>35</X>
						<Y>450</Y>
						<Width>50</Width> 
						<Height>15</Height>
						<MaxLength>5</MaxLength>
					</Textentry>
					<Text Name='MinPlatPriceText'>
						<X>90</X>
						<Y>450</Y>
						<Width>20</Width> 
						<Height>15</Height>
						<Text>PP</Text>
					</Text>
					<Textentry Name='MinGoldPrice'>
						<X>115</X>
						<Y>450</Y>
						<Width>30</Width> 
						<Height>15</Height>
						<MaxLength>3</MaxLength>
					</Textentry>
					<Text Name='MinGoldPriceText'>
						<X>150</X>
						<Y>450</Y>
						<Width>20</Width> 
						<Height>15</Height>
						<Text>GP</Text>
					</Text>
					<Textentry Name='MinSilverPrice'>
						<X>175</X>
						<Y>450</Y>
						<Width>30</Width> 
						<Height>15</Height>
						<MaxLength>3</MaxLength>
					</Textentry>
					<Text Name='MinSilverPriceText'>
						<X>210</X>
						<Y>450</Y>
						<Width>20</Width> 
						<Height>15</Height>
						<Text>SP</Text>
					</Text>
					<Textentry Name='MinCopperPrice'>
						<X>235</X>
						<Y>450</Y>
						<Width>30</Width> 
						<Height>15</Height>
						<MaxLength>3</MaxLength>
					</Textentry>
					<Text Name='MinCopperPriceText'>
						<X>270</X>
						<Y>450</Y>
						<Width>20</Width> 
						<Height>15</Height>
						<Text>CP</Text>
						<Color>FFDDBB00</Color>
					</Text>
					<Text Name='ErrorText'>
						<X>24%</X>
						<Y>500</Y>
						<Width>350</Width> 
						<Height>15</Height>
					</Text>
					<combobox name='Tier'>
						<X>100</X>
						<Y>420</Y>
						<Width>150</Width> 
						<Height>20</Height> 
				               <FullHeight>120</FullHeight>
				               <ButtonWidth>20</ButtonWidth>
						<Items>
						<Item Value='1' Default='1'>All</Item>
						<Item Value='2' Default='1'>Common</Item>
						<Item Value='3'>Handcrafted</Item>
						<Item Value='4'>Treasured</Item>
						<Item Value='5'>Mastercrafted</Item>
						<Item Value='6'>Legendary</Item>
						<Item Value='7'>Fabled</Item>
						<Item Value='8'>Mythical</Item>
						</Items>
					</combobox>
					<Commandbutton name='SaveBuy'> 
						<X>325</X> 
						<Y>450</Y> 
						<Width>50</Width> 
						<Height>15</Height>
						<Text>Save</Text>
						<OnLeftClick>
						Script[myprices]:QueueCommand[call savebuyinfo]
						</OnLeftClick>
						<AutoTooltip>
							Update/Add a new item
						</AutoTooltip>
					</Commandbutton>
					<Commandbutton name='DeleteBuy'> 
						<X>385</X> 
						<Y>450</Y> 
						<Width>50</Width> 
						<Height>15</Height>
						<Text>Delete</Text>
						<OnLeftClick>
						Script[myprices]:QueueCommand[call deletebuyinfo]
						</OnLeftClick>
						<AutoTooltip>
							Delete Selected Item
						</AutoTooltip>
					</Commandbutton>
				</Tab>
				<Tab Name='Craft'>
					<listbox Name='ItemList'>
						<X>5%</X>
						<Y>40</Y>
						<Width>90%</Width>
						<Height>70%</Height>
						<SelectMultiple>0</SelectMultiple>
						<Sort>None</Sort>
						<OnLoad>
							Script[myprices]:QueueCommand[call buy Craft Init]
						</OnLoad>
						<OnSelect>
							Script[myprices]:QueueCommand[call ShowCraftInfo ${ID}]
							Script[myprices]:QueueCommand[call ClickBrokerSearch Craft ${ID}]
						</OnSelect>
					</listbox>
					<Commandbutton name='Rescan'> 
						<X>80%</X> 
						<Y>15</Y> 
						<Width>50</Width> 
						<Height>15</Height>
						<Text>Rescan</Text>
						<OnLeftClick>
							Script[myprices]:QueueCommand[call buy Craft init]
						</OnLeftClick>
						<AutoTooltip>
							Rescan the list
						</AutoTooltip>
					</Commandbutton>
					<Text Name='ErrorText'>
						<X>24%</X>
						<Y>435</Y>
						<Width>350</Width> 
						<Height>15</Height>
					</Text>
					<Text Name='CraftName'>
						<X>25</X>
						<Y>455</Y>
						<Width>350</Width> 
						<Height>20</Height>
						<MaxLength>70</MaxLength>
					</Text>
					<Text Name='RecipeNameText'>
						<X>25</X>
						<Y>475</Y>
						<Width>80</Width> 
						<Height>20</Height>
						<Text>Recipe Name</Text>
					</Text>
					<Textentry Name='RecipeName'>
						<X>105</X>
						<Y>475</Y>
						<Width>310</Width> 
						<Height>20</Height>
					</Textentry>
					<Text Name='CraftStackText'>
						<X>20</X>
						<Y>505</Y>
						<Width>80</Width> 
						<Height>20</Height>
						<Text>Craft Stack :</Text>
					</Text>
					<Textentry Name='CraftStack'>
						<X>100</X>
						<Y>505</Y>
						<Width>40</Width> 
						<Height>20</Height>
						<MaxLength>4</MaxLength>
					</Textentry>
					<Text Name='CraftNumberText'>
						<X>150</X>
						<Y>505</Y>
						<Width>80</Width> 
						<Height>20</Height>
						<Text>Stock Limit :</Text>
					</Text>
					<Textentry Name='CraftNumber'>
						<X>230</X>
						<Y>505</Y>
						<Width>50</Width> 
						<Height>20</Height>
						<MaxLength>5</MaxLength>
					</Textentry>
					<Text Name='BoxText'>
						<X>300</X>
						<Y>505</Y>
						<Width>40</Width> 
						<Height>20</Height>
						<Text>Box :</Text>
					</Text>
					<Textentry Name='BoxNumber'>
						<X>330</X>
						<Y>505</Y>
						<Width>30</Width> 
						<Height>20</Height>
						<MaxLength>2</MaxLength>
					</Textentry>
					<Commandbutton name='NoCraft'> 
						<X>390</X> 
						<Y>505</Y> 
						<Width>50</Width> 
						<Height>15</Height>
						<Text>Unset</Text>
						<OnLeftClick>
							Script[myprices]:QueueCommand[call Unselectcraft ${ID}]
							Script[myprices]:QueueCommand[call buy Craft Init]
						</OnLeftClick>
						<AutoTooltip>
							Unselect as a Craftable Item
						</AutoTooltip>
					</Commandbutton>
					<Commandbutton name='SaveCraft'> 
						<X>390</X> 
						<Y>525</Y> 
						<Width>50</Width> 
						<Height>15</Height>
						<Text>Save</Text>
						<OnLeftClick>
							Script[myprices]:QueueCommand[call savecraftinfo]
							Script[myprices]:QueueCommand[call buy Craft Init]
						</OnLeftClick>
						<AutoTooltip>
							Update an item
						</AutoTooltip>
					</Commandbutton>
				</Tab>
				<Tab Name='Admin'>
					<Text name='Errortext'>
						<X>5%</X>
						<Y>30</Y>
						<Width>80%</Width>
						<Height>20</Height>
						<Alignment>Left</Alignment>
						<Font>
							<Color>FFFFFFE5</Color>
						</Font>
					</Text>
					<Commandbutton name='Compact'> 
						<X>5%</X> 
						<Y>50</Y> 
						<Width>100</Width> 
						<Height>15</Height>
						<Text>Compress Sale List</Text>
						<OnLeftClick>
							Script[myprices]:QueueCommand[call buy Sell compact]
						</OnLeftClick>
						<AutoTooltip>
							Remove un-needed entries in saved sales list
						</AutoTooltip>
					</Commandbutton>
				</Tab>
				<Tab Name='Log'>
					<listbox Name='ItemList'>
						<X>5%</X>
						<Y>2%</Y>
						<Width>90%</Width>
						<Height>90%</Height>
						<Font>
							<Name>Times New Roman</Name>
							<Size>14</Size>
						</Font>
						<SelectMultiple>0</SelectMultiple>
						<Sort>None</Sort>
					</listbox>
					<Commandbutton name='Clearlog'> 
						<X>75%</X> 
						<Y>95%</Y> 
						<Width>100</Width> 
						<Height>15</Height>
						<Text>Clear Log</Text>
						<OnLeftClick>
							UIElement[ItemList@Log@GUITabs@MyPrices]:ClearItems
						</OnLeftClick>
						<AutoTooltip>
							Clear Log
						</AutoTooltip>
					</Commandbutton>
				</Tab>
			</Tabs>
		</Tabcontrol>
	</Children>
	</Window>
</ISUI>
