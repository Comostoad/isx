<?xml version="1.0" encoding="UTF-8"?>
<ISUI>
	<template name='My.window.TitleBar'>
    		<Border>1</Border>
		<x>3</x>
    		<BorderColor>FF3300FF</BorderColor>
    		<Width>r6</Width>
		<Height>26</Height>
		<Texture Template='EQ2.window.TitleBar.Texture' />
		<Children>
			<Text Name='Title' template='EQ2.window.TitleBar.title' />
			<Button Name='Minimize' template='EQ2.window.TitleBar.Minimize'>
			</Button>
			<Button Name='Maximize' template='EQ2.window.TitleBar.Maximize'>
			</Button>
			<commandbutton name='Custom Close Button' Template='EQ2.Window.TitleBar.Close'>
				<Command>Script[myprices]:End</Command>
			</commandbutton>
		</Children>
	</template>
	<template name='My.window'>
		<Border>1</Border>
		<Resizable>0</Resizable>
		<CloseButton />
		<MinimizeButton />
		<MaximizeButton />
		<TitleBar template='My.window.TitleBar' />
 		<OffsetTitleBarHeight />
		<Client template='EQ2.window.Client' />
		<StorePosition>1</StorePosition>
	</template>
	<!-- Main Window -->
	<Window Name='MyPrices' template='My.window'>
	<X>5%</X>
	<Y>10%</Y>
	<Width>475</Width>
	<Height>600</Height>
	<Client Template='EQ2.Window.Client'>
		<Y>20</Y>
	</Client>
	<StorePosition>1</StorePosition>
	<Title>MyPrices Broker system</Title>
	<TitleBar Template='EQ2.Window.TitleBar'>
		<X>0</X>
		<Y>0</Y>
		<Width>100%</Width>
		<Height>20</Height>
		<Children>
			<Text Name='Title' Template='EQ2.Window.TitleBar.Title' />
			<Button Name='Minimize' Template='EQ2.Window.TitleBar.Minimize'>
				<X>r35</X>
				<Width>14</Width>
				<Height>14</Height>
			</Button>
			<commandbutton name='Custom Close Button' Template='EQ2.Window.TitleBar.Close'>
				<X>r17</X>
				<Width>14</Width>
				<Height>14</Height>
				<Command>Script[myprices]:End</Command>
			</commandbutton>
		</Children>
	</TitleBar>
	<Children>
		<Tabcontrol Name='GUITabs' Template='EQ2.Tabcontrol'>
			<X>1%</X>
			<Y>1%</Y>
			<Height>98%</Height>
			<Width>98%</Width>
			<Tabs>
				<Tab Name='Sell'>
					<Text name='ConfigSell Text' Template='EQ2.text'>
						<X>5%</X>
						<Y>10</Y>
						<Width>80%</Width>
						<Height>20</Height>
						<Alignment>Left</Alignment>
						<Font>
							<Color>FFFFFFE5</Color>
						</Font>
						<Text>MyPrices Options:</Text>
					</Text>
					<checkbox Name='MatchLowPrice' Template='EQ2.checkbox'>
						<X>5%</X>
						<Y>50</Y>
						<Width>20%</Width>
						<Height>20</Height>
						<Text>Auto-Match Lower Prices</Text>
						<AutoTooltip>
							Automatically match any prices lower than your own.
						</AutoTooltip>
						<OnLoad>
							if ${Script[myprices].VariableScope.MatchLowPrice}
							{
								UIElement[MatchLowPrice@Sell@GUITabs@MyPrices]:SetChecked
							}
							else
							{
								UIElement[MatchLowPrice@Sell@GUITabs@MyPrices]:UnsetChecked
							}
						</OnLoad>
						<OnLeftClick>
							if ${UIElement[MatchLowPrice@Sell@GUITabs@MyPrices].Checked}
							{
								Script[myprices]:QueueCommand[call SaveSetting MatchLowPrice TRUE]
								Script[myprices].VariableScope.MatchLowPrice:Set[TRUE]
							}
							else
							{
								Script[myprices]:QueueCommand[call SaveSetting MatchLowPrice FALSE]
								Script[myprices].VariableScope.MatchLowPrice:Set[FALSE]
							}
						</OnLeftClick>
					</checkbox>
					<checkbox Name='MerchantMatch' Template='EQ2.checkbox'>
						<X>5%</X>
						<Y>70</Y>
						<Width>20%</Width>
						<Height>20</Height>
						<Text>Merchant Match</Text>
						<AutoTooltip>
							Don't set prices below what a merchant will buy an item for.
						</AutoTooltip>
						<OnLoad>
						if ${Script[myprices].VariableScope.MerchantMatch}
						{
							UIElement[MerchantMatch@Sell@GUITabs@MyPrices]:SetChecked
						}
						else
						{
							UIElement[MerchantMatch@Sell@GUITabs@MyPrices]:UnsetChecked
						}
						</OnLoad>
						<OnLeftClick>
							if ${UIElement[MerchantMatch@Sell@GUITabs@MyPrices].Checked}
							{
								Script[myprices]:QueueCommand[call SaveSetting MerchantMatch TRUE]
								Script[myprices].VariableScope.MerchantMatch:Set[TRUE]
							}
							else
							{
								Script[myprices]:QueueCommand[call SaveSetting MerchantMatch FALSE]
								Script[myprices].VariableScope.MerchantMatch:Set[FALSE]
							}
						</OnLeftClick>
					</checkbox>
					<checkbox Name='MatchHighPrice' Template='EQ2.checkbox'>
						<X>5%</X>
						<Y>90</Y>
						<Width>20%</Width>
						<Height>20</Height>
						<Text>Auto-Match Higher Prices</Text>
						<AutoTooltip>
							Automatically match your prices to the next Lowest Price if your prices are too low.
						</AutoTooltip>
						<OnLoad>
						if ${Script[myprices].VariableScope.IncreasePrice}
						{
							UIElement[MatchHighPrice@Sell@GUITabs@MyPrices]:SetChecked
						}
						else
						{
							UIElement[MatchHighPrice@Sell@GUITabs@MyPrices]:UnsetChecked
						}
						</OnLoad>
						<OnLeftClick>
							if ${UIElement[MatchHighPrice@Sell@GUITabs@MyPrices].Checked}
							{
								Script[myprices]:QueueCommand[call SaveSetting IncreasePrice TRUE]
								Script[myprices].VariableScope.IncreasePrice:Set[TRUE]
							}
							else
							{
								Script[myprices]:QueueCommand[call SaveSetting IncreasePrice FALSE]
								Script[myprices].VariableScope.IncreasePrice:Set[FALSE]
							}
						</OnLeftClick>
					</checkbox>
					<checkbox Name='SetUnlistedPrices' Template='EQ2.checkbox'>
						<X>5%</X>
						<Y>110</Y>
						<Width>20%</Width>
						<Height>20</Height>
						<Text>Set Prices for Unlisted items</Text>
						<AutoTooltip>
							Match prices of Unlisted items and mark them for sale.
						</AutoTooltip>
						<OnLoad>
						if ${Script[myprices].VariableScope.SetUnlistedPrices}
						{
							UIElement[SetUnlistedPrices@Sell@GUITabs@MyPrices]:SetChecked
						}
						else
						{
							UIElement[SetUnlistedPrices@Sell@GUITabs@MyPrices]:UnsetChecked
						}
						</OnLoad>
						<OnLeftClick>
							if ${UIElement[SetUnlistedPrices@Sell@GUITabs@MyPrices].Checked}
							{
								Script[myprices]:QueueCommand[call SaveSetting SetUnlistedPrices TRUE]
								Script[myprices].VariableScope.SetUnlistedPrices:Set[TRUE]
							}
							else
							{
								Script[myprices]:QueueCommand[call SaveSetting SetUnlistedPrices FALSE]
								Script[myprices].VariableScope.SetUnlistedPrices:Set[FALSE]
							}
						</OnLeftClick>
					</checkbox>
					<checkbox Name='IgnoreCopper' Template='EQ2.checkbox'>
						<X>5%</X>
						<Y>130</Y>
						<Width>20%</Width>
						<Height>20</Height>
						<Text>Ignore Copper</Text>
						<AutoTooltip>
							If your price is > 1 gold then ignore copper
						</AutoTooltip>
						<OnLoad>
						if ${Script[myprices].VariableScope.IgnoreCopper}
						{
							UIElement[IgnoreCopper@Sell@GUITabs@MyPrices]:SetChecked
						}
						else
						{
							UIElement[IgnoreCopper@Sell@GUITabs@MyPrices]:UnsetChecked
						}
						</OnLoad>
						<OnLeftClick>
							if ${UIElement[IgnoreCopper@Sell@GUITabs@MyPrices].Checked}
							{
								Script[myprices]:QueueCommand[call SaveSetting IgnoreCopper TRUE]
								Script[myprices].VariableScope.IgnoreCopper:Set[TRUE]
							}
							else
							{
								Script[myprices]:QueueCommand[call SaveSetting IgnoreCopper FALSE]
								Script[myprices].VariableScope.IgnoreCopper:Set[FALSE]
							}
						</OnLeftClick>
					</checkbox>
					<checkbox Name='ScanSellNonStop' Template='EQ2.checkbox'>
						<X>5%</X>
						<Y>150</Y>
						<Width>20%</Width>
						<Height>20</Height>
						<Text>Auto-Loop</Text>
						<AutoTooltip>
							Keep scanning your Sale items in a constant loop.
						</AutoTooltip>
						<OnLoad>
						if ${Script[myprices].VariableScope.ScanSellNonStop}
						{
							UIElement[ScanSellNonStop@Sell@GUITabs@MyPrices]:SetChecked
						}
						else
						{
							UIElement[ScanSellNonStop@Sell@GUITabs@MyPrices]:UnsetChecked
						}
						</OnLoad>
						<OnLeftClick>
							if ${UIElement[ScanSellNonStop@Sell@GUITabs@MyPrices].Checked}
							{
								Script[myprices]:QueueCommand[call SaveSetting ScanSellNonStop TRUE]
								Script[myprices].VariableScope.ScanSellNonStop:Set[TRUE]
							}
							else
							{
								Script[myprices]:QueueCommand[call SaveSetting ScanSellNonStop FALSE]
								Script[myprices].VariableScope.ScanSellNonStop:Set[FALSE]
							}
						</OnLeftClick>
					</checkbox>
					<checkbox Name='SellItems' Template='EQ2.checkbox'>
						<X>5%</X>
						<Y>170</Y>
						<Width>20%</Width>
						<Height>20</Height>
						<Text>Scan Sales</Text>
						<AutoTooltip>
							Check the prices of your items for sale.
						</AutoTooltip>
						<OnLoad>
						if ${Script[myprices].VariableScope.SellItems}
						{
							UIElement[SellItems@Sell@GUITabs@MyPrices]:SetChecked
						}
						else
						{
							UIElement[SellItems@Sell@GUITabs@MyPrices]:UnsetChecked
						}
						</OnLoad>
						<OnLeftClick>
							if ${UIElement[SellItems@Sell@GUITabs@MyPrices].Checked}
							{
								Script[myprices]:QueueCommand[call SaveSetting SellItems TRUE]
								Script[myprices].VariableScope.SellItems:Set[TRUE]
							}
							else
							{
								Script[myprices]:QueueCommand[call SaveSetting SellItems FALSE]
								Script[myprices].VariableScope.SellItems:Set[FALSE]
							}
						</OnLeftClick>
					</checkbox>
					<checkbox Name='Logging' Template='EQ2.checkbox'>
						<X>5%</X>
						<Y>190</Y>
						<Width>20%</Width>
						<Height>20</Height>
						<Text>Logging</Text>
						<AutoTooltip>
							Turn on Logging
						</AutoTooltip>
						<OnLoad>
						if ${Script[myprices].VariableScope.Logging}
						{
							UIElement[Logging@Sell@GUITabs@MyPrices]:SetChecked
						}
						else
						{
							UIElement[Logging@Sell@GUITabs@MyPrices]:UnsetChecked
						}
						</OnLoad>
						<OnLeftClick>
							if ${UIElement[Logging@Sell@GUITabs@MyPrices].Checked}
							{
								Script[myprices]:QueueCommand[call SaveSetting Logging TRUE]
								Script[myprices].VariableScope.Logging:Set[TRUE]
							}
							else
							{
								Script[myprices]:QueueCommand[call SaveSetting Logging FALSE]
								Script[myprices].VariableScope.Logging:Set[FALSE]
							}
						</OnLeftClick>
					</checkbox>
					<checkbox Name='Natural' Template='EQ2.checkbox'>
						<X>5%</X>
						<Y>210</Y>
						<Width>20%</Width>
						<Height>20</Height>
						<Text>Natural Scan</Text>
						<AutoTooltip>
							Perform more natural scans
						</AutoTooltip>
						<OnLoad>
						if ${Script[myprices].VariableScope.Natural}
						{
							UIElement[Natural@Sell@GUITabs@MyPrices]:SetChecked
						}
						else
						{
							UIElement[Natural@Sell@GUITabs@MyPrices]:UnsetChecked
						}
						</OnLoad>
						<OnLeftClick>
							if ${UIElement[Natural@Sell@GUITabs@MyPrices].Checked}
							{
								Script[myprices]:QueueCommand[call SaveSetting Natural TRUE]
								Script[myprices].VariableScope.Natural:Set[TRUE]
							}
							else
							{
								Script[myprices]:QueueCommand[call SaveSetting Natural FALSE]
								Script[myprices].VariableScope.Natural:Set[FALSE]
							}
						</OnLeftClick>
					</checkbox>
					
					<Text Name='Normal' Template='EQ2.Text'>
						<X>5%</X>
						<Y>230</Y>
						<Width>30%</Width> 
						<Height>15</Height>
						<Text>Black : Not Changed</Text>
					</Text>
					<Text Name='Green' Template='EQ2.Text'>
						<X>5%</X>
						<Y>250</Y>
						<Width>30%</Width> 
						<Height>15</Height>
						<Text>Green : Matched Price</Text>
					</Text>
					<Text Name='Red' Template='EQ2.Text'>
						<X>5%</X>
						<Y>270</Y>
						<Width>30%</Width> 
						<Height>15</Height>
						<Text>Red : Unable to match</Text>
					</Text>
					<Text Name='Blue' Template='EQ2.Text'>
						<X>5%</X>
						<Y>290</Y>
						<Width>30%</Width> 
						<Height>15</Height>
						<Text>Blue : New Item Listed</Text>
					</Text>
					<Text Name='Orange' Template='EQ2.Text'>
						<X>5%</X>
						<Y>310</Y>
						<Width>30%</Width> 
						<Height>15</Height>
						<Text>Orange : Item Sold</Text>
					</Text>
					<Text Name='Yellow' Template='EQ2.Text'>
						<X>5%</X>
						<Y>330</Y>
						<Width>30%</Width> 
						<Height>15</Height>
						<Text>Yellow : Craft Flagged</Text>
					</Text>
					<Text Name='PauseTimerText' Template='EQ2.Text'>
						<X>25</X>
						<Y>370</Y>
						<Width>150</Width> 
						<Height>15</Height>
						<Text>Delay in Minutes :</Text>
					</Text>

					<Textentry Name='PauseTimer' Template='EQ2.Textentry'>
						<X>140</X>
						<Y>370</Y>
						<Width>30</Width> 
						<Height>15</Height>
						<MaxLength>3</MaxLength>
						<OnLoad>
							UIElement[PauseTimer@Sell@GUITabs@MyPrices]:SetText[${Script[myprices].VariableScope.PauseTimer}]
						</OnLoad>
					</Textentry>
					<Commandbutton name='Craft' Template='EQ2.Commandbutton'>
						<X>5%</X>
						<Y>390</Y>
						<Width>100</Width>
						<Height>20</Height>
						<Text>Craft List</Text>
						<AutoTooltip>
							Create recipe list for Craft.
						</AutoTooltip>
						<OnLeftClick>
							Script[myprices]:QueueCommand[call LoadList]
							Script[myprices]:QueueCommand[call checkstock]
						</OnLeftClick>
					</Commandbutton>
					<Commandbutton name='Place' Template='EQ2.Commandbutton'>
						<X>5%</X>
						<Y>415</Y>
						<Width>100</Width>
						<Height>20</Height>
						<Text>Place Items</Text>
						<AutoTooltip>
							Put your crafted items on the broker.
						</AutoTooltip>
						<OnLeftClick>
							Script[myprices]:QueueCommand[call buy item place]
						</OnLeftClick>
					</Commandbutton>
					<Text Name='Itemname' Template='EQ2.Text'>
						<X>25</X>
						<Y>435</Y>
						<Width>44%</Width> 
						<Height>15</Height>
					</Text>
					<Text Name='Label1' Template='EQ2.Text'>
						<X>25</X>
						<Y>460</Y>
						<Width>80</Width> 
						<Height>15</Height>
						<Text>Current Price</Text>
					</Text>
					<Textentry Name='PlatPrice' Template='EQ2.Textentry'>
						<X>125</X>
						<Y>460</Y>
						<Width>50</Width> 
						<Height>15</Height>
						<MaxLength>5</MaxLength>
					</Textentry>
					<Text Name='PlatPriceText' Template='EQ2.Text'>
						<X>180</X>
						<Y>460</Y>
						<Width>20</Width> 
						<Height>15</Height>
						<Text>PP</Text>
					</Text>
					<Textentry Name='GoldPrice' Template='EQ2.Textentry'>
						<X>205</X>
						<Y>460</Y>
						<Width>30</Width> 
						<Height>15</Height>
						<MaxLength>3</MaxLength>
					</Textentry>
					<Text Name='GoldPriceText' Template='EQ2.Text'>
						<X>240</X>
						<Y>460</Y>
						<Width>20</Width> 
						<Height>15</Height>
						<Text>GP</Text>
					</Text>
					<Textentry Name='SilverPrice' Template='EQ2.Textentry'>
						<X>265</X>
						<Y>460</Y>
						<Width>30</Width> 
						<Height>15</Height>
						<MaxLength>3</MaxLength>
					</Textentry>
					<Text Name='SilverPriceText' Template='EQ2.Text'>
						<X>300</X>
						<Y>460</Y>
						<Width>20</Width> 
						<Height>15</Height>
						<Text>SP</Text>
					</Text>
					<Textentry Name='CopperPrice' Template='EQ2.Textentry'>
						<X>325</X>
						<Y>460</Y>
						<Width>30</Width> 
						<Height>15</Height>
						<MaxLength>3</MaxLength>
					</Textentry>
					<Text Name='CopperPriceText' Template='EQ2.Text'>
						<X>360</X>
						<Y>460</Y>
						<Width>20</Width> 
						<Height>15</Height>
						<Text>CP</Text>
					</Text>

					<Text Name='Label2' Template='EQ2.Text'>
						<X>25</X>
						<Y>480</Y>
						<Width>30%</Width> 
						<Height>15</Height>
						<Text>Minimum Price</Text>
					</Text>

					<Textentry Name='MinPlatPrice' Template='EQ2.Textentry'>
						<X>125</X>
						<Y>480</Y>
						<Width>50</Width> 
						<Height>15</Height>
						<MaxLength>5</MaxLength>
					</Textentry>
					<Text Name='MinPlatPriceText' Template='EQ2.Text'>
						<X>180</X>
						<Y>480</Y>
						<Width>20</Width> 
						<Height>15</Height>
						<Text>PP</Text>
					</Text>
					<Textentry Name='MinGoldPrice' Template='EQ2.Textentry'>
						<X>205</X>
						<Y>480</Y>
						<Width>30</Width> 
						<Height>15</Height>
						<MaxLength>3</MaxLength>
					</Textentry>
					<Text Name='MinGoldPriceText' Template='EQ2.Text'>
						<X>240</X>
						<Y>480</Y>
						<Width>20</Width> 
						<Height>15</Height>
						<Text>GP</Text>
					</Text>
					<Textentry Name='MinSilverPrice' Template='EQ2.Textentry'>
						<X>265</X>
						<Y>480</Y>
						<Width>30</Width> 
						<Height>15</Height>
						<MaxLength>3</MaxLength>
					</Textentry>
					<Text Name='MinSilverPriceText' Template='EQ2.Text'>
						<X>300</X>
						<Y>480</Y>
						<Width>20</Width> 
						<Height>15</Height>
						<Text>SP</Text>
					</Text>
					<Textentry Name='MinCopperPrice' Template='EQ2.Textentry'>
						<X>325</X>
						<Y>480</Y>
						<Width>30</Width> 
						<Height>15</Height>
						<MaxLength>3</MaxLength>
					</Textentry>
					<Text Name='MinCopperPriceText' Template='EQ2.Text'>
						<X>360</X>
						<Y>480</Y>
						<Width>20</Width> 
						<Height>15</Height>
						<Text>CP</Text>
					</Text>

					<Commandbutton name='UpdatePrice' Template='EQ2.Commandbutton'> 
						<X>400</X> 
						<Y>480</Y> 
						<Width>50</Width> 
						<Height>15</Height>
						<Text>Save</Text>
						<OnLeftClick>
							Script[myprices]:QueueCommand[call pricefromstring]
						</OnLeftClick>
						<AutoTooltip>
							Update your Minimum Sale Price
						</AutoTooltip>
					</Commandbutton>
					<checkbox Name='CraftItem' Template='EQ2.checkbox'>
						<X>325</X>
						<Y>415</Y>
						<Width>20</Width>
						<Height>20</Height>
						<Text>Crafted Item</Text>
						<AutoTooltip>
							Mark this item as a crafted item.
						</AutoTooltip>
					</checkbox>

					<checkbox Name='MinPrice' Template='EQ2.checkbox'>
						<X>325</X>
						<Y>435</Y>
						<Width>10%</Width>
						<Height>20</Height>
						<Text>Minimum price</Text>
						<AutoTooltip>
							Item has a Minimum Sale Price
						</AutoTooltip>
						<OnLoad>
							UIElement[MinPlatPrice@Sell@GUITabs@MyPrices]:SetAlpha[0.1]
							UIElement[MinGoldPrice@Sell@GUITabs@MyPrices]:SetAlpha[0.1]
							UIElement[MinSilverPrice@Sell@GUITabs@MyPrices]:SetAlpha[0.1]
							UIElement[MinCopperPrice@Sell@GUITabs@MyPrices]:SetAlpha[0.1]
							UIElement[MinPlatPriceText@Sell@GUITabs@MyPrices]:SetAlpha[0.1]
							UIElement[MinGoldPriceText@Sell@GUITabs@MyPrices]:SetAlpha[0.1]
							UIElement[MinSilverPriceText@Sell@GUITabs@MyPrices]:SetAlpha[0.1]
							UIElement[MinCopperPriceText@Sell@GUITabs@MyPrices]:SetAlpha[0.1]
							UIElement[label2@Sell@GUITabs@MyPrices]:SetAlpha[0.1]
						</OnLoad>						
						<OnLeftClick>
							if ${UIElement[MinPrice@Sell@GUITabs@MyPrices].Checked}
							{
							UIElement[MinPlatPrice@Sell@GUITabs@MyPrices]:SetAlpha[1]
							UIElement[MinGoldPrice@Sell@GUITabs@MyPrices]:SetAlpha[1]
							UIElement[MinSilverPrice@Sell@GUITabs@MyPrices]:SetAlpha[1]
							UIElement[MinCopperPrice@Sell@GUITabs@MyPrices]:SetAlpha[1]
							UIElement[MinPlatPriceText@Sell@GUITabs@MyPrices]:SetAlpha[1]
							UIElement[MinGoldPriceText@Sell@GUITabs@MyPrices]:SetAlpha[1]
							UIElement[MinSilverPriceText@Sell@GUITabs@MyPrices]:SetAlpha[1]
							UIElement[MinCopperPriceText@Sell@GUITabs@MyPrices]:SetAlpha[1]
							UIElement[label2@Sell@GUITabs@MyPrices]:SetAlpha[1]
							}
							else
							{
							UIElement[MinPlatPrice@Sell@GUITabs@MyPrices]:SetAlpha[0.1]
							UIElement[MinGoldPrice@Sell@GUITabs@MyPrices]:SetAlpha[0.1]
							UIElement[MinSilverPrice@Sell@GUITabs@MyPrices]:SetAlpha[0.1]
							UIElement[MinCopperPrice@Sell@GUITabs@MyPrices]:SetAlpha[0.1]
							UIElement[MinPlatPriceText@Sell@GUITabs@MyPrices]:SetAlpha[0.1]
							UIElement[MinGoldPriceText@Sell@GUITabs@MyPrices]:SetAlpha[0.1]
							UIElement[MinSilverPriceText@Sell@GUITabs@MyPrices]:SetAlpha[0.1]
							UIElement[MinCopperPriceText@Sell@GUITabs@MyPrices]:SetAlpha[0.1]
							UIElement[label2@Sell@GUITabs@MyPrices]:SetAlpha[0.1]
							}
						</OnLeftClick>
					</checkbox>
					<listbox Name='ItemList' Template='EQ2.listbox'>
						<X>45%</X>
						<Y>2%</Y>
						<Width>52%</Width>
						<Height>62%</Height>
						<SelectMultiple>0</SelectMultiple>
						<Sort>None</Sort>
						<OnSelect>
							Script[myprices]:QueueCommand[call FillMinPrice ${ID}]
							Script[myprices]:QueueCommand[call ClickBrokerSearch Sell ${ID}]
						</OnSelect>
					</listbox>
					<checkbox Name='1' Template='EQ2.checkbox'>
						<X>45%</X>
						<Y>65%</Y>
						<Width>20</Width>
						<Height>20</Height>
						<Text>Box 1</Text>
						<AutoTooltip>
							Scan Box 1
						</AutoTooltip>
						<OnLoad>
						if ${Script[myprices].VariableScope.box[1]}
						{
							UIElement[1@Sell@GUITabs@MyPrices]:SetChecked
						}
						else
						{
							UIElement[1@Sell@GUITabs@MyPrices]:UnsetChecked
						}
						</OnLoad>
						<OnLeftClick>
							if ${UIElement[1@Sell@GUITabs@MyPrices].Checked}
							{
								Script[myprices]:QueueCommand[call SaveSetting box1 TRUE]
								Script[myprices].VariableScope.box[1]:Set[TRUE]
							}
							else
							{
								Script[myprices]:QueueCommand[call SaveSetting box1 FALSE]
								Script[myprices].VariableScope.box[1]:Set[FALSE]
							}
								Script[myprices]:QueueCommand[call LoadList]
						</OnLeftClick>
					</checkbox>
					<checkbox Name='2' Template='EQ2.checkbox'>
						<X>60%</X>
						<Y>65%</Y>
						<Width>20</Width>
						<Height>20</Height>
						<Text>Box 2</Text>
						<AutoTooltip>
							Scan Box 2
						</AutoTooltip>
						<OnLoad>
						if ${Script[myprices].VariableScope.box[2]}
						{
							UIElement[2@Sell@GUITabs@MyPrices]:SetChecked
						}
						else
						{
							UIElement[2@Sell@GUITabs@MyPrices]:UnsetChecked
						}
						</OnLoad>
						<OnLeftClick>
							if ${UIElement[2@Sell@GUITabs@MyPrices].Checked}
							{
								Script[myprices]:QueueCommand[call SaveSetting box2 TRUE]
								Script[myprices].VariableScope.box[2]:Set[TRUE]
							}
							else
							{
								Script[myprices]:QueueCommand[call SaveSetting box2 FALSE]
								Script[myprices].VariableScope.box[2]:Set[FALSE]
							}
								Script[myprices]:QueueCommand[call LoadList]
						</OnLeftClick>
					</checkbox>
					<checkbox Name='3' Template='EQ2.checkbox'>
						<X>75%</X>
						<Y>65%</Y>
						<Width>20</Width>
						<Height>20</Height>
						<Text>Box 3</Text>
						<AutoTooltip>
							Scan Box 3
						</AutoTooltip>
						<OnLoad>
						if ${Script[myprices].VariableScope.box[3]}
						{
							UIElement[3@Sell@GUITabs@MyPrices]:SetChecked
						}
						else
						{
							UIElement[3@Sell@GUITabs@MyPrices]:UnsetChecked
						}
						</OnLoad>
						<OnLeftClick>
							if ${UIElement[3@Sell@GUITabs@MyPrices].Checked}
							{
								Script[myprices]:QueueCommand[call SaveSetting box3 TRUE]
								Script[myprices].VariableScope.box[3]:Set[TRUE]
							}
							else
							{
								Script[myprices]:QueueCommand[call SaveSetting box3 FALSE]
								Script[myprices].VariableScope.box[3]:Set[FALSE]
							}
								Script[myprices]:QueueCommand[call LoadList]
						</OnLeftClick>
					</checkbox>
					<checkbox Name='4' Template='EQ2.checkbox'>
						<X>45%</X>
						<Y>70%</Y>
						<Width>20</Width>
						<Height>20</Height>
						<Text>Box 4</Text>
						<AutoTooltip>
							Scan Box 4
						</AutoTooltip>
						<OnLoad>
						if ${Script[myprices].VariableScope.box[4]}
						{
							UIElement[4@Sell@GUITabs@MyPrices]:SetChecked
						}
						else
						{
							UIElement[4@Sell@GUITabs@MyPrices]:UnsetChecked
						}
						</OnLoad>
						<OnLeftClick>
							if ${UIElement[4@Sell@GUITabs@MyPrices].Checked}
							{
								Script[myprices]:QueueCommand[call SaveSetting box4 TRUE]
								Script[myprices].VariableScope.box[4]:Set[TRUE]
							}
							else
							{
								Script[myprices]:QueueCommand[call SaveSetting box4 FALSE]
								Script[myprices].VariableScope.box[4]:Set[FALSE]
							}
								Script[myprices]:QueueCommand[call LoadList]
						</OnLeftClick>
					</checkbox>
					<checkbox Name='5' Template='EQ2.checkbox'>
						<X>60%</X>
						<Y>70%</Y>
						<Width>20</Width>
						<Height>20</Height>
						<Text>Box 5</Text>
						<AutoTooltip>
							Scan Box 5
						</AutoTooltip>
						<OnLoad>
						if ${Script[myprices].VariableScope.box[5]}
						{
							UIElement[5@Sell@GUITabs@MyPrices]:SetChecked
						}
						else
						{
							UIElement[5@Sell@GUITabs@MyPrices]:UnsetChecked
						}
						</OnLoad>
						<OnLeftClick>
							if ${UIElement[5@Sell@GUITabs@MyPrices].Checked}
							{
								Script[myprices]:QueueCommand[call SaveSetting box5 TRUE]
								Script[myprices].VariableScope.box[5]:Set[TRUE]
							}
							else
							{
								Script[myprices]:QueueCommand[call SaveSetting box5 FALSE]
								Script[myprices].VariableScope.box[5]:Set[FALSE]
							}
								Script[myprices]:QueueCommand[call LoadList]
						</OnLeftClick>
					</checkbox>
					<checkbox Name='6' Template='EQ2.checkbox'>
						<X>75%</X>
						<Y>70%</Y>
						<Width>20</Width>
						<Height>20</Height>
						<Text>Box 6</Text>
						<AutoTooltip>
							Scan Box 6
						</AutoTooltip>
						<OnLoad>
						if ${Script[myprices].VariableScope.box[6]}
						{
							UIElement[6@Sell@GUITabs@MyPrices]:SetChecked
						}
						else
						{
							UIElement[6@Sell@GUITabs@MyPrices]:UnsetChecked
						}
						</OnLoad>
						<OnLeftClick>
							if ${UIElement[6@Sell@GUITabs@MyPrices].Checked}
							{
								Script[myprices]:QueueCommand[call SaveSetting box6 TRUE]
								Script[myprices].VariableScope.box[6]:Set[TRUE]
							}
							else
							{
								Script[myprices]:QueueCommand[call SaveSetting box6 FALSE]
								Script[myprices].VariableScope.box[6]:Set[FALSE]
							}
								Script[myprices]:QueueCommand[call LoadList]
						</OnLeftClick>
					</checkbox>
					<Commandbutton name='Start Scanning' Template='EQ2.Commandbutton'> 
						<X>20%</X> 
						<Y>92%</Y> 
						<Width>25%</Width> 
						<Height>25</Height>
						<Text>Start Scanning</Text>
						<OnLeftClick>
							if ${Script[myprices].VariableScope.Pausemyprices}
							{
								UIElement[Start Scanning@Sell@GUITabs@MyPrices]:SetText[Stop Scanning]
								Script[myprices].VariableScope.Pausemyprices:Set[FALSE]
								Script[myprices].VariableScope.StopWaiting:Set[0]
							}
							else
							{
								UIElement[Start Scanning@Sell@GUITabs@MyPrices]:SetText[Start Scanning]
								Script[myprices].VariableScope.Pausemyprices:Set[TRUE]
								Script[myprices].VariableScope.StopWaiting:Set[1]
							}
						</OnLeftClick>
						<AutoTooltip>
							Start or pause myprices after the next scan is finshed
						</AutoTooltip>
					</Commandbutton>
					<Commandbutton name='Exit MyPrices' Template='EQ2.Commandbutton'> 
						<X>60%</X> 
						<Y>92%</Y> 
						<Width>25%</Width> 
						<Height>25</Height>
						<Text>Stop and Quit</Text>
						<OnLeftClick>
							if !${Script[myprices].VariableScope.Exitmyprices}
							{
								UIElement[Exit MyPrices@Sell@GUITabs@MyPrices]:SetText[Closing Down]
								UIElement[Start Scanning@Sell@GUITabs@MyPrices]:SetText[Closing Down]
								Script[myprices].VariableScope.Exitmyprices:Set[TRUE]
								Script[myprices].VariableScope.StopWaiting:Set[1]
							}
						</OnLeftClick>
						<AutoTooltip>
							Stop scanning after next item and Quit
						</AutoTooltip>
					</Commandbutton>
				</Tab>
				<Tab Name='Buy'>
					<checkbox Name='BuyItems' Template='EQ2.checkbox'>
						<X>5%</X>
						<Y>20</Y>
						<Width>20%</Width>
						<Height>20</Height>
						<Text>Buy Items</Text>
						<AutoTooltip>
							Scan the broker for items to buy.
						</AutoTooltip>
						<OnLoad>
						if ${Script[myprices].VariableScope.BuyItems}
						{
							UIElement[BuyItems@Buy@GUITabs@MyPrices]:SetChecked
						}
						else
						{
							UIElement[BuyItems@Buy@GUITabs@MyPrices]:UnsetChecked
						}
						</OnLoad>
						<OnLeftClick>
							if ${UIElement[BuyItems@Buy@GUITabs@MyPrices].Checked}
							{
								Script[myprices]:QueueCommand[call SaveSetting BuyItems TRUE]
								Script[myprices].VariableScope.BuyItems:Set[TRUE]
							}
							else
							{
								Script[myprices]:QueueCommand[call SaveSetting BuyItems FALSE]
								Script[myprices].VariableScope.BuyItems:Set[FALSE]
							}
						</OnLeftClick>
					</checkbox>
					<listbox Name='ItemList' Template='EQ2.listbox'>
						<X>5%</X>
						<Y>40</Y>
						<Width>90%</Width>
						<Height>50%</Height>
						<SelectMultiple>0</SelectMultiple>
						<Sort>None</Sort>
						<OnLoad>
							Script[myprices]:QueueCommand[call buy Buy Init]
						</OnLoad>
						<OnSelect>
							Script[myprices]:QueueCommand[call ShowBuyPrices ${ID}]
							Script[myprices]:QueueCommand[call ClickBrokerSearch Buy ${ID}]

						</OnSelect>
					</listbox>
					<Text Name='BuyNameText' Template='EQ2.Text'>
						<X>30</X>
						<Y>340</Y>
						<Width>80</Width> 
						<Height>20</Height>
						<Text>Name</Text>
					</Text>
					<checkbox Name='Harvest' Template='EQ2.checkbox'>
						<X>160</X>
						<Y>325</Y>
						<Width>100</Width>
						<Height>20</Height>
						<Text>Harvest</Text>
						<AutoTooltip>
							Item is a harvest item (200 per stack)
						</AutoTooltip>
					</checkbox>
					<Text Name='BuyNumberText' Template='EQ2.Text'>
						<X>393</X>
						<Y>340</Y>
						<Width>80</Width> 
						<Height>20</Height>
						<Text>Number</Text>
					</Text>
					<checkbox Name='BuyNameOnly' Template='EQ2.checkbox'>
						<X>280</X>
						<Y>325</Y>
						<Width>100</Width>
						<Height>20</Height>
						<Text>Name Only</Text>
						<OnLeftClick>
							if ${UIElement[BuyNameOnly@Buy@GUITabs@MyPrices].Checked}
							{
								UIElement[StartLevelText@Buy@GUITabs@MyPrices]:Hide
								UIElement[StartLevel@Buy@GUITabs@MyPrices]:Hide
								UIElement[EndLevelText@Buy@GUITabs@MyPrices]:Hide
								UIElement[EndLevel@Buy@GUITabs@MyPrices]:Hide
								UIElement[Tier@Buy@GUITabs@MyPrices]:Hide
							}
							else
							{
								UIElement[StartLevelText@Buy@GUITabs@MyPrices]:Show
								UIElement[StartLevel@Buy@GUITabs@MyPrices]:Show
								UIElement[EndLevelText@Buy@GUITabs@MyPrices]:Show
								UIElement[EndLevel@Buy@GUITabs@MyPrices]:Show
								UIElement[Tier@Buy@GUITabs@MyPrices]:Show
							}
						</OnLeftClick>
						<AutoTooltip>
							Match name Only (exact match)
						</AutoTooltip>
					</checkbox>
					<Textentry Name='BuyName' Template='EQ2.Textentry'>
						<X>25</X>
						<Y>355</Y>
						<Width>350</Width> 
						<Height>20</Height>
						<MaxLength>70</MaxLength>
					</Textentry>
					<Text name='StartLevelText' Template='EQ2.Text'>
						<X>25</X>
						<Y>385</Y>
						<Width>90</Width> 
						<Height>20</Height>
						<Text>Start Level</Text>
					</Text>
					<Textentry name='StartLevel' Template='EQ2.Textentry'>
						<X>95</X>
						<Y>385</Y>
						<Width>50</Width> 
						<Height>20</Height>
						<MaxLength>4</MaxLength>
					</Textentry>
					<Text name='EndLevelText' Template='EQ2.Text'>
						<X>155</X>
						<Y>385</Y>
						<Width>90</Width> 
						<Height>20</Height>
						<Text>End Level</Text>
					</Text>
					<Textentry name='EndLevel' Template='EQ2.Textentry'>
						<X>225</X>
						<Y>385</Y>
						<Width>50</Width> 
						<Height>20</Height>
						<MaxLength>4</MaxLength>
					</Textentry>
					<Textentry Name='BuyNumber' Template='EQ2.Textentry'>
						<X>390</X>
						<Y>355</Y>
						<Width>50</Width> 
						<Height>20</Height>
						<MaxLength>6</MaxLength>
					</Textentry>
					<Textentry Name='MinPlatPrice' Template='EQ2.Textentry'>
						<X>35</X>
						<Y>450</Y>
						<Width>50</Width> 
						<Height>15</Height>
						<MaxLength>5</MaxLength>
					</Textentry>
					<Text Name='MinPlatPriceText' Template='EQ2.Text'>
						<X>90</X>
						<Y>450</Y>
						<Width>20</Width> 
						<Height>15</Height>
						<Text>PP</Text>
					</Text>
					<Textentry Name='MinGoldPrice' Template='EQ2.Textentry'>
						<X>115</X>
						<Y>450</Y>
						<Width>30</Width> 
						<Height>15</Height>
						<MaxLength>3</MaxLength>
					</Textentry>
					<Text Name='MinGoldPriceText' Template='EQ2.Text'>
						<X>150</X>
						<Y>450</Y>
						<Width>20</Width> 
						<Height>15</Height>
						<Text>GP</Text>
					</Text>
					<Textentry Name='MinSilverPrice' Template='EQ2.Textentry'>
						<X>175</X>
						<Y>450</Y>
						<Width>30</Width> 
						<Height>15</Height>
						<MaxLength>3</MaxLength>
					</Textentry>
					<Text Name='MinSilverPriceText' Template='EQ2.Text'>
						<X>210</X>
						<Y>450</Y>
						<Width>20</Width> 
						<Height>15</Height>
						<Text>SP</Text>
					</Text>
					<Textentry Name='MinCopperPrice' Template='EQ2.Textentry'>
						<X>235</X>
						<Y>450</Y>
						<Width>30</Width> 
						<Height>15</Height>
						<MaxLength>3</MaxLength>
					</Textentry>
					<Text Name='MinCopperPriceText' Template='EQ2.Text'>
						<X>270</X>
						<Y>450</Y>
						<Width>20</Width> 
						<Height>15</Height>
						<Text>CP</Text>
						<Color>FFDDBB00</Color>
					</Text>
					<Text Name='ErrorText' Template='EQ2.Text'>
						<X>24%</X>
						<Y>500</Y>
						<Width>350</Width> 
						<Height>15</Height>
					</Text>
					<combobox name='Tier' Template='EQ2.Combobox'>
						<X>100</X>
						<Y>420</Y>
						<Width>150</Width> 
						<Height>20</Height> 
				               <FullHeight>120</FullHeight>
				               <ButtonWidth>20</ButtonWidth>
						<Items>
						<Item Value='1' Default='1'>All</Item>
						<Item Value='2' Default='1'>Common</Item>
						<Item Value='3'>Handcrafted</Item>
						<Item Value='4'>Treasured</Item>
						<Item Value='5'>Mastercrafted</Item>
						<Item Value='6'>Legendary</Item>
						<Item Value='7'>Fabled</Item>
						<Item Value='8'>Mythical</Item>
						</Items>
					</combobox>
					<Commandbutton name='SaveBuy' Template='EQ2.Commandbutton'> 
						<X>325</X> 
						<Y>450</Y> 
						<Width>50</Width> 
						<Height>15</Height>
						<Text>Save</Text>
						<OnLeftClick>
						Script[myprices]:QueueCommand[call savebuyinfo]
						</OnLeftClick>
						<AutoTooltip>
							Update/Add a new item
						</AutoTooltip>
					</Commandbutton>
					<Commandbutton name='DeleteBuy' Template='EQ2.Commandbutton'> 
						<X>385</X> 
						<Y>450</Y> 
						<Width>50</Width> 
						<Height>15</Height>
						<Text>Delete</Text>
						<OnLeftClick>
						Script[myprices]:QueueCommand[call deletebuyinfo]
						</OnLeftClick>
						<AutoTooltip>
							Delete Selected Item
						</AutoTooltip>
					</Commandbutton>
				</Tab>
				<Tab Name='Craft'>
					<listbox Name='ItemList' Template='EQ2.listbox'>
						<X>5%</X>
						<Y>40</Y>
						<Width>90%</Width>
						<Height>70%</Height>
						<SelectMultiple>0</SelectMultiple>
						<Sort>None</Sort>
						<OnLoad>
							Script[myprices]:QueueCommand[call buy Craft Init]
						</OnLoad>
						<OnSelect>
							Script[myprices]:QueueCommand[call ShowCraftInfo ${ID}]
							Script[myprices]:QueueCommand[call ClickBrokerSearch Craft ${ID}]
						</OnSelect>
					</listbox>
					<Commandbutton name='Rescan' Template='EQ2.Commandbutton'> 
						<X>80%</X> 
						<Y>15</Y> 
						<Width>50</Width> 
						<Height>15</Height>
						<Text>Rescan</Text>
						<OnLeftClick>
							Script[myprices]:QueueCommand[call buy Craft init]
						</OnLeftClick>
						<AutoTooltip>
							Rescan the list
						</AutoTooltip>
					</Commandbutton>
					<Text Name='ErrorText' Template='EQ2.Text'>
						<X>24%</X>
						<Y>435</Y>
						<Width>350</Width> 
						<Height>15</Height>
					</Text>
					<Text Name='CraftName' Template='EQ2.Text'>
						<X>25</X>
						<Y>455</Y>
						<Width>350</Width> 
						<Height>20</Height>
						<MaxLength>70</MaxLength>
					</Text>
					<Text Name='RecipeNameText' Template='EQ2.Text'>
						<X>25</X>
						<Y>475</Y>
						<Width>80</Width> 
						<Height>20</Height>
						<Text>Recipe Name</Text>
					</Text>
					<Textentry Name='RecipeName' Template='EQ2.Textentry'>
						<X>105</X>
						<Y>475</Y>
						<Width>310</Width> 
						<Height>20</Height>
					</Textentry>
					<Text Name='CraftStackText' Template='EQ2.Text'>
						<X>25</X>
						<Y>505</Y>
						<Width>80</Width> 
						<Height>20</Height>
						<Text>Craft Stack</Text>
					</Text>
					<Textentry Name='CraftStack' Template='EQ2.Textentry'>
						<X>110</X>
						<Y>505</Y>
						<Width>50</Width> 
						<Height>20</Height>
						<MaxLength>5</MaxLength>
					</Textentry>
					<Text Name='CraftNumberText' Template='EQ2.Text'>
						<X>190</X>
						<Y>505</Y>
						<Width>80</Width> 
						<Height>20</Height>
						<Text>Stock Limit</Text>
					</Text>
					<Textentry Name='CraftNumber' Template='EQ2.Textentry'>
						<X>260</X>
						<Y>505</Y>
						<Width>50</Width> 
						<Height>20</Height>
						<MaxLength>5</MaxLength>
					</Textentry>
					<Commandbutton name='NoCraft' Template='EQ2.Commandbutton'> 
						<X>340</X> 
						<Y>505</Y> 
						<Width>50</Width> 
						<Height>15</Height>
						<Text>Unset</Text>
						<OnLeftClick>
							Script[myprices]:QueueCommand[call Unselectcraft ${ID}]
							Script[myprices]:QueueCommand[call buy Craft Init]
						</OnLeftClick>
						<AutoTooltip>
							Unselect as a Craftable Item
						</AutoTooltip>
					</Commandbutton>
					<Commandbutton name='SaveCraft' Template='EQ2.Commandbutton'> 
						<X>340</X> 
						<Y>525</Y> 
						<Width>50</Width> 
						<Height>15</Height>
						<Text>Save</Text>
						<OnLeftClick>
							Script[myprices]:QueueCommand[call savecraftinfo]
							Script[myprices]:QueueCommand[call buy Craft Init]
						</OnLeftClick>
						<AutoTooltip>
							Update an item
						</AutoTooltip>
					</Commandbutton>
				</Tab>
				<Tab Name='Log'>
					<listbox Name='ItemList' Template='EQ2.listbox'>
						<X>5%</X>
						<Y>2%</Y>
						<Width>90%</Width>
						<Height>90%</Height>
						<Font>
							<Name>Times New Roman</Name>
							<Size>14</Size>
						</Font>
						<SelectMultiple>0</SelectMultiple>
						<Sort>None</Sort>
					</listbox>
					<Commandbutton name='Clearlog' Template='EQ2.Commandbutton'> 
						<X>75%</X> 
						<Y>95%</Y> 
						<Width>100</Width> 
						<Height>15</Height>
						<Text>Clear Log</Text>
						<OnLeftClick>
							UIElement[ItemList@Log@GUITabs@MyPrices]:ClearItems
						</OnLeftClick>
						<AutoTooltip>
							Clear Log
						</AutoTooltip>
					</Commandbutton>
				</Tab>
			</Tabs>
		</Tabcontrol>
	</Children>
	</Window>
</ISUI>
