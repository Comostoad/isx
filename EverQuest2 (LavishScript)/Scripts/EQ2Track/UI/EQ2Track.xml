<?xml version="1.0" encoding="UTF-8" ?>
<ISUI>
	<template name='My.window.TitleBar'>
    		<Border>1</Border>
		<x>3</x>
    		<BorderColor>FF000033</BorderColor>
    		<Width>r6</Width>
		<Height>26</Height>
		<Texture Template='EQ2.window.TitleBar.Texture' />
		<Children>
			<Text Name='Title' template='EQ2.window.TitleBar.title' />
			<Button Name='Minimize' template='EQ2.window.TitleBar.Minimize'>
			</Button>
			<Button Name='Maximize' template='EQ2.window.TitleBar.Maximize'>
			</Button>
			<commandbutton name='Custom Close Button' Template='EQ2.Window.TitleBar.Close'>
				<Command>Script[EQ2Track]:End</Command>
			</commandbutton>
		</Children>
	</template>
	<template name='My.window'>
		<Border>1</Border>
		<Resizable MinHeight='190' MinWidth='225'>1</Resizable>
		<CloseButton />
		<MinimizeButton />
		<TitleBar template='My.window.TitleBar' />
		<OffsetTitleBarHeight />
		<Client template='EQ2.window.Client' />
		<StorePosition>1</StorePosition>
	</template>
	<Window name='EQ2 Track' Template='My.Window'>
		<X>10</X>
		<Y>10</Y>
		<Width>500</Width>
		<Height>750</Height>
		<StorePosition>1</StorePosition>
		<Title>${Me.Name} Track</Title>
		<OnLoad>
		</OnLoad>
		<OnUnload>
		</OnUnload>
		<OnLeftClick>
			This:SetFocus
		</OnLeftClick>
		<Children>

  <checkbox Name='TrackAggro' Template='EQ2.checkbox'>
    	<X>20</X>
    	<Y>10</Y>
    	<Width>100</Width>
    	<Height>20</Height>
    	<Text>Track aggro mobs only</Text>
    	<OnLoad>
    	if ${SettingXML[Scripts/EQ2Track/Character Config/${Me.Name}.xml].Set[General Settings].GetString[Aggro]}
    	{
    		UIElement[TrackAggro@EQ2 Track]:SetChecked
    	}
    	</OnLoad>
    	<OnLeftClick>
    		if ${UIElement[TrackAggro@EQ2 Track].Checked}
    		{
    			SettingXML[Scripts/EQ2Track/Character Config/${Me.Name}.xml].Set[General Settings]:Set[Aggro,TRUE]:Save
    			Script[EQ2Track].Variable[filtersChanged]:Set[TRUE]
    		}
    		else
    		{
    			SettingXML[Scripts/EQ2Track/Character Config/${Me.Name}.xml].Set[General Settings]:Set[Aggro,FALSE]:Save
    			Script[EQ2Track].Variable[filtersChanged]:Set[TRUE]
    		}
    	</OnLeftClick>
    </checkbox>
	<Text Name='lblTrackFilter' Template='EQ2.text'>
		<X>20</X>
		<Y>35</Y>
		<Width>100</Width>
		<Height>20</Height>
		<Alignment>Left</Alignment>
		<Text>Reverse Filter:</Text>
	</Text>
	<textentry name='TrackFilter'>
		<X>105</X>
		<Y>35</Y>
		<Width>100</Width>
		<Height>15</Height>
		<OnLoad>
		variable string TrackFilterText
		TrackFilterText:Set[${SettingXML[Scripts/EQ2Track/Character Config/${Me.Name}.xml].Set[General Settings].GetString[Filter]}]
		if ${TrackFilterText.Equal[NULL]}
		{
			TrackFilterText:Set[PC]
		}
		UIElement[TrackFilter@EQ2 Track]:SetText[${TrackFilterText}]
		</OnLoad>
		<OnKeyUp>
			SettingXML[Scripts/EQ2Track/Character Config/${Me.Name}.xml].Set[General Settings]:Set[Filter,${UIElement[TrackFilter@EQ2 Track].Text}]:Save
			Script[EQ2Track].Variable[filtersChanged]:Set[TRUE]
		</OnKeyUp>
	</textentry>
	<Text Name='lblLvlRangeFilter' Template='EQ2.text'>
		<X>20</X>
		<Y>60</Y>
		<Width>100</Width>
		<Height>20</Height>
		<Alignment>Left</Alignment>
		<Text>Level Range:</Text>
	</Text>	
	<textentry name='TrackMinLevel'>
		<X>100</X>
		<Y>60</Y>
		<Width>25</Width>
		<Height>15</Height>
		<OnLoad>
		variable string TrackMinLevelText
		TrackMinLevelText:Set[${SettingXML[Scripts/EQ2Track/Character Config/${Me.Name}.xml].Set[General Settings].GetString[TrackMinLevel]}]
		if ${TrackMinLevelText.Equal[NULL]}
		{
			TrackMinLevelText:Set[1]
		}
		UIElement[TrackMinLevel@EQ2 Track]:SetText[${TrackMinLevelText}]
		</OnLoad>
		<OnKeyUp>
			SettingXML[Scripts/EQ2Track/Character Config/${Me.Name}.xml].Set[General Settings]:Set[TrackMinLevel,${UIElement[TrackMinLevel@EQ2 Track].Text}]:Save
			Script[EQ2Track].Variable[filtersChanged]:Set[TRUE]
		</OnKeyUp>
	</textentry>
	<Text Name='lblLvlRangeFilter2' Template='EQ2.text'>
		<X>130</X>
		<Y>60</Y>
		<Width>25%</Width>
		<Height>20</Height>
		<Alignment>Left</Alignment>
		<Text>-</Text>
	</Text>		
	<textentry name='TrackMaxLevel'>
		<X>140</X>
		<Y>60</Y>
		<Width>25</Width>
		<Height>15</Height>
		<OnLoad>
		variable string TrackMaxLevelText
		TrackMaxLevelText:Set[${SettingXML[Scripts/EQ2Track/Character Config/${Me.Name}.xml].Set[General Settings].GetString[TrackMaxLevel]}]
		if ${TrackMaxLevelText.Equal[NULL]}
		{
			TrackMaxLevelText:Set[80]
		}
		UIElement[TrackMaxLevel@EQ2 Track]:SetText[${TrackMaxLevelText}]
		</OnLoad>
		<OnKeyUp>
      SettingXML[Scripts/EQ2Track/Character Config/${Me.Name}.xml].Set[General Settings]:Set[TrackMaxLevel,${UIElement[TrackMaxLevel@EQ2 Track].Text}]:Save
      Script[EQ2Track].Variable[filtersChanged]:Set[TRUE]
    </OnKeyUp>
	</textentry>
      <Text Name='TrackSortLabel'>
        <X>20</X>
        <Y>80</Y>
        <Width>50</Width>
        <Height>20</Height>
        <Text>Sort by:</Text>
      </Text>
      <combobox name='TrackSort'>
        <X>70</X>
        <Y>80</Y>
        <Width>100</Width>
        <Height>20</Height>
        <FullHeight>120</FullHeight>
        <ButtonWidth>20</ButtonWidth>
        <Items>
          <Item Value='1'>Distance</Item>
          <Item Value='2'>Name</Item>
          <Item Value='3'>Level</Item>
          <Item Value='4'>Type</Item>
          <Item Value='5'>None</Item>
        </Items>
        <OnLoad>
          variable int TrackSortInt
          TrackSortInt:Set[${SettingXML[Scripts/EQ2Track/Character Config/${Me.Name}.xml].Set[General Settings].GetInt[TrackSort]}]
          if ${TrackSortInt} == 0
          {
          TrackSortInt:Set[1]
          }
          UIElement[TrackSort@EQ2 Track]:SetSelection[${TrackSortInt}]
        </OnLoad>
        <OnSelect>
          SettingXML[Scripts/EQ2Track/Character Config/${Me.Name}.xml].Set[General Settings]:Set[TrackSort,${This.Selection}]:Save
          Script[EQ2Track].Variable[SortChanged]:Set[TRUE]
        </OnSelect>
      </combobox>
	<listbox name='TrackItems'>
		<X>20</X>
		<Y>110</Y>
		<Width>r40</Width>
		<Height>r130</Height>
		<SelectMultiple>0</SelectMultiple>
		<Texture filename='Listbox.png'/>
		<Items>
			<Item Value='1'>Tracking</Item>
			<Item Value='2'>Please Wait</Item>
		</Items>
		<OnLeftClick>
      eq2execute /waypoint ${Actor[${This.SelectedItem.Value}]:DoTarget.Loc}
    </OnLeftClick>
	</listbox>

		</Children>
	</Window>
</ISUI>