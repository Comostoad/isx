<?xml version="1.0" encoding="UTF-8"?>
<ISUI>
  <!-- Main LGUI -->
  <Window Name='Craft Selection'>
    <X>100</X>
    <Y>100</Y>
    <Width>433</Width>
    <Height>720</Height>
    <StorePosition>1</StorePosition>
    <Title>Automatic Crafting Bot</Title>
    <TitleBar Template='window.Titlebar'>
      <Children>
        <Text Name='Title' Template='window.Titlebar.Title' />
        <Button Name='Minimize' Template='window.Titlebar.Minimize' />
        <Button Name='CraftLite'>
          <X>240</X>
          <Y>0</Y>
          <Width>70</Width>
          <Height>14</Height>
		  <Font Template='button.Font'>
			<Size>13</Size>
			<Bold />
		  </Font>
          <Text>Craft Lite</Text>
          <OnLeftClick>
            if ${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[CraftLite]}
            {
            UIElement[Main Frame@Craft Selection]:Show
            Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[Craft]:SetMode[normal]
            UIElement[Craft Selection]:Unminimize
            This:SetText[Craft Lite]
            }
            else
            {
            UIElement[Main Frame@Craft Selection]:Hide
            Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[Craft]:SetMode[lite]
            UIElement[Craft Selection]:Minimize
            This:SetText[Craft Full]
            }
          </OnLeftClick>
        </Button>
        <commandbutton name='Custom Close Button' Template='window.Titlebar.Close'>
          <Command>Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}]:End</Command>
        </commandbutton>
      </Children>
    </TitleBar>
    <OnLoad>
      declare thisbuttondisabled bool global 0
      declare thisbuttonrefresh bool global 0
      declare thisbuttonpaused bool global 0
      declare thisbuttonlist bool global 0
      declare thisbuttonsubmit bool global 0
      declare thisbuttonadd bool global 0
      declare thisharvestframe bool global 0
    </OnLoad>
    <OnUnload>
      deletevar thisbuttondisabled
      deletevar thisbuttonrefresh
      deletevar thisbuttonpaused
      deletevar thisbuttonlist
      deletevar thisbuttonsubmit
      deletevar thisbuttonadd
      deletevar thisharvestframe
    </OnUnload>
    <Children>
      <Frame Name='Main Frame'>
        <X>10</X>
        <Y>28</Y>
        <Height>720</Height>
        <Width>96%</Width>
        <Visible>1</Visible>
        <Children>
          <Tabcontrol Name='Craft Main'>
            <X>0</X>
            <Y>0</Y>
            <Font>
              <Name>Times New Roman</Name>
              <Size>19</Size>
            </Font>
            <TabHeight>27</TabHeight>
            <TabBorder>3</TabBorder>
            <Height>r50</Height>
            <Width>100%</Width>
            <OnLeftClick>
              if ${UIElement[Craft Selection].FindUsableChild[Craft Main,tabcontrol].SelectedTab.Name.Equal[Advanced]}
              {
              UIElement[Craft Selection].FindUsableChild[Harvest Frame,frame]:Hide:SetZOrder[notalwaysontop]:SetZOrder[movedown]
              UIElement[Craft Selection].FindUsableChild[Crafting List Frame,frame]:Show:SetZOrder[alwaysontop]:SetZOrder[movetop]
              }
              elseif ${UIElement[Craft Selection].FindUsableChild[Craft Main,tabcontrol].SelectedTab.Name.Equal[Options]}
              {
              UIElement[Craft Selection].FindUsableChild[Harvest Frame,frame]:Hide:SetZOrder[notalwaysontop]:SetZOrder[movedown]
              UIElement[Craft Selection].FindUsableChild[Crafting List Frame,frame]:Hide:SetZOrder[notalwaysontop]:SetZOrder[movedown]
              }
              elseif ${UIElement[Craft Selection].FindUsableChild[Craft Main,tabcontrol].SelectedTab.Name.Equal[Writs]}
              {
              UIElement[Craft Selection].FindUsableChild[Harvest Frame,frame]:Hide:SetZOrder[notalwaysontop]:SetZOrder[movedown]
              UIElement[Craft Selection].FindUsableChild[Crafting List Frame,frame]:Hide:SetZOrder[notalwaysontop]:SetZOrder[movedown]
              }
              elseif ${UIElement[Craft Selection].FindUsableChild[Craft Main,tabcontrol].SelectedTab.Name.Equal[About]}
              {
              UIElement[Craft Selection].FindUsableChild[Harvest Frame,frame]:Hide:SetZOrder[notalwaysontop]:SetZOrder[movedown]
              UIElement[Craft Selection].FindUsableChild[Crafting List Frame,frame]:Hide:SetZOrder[notalwaysontop]:SetZOrder[movedown]
              }
              else
              {
              UIElement[Craft Selection].FindUsableChild[Crafting List Frame,frame]:Hide:SetZOrder[notalwaysontop]:SetZOrder[movedown]
              if ${thisharvestframe}
              {
              UIElement[Craft Selection].FindUsableChild[Harvest Frame,frame]:Show:SetZOrder[alwaysontop]:SetZOrder[movetop]
              }
              }
            </OnLeftClick>
            <Tabs>
              <Tab Name='Recipes'>
                <Combobox Name='Recipe List'>
                  <X>5</X>
                  <Y>6</Y>
                  <Width>97.8%</Width>
                  <Height>23</Height>
                  <FullHeight>250%</FullHeight>
                  <ButtonWidth>20</ButtonWidth>
                  <!--	<Font>
										<Name>terminal</Name>
										<Size>18</Size>
										<Color>FFEBDEAA</Color>
									</Font> -->
                </Combobox>
                <Text name='Sort Order'>
                  <X>18</X>
                  <Y>35</Y>
                  <Width>150</Width>
                  <Height>20</Height>
                  <Font>
                    <Name>terminal</Name>
                    <Size>12</Size>
                    <Color>FFEBDEAA</Color>
                  </Font>
                  <Text>Sort Order:</Text>
                </Text>
                <Checkbox Name='Sort Name'>
                  <Font>
                    <Name>terminal</Name>
                    <Size>12</Size>
                    <Color>FFEBDEAA</Color>
                  </Font>
                  <X>110</X>
                  <Y>30</Y>
                  <Width>50</Width>
                  <Height>20</Height>
                  <Text>by Name</Text>
                  <OnLoad>
                    if ${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[SortLevel]}
                    {
                    UIElement[Sort Name@Recipes@Craft Main@Main Frame@Craft Selection]:SetChecked
                    }
                  </OnLoad>
                  <OnLeftClick>
                    Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}]:QueueCommand[Craft:SortbyName]
                  </OnLeftClick>
                </Checkbox>
                <Checkbox Name='Sort Level'>
                  <Font>
                    <Name>terminal</Name>
                    <Size>12</Size>
                    <Color>FFEBDEAA</Color>
                  </Font>
                  <X>200</X>
                  <Y>30</Y>
                  <Width>100</Width>
                  <Height>20</Height>
                  <Text>by Level</Text>
                  <OnLoad>
                    if !${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[SortLevel]}
                    {
                    UIElement[Sort Level@Recipes@Craft Main@Main Frame@Craft Selection]:SetChecked
                    }
                  </OnLoad>
                  <OnLeftClick>
                    Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}]:QueueCommand[Craft:SortbyLevel]
                  </OnLeftClick>
                </Checkbox>
                <Textentry Name='Level Min'>
                  <X>300</X>
                  <Y>33</Y>
                  <Width>30</Width>
                  <Height>15</Height>
                  <MaxLength>3</MaxLength>
                  <Color>FFDDBB00</Color>
                </Textentry>
                <Text Name='Dash Label'>
                  <Font>
                    <Name>terminal</Name>
                    <Size>12</Size>
                    <Color>FFEBDEAA</Color>
                  </Font>
                  <X>340</X>
                  <Y>35</Y>
                  <Width>10</Width>
                  <Height>20</Height>
                  <Text>-</Text>
                </Text>
                <Textentry Name='Level Max'>
                  <X>360</X>
                  <Y>33</Y>
                  <Width>30</Width>
                  <Height>15</Height>
                  <MaxLength>3</MaxLength>
                  <Color>FFDDBB00</Color>
                </Textentry>
                <Textentry Name='Quantity Value'>
                  <X>105</X>
                  <Y>57</Y>
                  <Width>50</Width>
                  <Height>20</Height>
                  <MaxLength>4</MaxLength>
                  <Color>FFDDBB00</Color>
                </Textentry>
                <Text Name='Quantity Label'>
                  <Font>
                    <Name>terminal</Name>
                    <Size>12</Size>
                    <Color>FFEBDEAA</Color>
                  </Font>
                  <X>18</X>
                  <Y>63</Y>
                  <Width>100</Width>
                  <Height>20</Height>
                  <Text>Quantity:</Text>
                </Text>
                <Commandbutton name='Add Recipe'>
                  <X>175</X>
                  <Y>57</Y>
                  <Width>100</Width>
                  <Height>20</Height>
                  <Text>Add Recipe</Text>
                  <OnLeftClick>
                    if !${thisbuttondisabled}
                    {
                    thisbuttondisabled:Set[1]
                    UIElement[Craft Selection].FindUsableChild[Add Recipe,commandbutton]:Hide
                    Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}]:QueueCommand[Craft:AddRecipe]
                    }
                  </OnLeftClick>
                </Commandbutton>
                <Commandbutton name='Refresh List'>
                  <X>295</X>
                  <Y>57</Y>
                  <Width>100</Width>
                  <Height>20</Height>
                  <Text>Refresh List</Text>
                  <OnLeftClick>
                    if !${thisbuttonrefresh}
                    {
                    thisbuttonrefresh:Set[1]
                    Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}]:QueueCommand[Craft:RefreshList]
                    }
                  </OnLeftClick>
                </Commandbutton>
                <Text Name='Filter Label'>
                  <Font>
                    <Name>terminal</Name>
                    <Size>12</Size>
                    <Color>FFEBDEAA</Color>
                  </Font>
                  <X>5%</X>
                  <Y>95</Y>
                  <Width>95%</Width>
                  <Height>20</Height>
                  <Text>Filters:</Text>
                </Text>
                <Checkbox Name='Standard Filter'>
                  <Font>
                    <Name>terminal</Name>
                    <Size>12</Size>
                    <Color>FFEBDEAA</Color>
                  </Font>
                  <X>20%</X>
                  <Y>90</Y>
                  <Width>20%</Width>
                  <Height>20</Height>
                  <Text>Standard</Text>
                  <OnLoad>
                    if ${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[StandardFilter]}
                    {
                    UIElement[Standard Filter@Recipes@Craft Main@Main Frame@Craft Selection]:SetChecked
                    }
                  </OnLoad>
                  <OnLeftClick>
                    if ${UIElement[Standard Filter@Recipes@Craft Main@Main Frame@Craft Selection].Checked}
                    {
                    Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[StandardFilter]:Set[TRUE]
                    }
                    else
                    {
                    Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[StandardFilter]:Set[FALSE]
                    }

                    Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}]:ExecuteAtom[UpdateSettings]

                    if !${thisbuttonrefresh}
                    {
                    thisbuttonrefresh:Set[1]
                    Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}]:QueueCommand[Craft:RefreshList]
                    }
                  </OnLeftClick>
                </Checkbox>
                <Checkbox Name='Imbued Filter'>
                  <Font>
                    <Name>terminal</Name>
                    <Size>12</Size>
                    <Color>FFEBDEAA</Color>
                  </Font>
                  <X>42%</X>
                  <Y>90</Y>
                  <Width>20%</Width>
                  <Height>20</Height>
                  <Text>Imbued</Text>
                  <OnLoad>
                    if ${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[ImbuedFilter]}
                    {
                    UIElement[Imbued Filter@Recipes@Craft Main@Main Frame@Craft Selection]:SetChecked
                    }
                  </OnLoad>
                  <OnLeftClick>
                    if ${UIElement[Imbued Filter@Recipes@Craft Main@Main Frame@Craft Selection].Checked}
                    {
                    Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[ImbuedFilter]:Set[TRUE]
                    }
                    else
                    {
                    Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[ImbuedFilter]:Set[FALSE]
                    }

                    Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}]:ExecuteAtom[UpdateSettings]

                    if !${thisbuttonrefresh}
                    {
                    thisbuttonrefresh:Set[1]
                    Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}]:QueueCommand[Craft:RefreshList]
                    }
                  </OnLeftClick>
                </Checkbox>
                <Checkbox Name='Rare Filter'>
                  <Font>
                    <Name>terminal</Name>
                    <Size>12</Size>
                    <Color>FFEBDEAA</Color>
                  </Font>
                  <X>60%</X>
                  <Y>90</Y>
                  <Width>20%</Width>
                  <Height>20</Height>
                  <Text>Rare</Text>
                  <OnLoad>
                    if ${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[RareFilter]}
                    {
                    UIElement[Rare Filter@Recipes@Craft Main@Main Frame@Craft Selection]:SetChecked
                    }
                  </OnLoad>
                  <OnLeftClick>
                    if ${UIElement[Rare Filter@Recipes@Craft Main@Main Frame@Craft Selection].Checked}
                    {
                    Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[RareFilter]:Set[TRUE]
                    }
                    else
                    {
                    Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[RareFilter]:Set[FALSE]
                    }

                    Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}]:ExecuteAtom[UpdateSettings]

                    if !${thisbuttonrefresh}
                    {
                    thisbuttonrefresh:Set[1]
                    Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}]:QueueCommand[Craft:RefreshList]
                    }
                  </OnLeftClick>
                </Checkbox>
                <Checkbox Name='Secondary Tradeskill'>
                  <Visible>0</Visible>
                  <Font>
                    <Name>terminal</Name>
                    <Size>12</Size>
                    <Color>FFEBDEAA</Color>
                  </Font>
                  <X>75%</X>
                  <Y>90</Y>
                  <Width>20%</Width>
                  <Height>20</Height>
                  <OnLoad>
                    if ${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[SecondaryTS]}
                    {
                    UIElement[Secondary Tradeskill@Recipes@Craft Main@Main Frame@Craft Selection]:SetChecked
                    }
                  </OnLoad>
                  <OnLeftClick>
                    if ${UIElement[Secondary Tradeskill@Recipes@Craft Main@Main Frame@Craft Selection].Checked}
                    {
                    Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[SecondaryTS]:Set[TRUE]
                    }
                    else
                    {
                    Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[SecondaryTS]:Set[FALSE]
                    }

                    Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}]:ExecuteAtom[UpdateSettings]

                    if !${thisbuttonrefresh}
                    {
                    thisbuttonrefresh:Set[1]
                    Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}]:QueueCommand[Craft:RefreshList]
                    }
                  </OnLeftClick>
                </Checkbox>
                <Text Name='Quality Level'>
                  <Font>
                    <Name>terminal</Name>
                    <Size>12</Size>
                    <Color>FFEBDEAA</Color>
                  </Font>
                  <X>5%</X>
                  <Y>120</Y>
                  <Width>150</Width>
                  <Height>20</Height>
                  <Color>FFDDBB00</Color>
                  <Text>Quality Level:</Text>
                </Text>
                <Commandcheckbox Name='Quality 1'>
                  <Font>
                    <Name>terminal</Name>
                    <Size>12</Size>
                    <Color>FFEBDEAA</Color>
                  </Font>
                  <X>35%</X>
                  <Y>115</Y>
                  <Width>50</Width>
                  <Height>20</Height>
                  <Text>1</Text>
                  <Command>noop ${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[Quality1]:Set[TRUE]} noop ${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[Quality2]:Set[FALSE]} noop ${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[Quality3]:Set[FALSE]} noop ${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[Quality4]:Set[FALSE]}</Command>
                  <CommandChecked />
                  <Data>${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[Quality1]}</Data>
                </Commandcheckbox>
                <Commandcheckbox Name='Quality 2'>
                  <Font>
                    <Name>terminal</Name>
                    <Size>12</Size>
                    <Color>FFEBDEAA</Color>
                  </Font>
                  <X>50%</X>
                  <Y>115</Y>
                  <Width>50</Width>
                  <Height>20</Height>
                  <Text>2</Text>
                  <Command>noop ${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[Quality1]:Set[FALSE]} noop ${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[Quality2]:Set[TRUE]} noop ${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[Quality3]:Set[FALSE]} noop ${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[Quality4]:Set[FALSE]}</Command>
                  <CommandChecked />
                  <Data>${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[Quality2]}</Data>
                </Commandcheckbox>
                <Commandcheckbox Name='Quality 3'>
                  <Font>
                    <Name>terminal</Name>
                    <Size>12</Size>
                    <Color>FFEBDEAA</Color>
                  </Font>
                  <X>65%</X>
                  <Y>115</Y>
                  <Width>50</Width>
                  <Height>20</Height>
                  <Text>3</Text>
                  <Command>noop ${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[Quality1]:Set[FALSE]} noop ${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[Quality2]:Set[FALSE]} noop ${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[Quality3]:Set[TRUE]} noop ${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[Quality4]:Set[FALSE]}</Command>
                  <CommandChecked />
                  <Data>${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[Quality3]}</Data>
                </Commandcheckbox>
                <Commandcheckbox Name='Quality 4'>
                  <Font>
                    <Name>terminal</Name>
                    <Size>12</Size>
                    <Color>FFEBDEAA</Color>
                  </Font>
                  <X>80%</X>
                  <Y>115</Y>
                  <Width>50</Width>
                  <Height>20</Height>
                  <Text>4</Text>
                  <Command>noop ${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[Quality1]:Set[FALSE]} noop ${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[Quality2]:Set[FALSE]} noop ${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[Quality3]:Set[FALSE]} noop ${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[Quality4]:Set[TRUE]}</Command>
                  <CommandChecked />
                  <Data>${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[Quality4]}</Data>
                </Commandcheckbox>
                <Text Name='Gauge Label'>
                  <Visible>0</Visible>
                  <Font>
                    <Name>terminal</Name>
                    <Size>12</Size>
                    <Color>FFEBDEAA</Color>
                  </Font>
                  <X>30%</X>
                  <Y>140</Y>
                  <Width>500</Width>
                  <Height>20</Height>
                  <Text>Currently Processing Recipe..</Text>
                </Text>
                <VariableGauge Name='Process Recipe'>
                  <Visible>0</Visible>
                  <Data>${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[gaugelevel]}</Data>
                  <X>106</X>
                  <Y>152</Y>
                  <Border>3</Border>
                  <Width>200</Width>
                  <Height>15</Height>
                </VariableGauge>
                <Commandbutton Name='Start Crafting'>
                  <Visible>0</Visible>
                  <X>38</X>
                  <Y>145</Y>
                  <Width>120</Width>
                  <Height>20</Height>
                  <Text>Begin Crafting</Text>
                  <OnLeftClick>
                    Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[startrecipe]:Set[TRUE]
                    UIElement[CraftLite@Titlebar@Craft Selection]:Hide
                  </OnLeftClick>
                </Commandbutton>
                <Commandbutton Name='Resume Crafting'>
                  <Visible>0</Visible>
                  <X>38</X>
                  <Y>145</Y>
                  <Width>120</Width>
                  <Height>20</Height>
                  <Text>Resume Crafting</Text>
                  <OnLeftClick>
                    Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[resumecraft]:Set[TRUE]
                  </OnLeftClick>
                </Commandbutton>
                <Commandcheckbox Name='Save List'>
                  <Visible>0</Visible>
                  <Font>
                    <Name>terminal</Name>
                    <Size>12</Size>
                    <Color>FFEBDEAA</Color>
                  </Font>
                  <X>180</X>
                  <Y>145</Y>
                  <Width>100</Width>
                  <Height>20</Height>
                  <Text>Save Recipe List</Text>
                  <Command>noop ${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[SaveList]:Set[TRUE]} noop ${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}]:ExecuteAtom[UpdateSettings]}</Command>
                  <CommandChecked>noop ${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[SaveList]:Set[FALSE]} noop ${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}]:ExecuteAtom[UpdateSettings]}</CommandChecked>
                  <Data>${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[SaveList]}</Data>
                </Commandcheckbox>
                <Text Name='Resume Label'>
                  <Visible>0</Visible>
                  <Font>
                    <Name>terminal</Name>
                    <Size>10</Size>
                    <Color>FF22FF22</Color>
                  </Font>
                  <X>25</X>
                  <Y>170</Y>
                  <Width>95%</Width>
                  <Height>20</Height>
                  <Text>Not all HARVESTS have been bought. Click Resume Crafting.</Text>
                </Text>
              </Tab>
              <Tab Name='Advanced'>
                <Combobox Name='Favourites List'>
                  <X>100</X>
                  <Y>10</Y>
                  <Width>65%</Width>
                  <Height>23</Height>
                  <FullHeight>250%</FullHeight>
                  <ButtonWidth>20</ButtonWidth>
                  <!--	<Font>
										<Name>terminal</Name>
										<Size>14</Size>
										<Color>FFEBDEAA</Color>
									</Font> -->
                </Combobox>
                <Commandbutton Name='Load Recipe Queue'>
                  <X>5</X>
                  <Y>10</Y>
                  <Width>85</Width>
                  <Height>20</Height>
                  <Text>Load</Text>
                  <OnLeftClick>
                    Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}]:QueueCommand[Craft:LoadRecipeList]
                  </OnLeftClick>
                </Commandbutton>
                <Text Name='Remove Title'>
                  <X>100</X>
                  <Y>40</Y>
                  <Width>350</Width>
                  <Height>20</Height>
                  <Font>
                    <Name>terminal</Name>
                    <Size>10</Size>
                    <Color>FFEBDEAA</Color>
                  </Font>
                  <Text>Remove selected Recipes from the queue</Text>
                </Text>
                <Commandbutton Name='Remove Button'>
                  <X>5</X>
                  <Y>35</Y>
                  <Width>85</Width>
                  <Height>20</Height>
                  <Text>Remove</Text>
                  <OnLeftClick>
                    Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}]:QueueCommand[Craft:RemoveRecipe]
                  </OnLeftClick>
                </Commandbutton>
                <Text Name='Add Level Title'>
                  <X>100</X>
                  <Y>65</Y>
                  <Width>350</Width>
                  <Height>20</Height>
                  <Font>
                    <Name>terminal</Name>
                    <Size>10</Size>
                    <Color>FFEBDEAA</Color>
                  </Font>
                  <Text>Add ALL Level      Recipes X Qty:</Text>
                </Text>
                <Textentry Name='Qty Level Value'>
                  <X>300</X>
                  <Y>60</Y>
                  <Width>33</Width>
                  <Height>20</Height>
                  <MaxLength>3</MaxLength>
                  <Color>FFDDBB00</Color>
                </Textentry>
                <Textentry Name='Level Value'>
                  <X>180</X>
                  <Y>60</Y>
                  <Width>30</Width>
                  <Height>20</Height>
                  <MaxLength>3</MaxLength>
                  <Color>FFDDBB00</Color>
                </Textentry>
                <Commandbutton Name='Add Level'>
                  <X>5</X>
                  <Y>60</Y>
                  <Width>85</Width>
                  <Height>20</Height>
                  <Text>Add Level</Text>
                  <OnLeftClick>
                    if !${thisbuttonadd}
                    {
                    thisbuttonadd:Set[1]
                    UIElement[Craft Selection].FindUsableChild[Add Level,commandbutton]:Hide
                    Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}]:QueueCommand[Craft:LoadLevel]
                    }
                  </OnLeftClick>
                </Commandbutton>
                <Commandbutton Name='Submit Button'>
                  <X>25</X>
                  <Y>100</Y>
                  <Width>100</Width>
                  <Height>30</Height>
                  <Text>Submit Queue</Text>
                  <OnLeftClick>
                    if !${thisbuttonsubmit}
                    {
                    thisbuttonsubmit:Set[1]
                    Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}]:QueueCommand[call ProcessQueue]
                    }
                  </OnLeftClick>
                </Commandbutton>
                <Commandbutton Name='Save Recipe Queue'>
                  <X>155</X>
                  <Y>100</Y>
                  <Width>100</Width>
                  <Height>30</Height>
                  <Text>Save Queue</Text>
                  <OnLeftClick>
                    Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}]:QueueCommand[call SaveQueueList]
                  </OnLeftClick>
                </Commandbutton>
                <Commandbutton Name='Clear Recipe Queue'>
                  <X>280</X>
                  <Y>100</Y>
                  <Width>100</Width>
                  <Height>30</Height>
                  <Text>Clear Queue</Text>
                  <OnLeftClick>
                    if !${thisbuttonlist}
                    {
                    thisbuttonlist:Set[1]
                    Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}]:QueueCommand[Craft:ClearAllRecipes]
                    }
                  </OnLeftClick>
                </Commandbutton>
                <Text Name='Gauge List Label'>
                  <Visible>0</Visible>
                  <Font>
                    <Name>terminal</Name>
                    <Size>12</Size>
                    <Color>FFEBDEAA</Color>
                  </Font>
                  <X>30%</X>
                  <Y>98</Y>
                  <Width>500</Width>
                  <Height>20</Height>
                  <Text>Clearing the Recipe Queue..</Text>
                </Text>
                <VariableGauge Name="List Recipe">
                  <Visible>0</Visible>
                  <Data>${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[gaugelevel]}</Data>
                  <X>106</X>
                  <Y>114</Y>
                  <Border>3</Border>
                  <Width>200</Width>
                  <Height>15</Height>
                </VariableGauge>
              </Tab>
              <Tab Name='Options'>
                <Commandcheckbox Name='Power Check'>
                  <Font>
                    <Name>terminal</Name>
                    <Size>10</Size>
                    <Color>FFEBDEAA</Color>
                  </Font>
                  <X>10</X>
                  <Y>20</Y>
                  <Width>100</Width>
                  <Height>20</Height>
                  <Text>Wait for Power to Regenerate to:       % before crafting Recipe</Text>
                  <Command>noop ${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[WaitforPower]:Set[TRUE]} noop ${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}]:ExecuteAtom[UpdateSettings]}</Command>
                  <CommandChecked>noop ${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[WaitforPower]:Set[FALSE]} noop ${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}]:ExecuteAtom[UpdateSettings]}</CommandChecked>
                  <Data>${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[WaitforPower]}</Data>
                </Commandcheckbox>
                <Textentry Name='Power Regen'>
                  <X>225</X>
                  <Y>20</Y>
                  <Width>35</Width>
                  <Height>20</Height>
                  <MaxLength>4</MaxLength>
                  <Color>FFDDBB00</Color>
                </Textentry>
                <Commandcheckbox Name='Current Table'>
                  <Font>
                    <Name>terminal</Name>
                    <Size>10</Size>
                    <Color>FFEBDEAA</Color>
                  </Font>
                  <X>10</X>
                  <Y>40</Y>
                  <Width>100</Width>
                  <Height>20</Height>
                  <Text>Use the current TARGETTED Station ONLY</Text>
                  <Command>noop ${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[CurrentStation]:Set[TRUE]} noop ${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}]:ExecuteAtom[UpdateSettings]}</Command>
                  <CommandChecked>noop ${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[CurrentStation]:Set[FALSE]} noop ${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}]:ExecuteAtom[UpdateSettings]}</CommandChecked>
                  <Data>${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[CurrentStation]}</Data>
                </Commandcheckbox>
                <Commandcheckbox Name='Camp Out'>
                  <Font>
                    <Name>terminal</Name>
                    <Size>10</Size>
                    <Color>FFEBDEAA</Color>
                  </Font>
                  <X>10</X>
                  <Y>60</Y>
                  <Width>100</Width>
                  <Height>20</Height>
                  <Text>Camp out if this craft session has exceeded           mins</Text>
                  <Command>noop ${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[CampOut]:Set[TRUE]} noop ${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}]:ExecuteAtom[UpdateSettings]}</Command>
                  <CommandChecked>noop ${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[CampOut]:Set[FALSE]} noop ${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}]:ExecuteAtom[UpdateSettings]}</CommandChecked>
                  <Data>${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[CampOut]}</Data>
                </Commandcheckbox>
                <Textentry Name='Camp Timer'>
                  <X>300</X>
                  <Y>60</Y>
                  <Width>45</Width>
                  <Height>20</Height>
                  <MaxLength>4</MaxLength>
                  <Color>FFDDBB00</Color>
                  <OnLoad>This:SetText[${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[CampTimer]}]</OnLoad>
                  <OnChange>
                    LavishSettings[Craft Config File].FindSet[General Options].FindSetting[Camp out after a specified time has elapsed for a crafting session?]:Set[${This.Text}]
                    Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[CampTimer]:Set[${This.Text}]
                    LavishSettings[Craft Config File]:Export[${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[configfile]}]
                  </OnChange>
                </Textentry>
                <Commandcheckbox Name='Show All Lists'>
                  <Font>
                    <Name>terminal</Name>
                    <Size>10</Size>
                    <Color>FFEBDEAA</Color>
                  </Font>
                  <X>10</X>
                  <Y>80</Y>
                  <Width>100</Width>
                  <Height>20</Height>
                  <Text>Show entire Shopping List</Text>
                  <Command>noop ${Script[${If[${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}](exists)},Buffer:Craft,Craft]}].Variable[ShowAllLists]:Set[TRUE]} noop ${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}]:ExecuteAtom[UpdateSettings]}</Command>
                  <CommandChecked>noop ${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[ShowAllLists]:Set[FALSE]} noop ${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}]:ExecuteAtom[UpdateSettings]}</CommandChecked>
                  <Data>${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[ShowAllLists]}</Data>
                </Commandcheckbox>
                <Commandcheckbox Name='Prompt Resume'>
                  <Font>
                    <Name>terminal</Name>
                    <Size>10</Size>
                    <Color>FFEBDEAA</Color>
                  </Font>
                  <X>10</X>
                  <Y>100</Y>
                  <Width>100</Width>
                  <Height>20</Height>
                  <Text>Prompt 'Resume Crafting' when buying Harvests</Text>
                  <Command>noop ${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[PromptResume]:Set[TRUE]} noop ${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}]:ExecuteAtom[UpdateSettings]}</Command>
                  <CommandChecked>noop ${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[PromptResume]:Set[FALSE]} noop ${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}]:ExecuteAtom[UpdateSettings]}</CommandChecked>
                  <Data>${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[PromptResume]}</Data>
                </Commandcheckbox>
                <Commandcheckbox Name='BuyCommon'>
                  <Font>
                    <Name>terminal</Name>
                    <Size>10</Size>
                    <Color>FFEBDEAA</Color>
                  </Font>
                  <X>10</X>
                  <Y>120</Y>
                  <Width>150</Width>
                  <Height>20</Height>
                  <Text>Buy ALL Vendor bought COMMON components automatically.</Text>
                  <Command>noop ${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[BuyCommon]:Set[TRUE]} noop ${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}]:ExecuteAtom[UpdateSettings]}</Command>
                  <CommandChecked>noop ${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[BuyCommon]:Set[FALSE]} noop ${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}]:ExecuteAtom[UpdateSettings]}</CommandChecked>
                  <Data>${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[BuyCommon]}</Data>
                </Commandcheckbox>
                <Commandcheckbox Name='BuyFuel'>
                  <Font>
                    <Name>terminal</Name>
                    <Size>10</Size>
                    <Color>FFEBDEAA</Color>
                  </Font>
                  <X>10</X>
                  <Y>140</Y>
                  <Width>150</Width>
                  <Height>20</Height>
                  <Text>Buy ALL FUEL components automatically.</Text>
                  <Command>noop ${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[BuyFuel]:Set[TRUE]} noop ${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}]:ExecuteAtom[UpdateSettings]}</Command>
                  <CommandChecked>noop ${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[BuyFuel]:Set[FALSE]} noop ${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}]:ExecuteAtom[UpdateSettings]}</CommandChecked>
                  <Data>${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[BuyFuel]}</Data>
                </Commandcheckbox>
                <Commandcheckbox Name='BuyHarvest'>
                  <Font>
                    <Name>terminal</Name>
                    <Size>10</Size>
                    <Color>FFEBDEAA</Color>
                  </Font>
                  <X>10</X>
                  <Y>160</Y>
                  <Width>150</Width>
                  <Height>20</Height>
                  <Text>Buy ALL Harvests from Broker to a MAX PRICE:         (Silver)</Text>
                  <Command>noop ${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[BuyHarvest]:Set[TRUE]} noop ${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}]:ExecuteAtom[UpdateSettings]}</Command>
                  <CommandChecked>noop ${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[BuyHarvest]:Set[FALSE]} noop ${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}]:ExecuteAtom[UpdateSettings]}</CommandChecked>
                  <Data>${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[BuyHarvest]}</Data>
                </Commandcheckbox>
                <Textentry Name='Max Buy Price'>
                  <X>298</X>
                  <Y>157</Y>
                  <Width>45</Width>
                  <Height>20</Height>
                  <MaxLength>5</MaxLength>
                  <Color>FFDDBB00</Color>
                  <OnLoad>This:SetText[${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[MaxBuyPrice]}]</OnLoad>
                  <OnChange>
                    LavishSettings[Craft Config File].FindSet[General Options].FindSetting[Specify the MAXIMUM price for purchasing Resources]:Set[${This.Text}]
                    Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[MaxBuyPrice]:Set[${This.Text}]
                    LavishSettings[Craft Config File]:Export[${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[configfile]}]
                  </OnChange>
                </Textentry>
                <Commandcheckbox name='Auto Transmute'>
                  <Font>
                    <Name>terminal</Name>
                    <Size>10</Size>
                    <Color>FFEBDEAA</Color>
                  </Font>
                  <X>10</X>
                  <Y>180</Y>
                  <Width>150</Width>
                  <Height>20</Height>
                  <Text>Automatically Transmute Master Crafted Items after Creation</Text>
                  <Command>noop ${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[AutoTransmute]:Set[TRUE]}</Command>
                  <CommandChecked>noop ${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[AutoTransmute]:Set[FALSE]}</CommandChecked>
                  <Data>${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[AutoTransmute]}</Data>
                </Commandcheckbox>
                <Commandcheckbox name='Stop Crafting At Secondary Max Level'>
                  <Font>
                    <Name>terminal</Name>
                    <Size>10</Size>
                    <Color>FFEBDEAA</Color>
                  </Font>
                  <X>10</X>
                  <Y>200</Y>
                  <Width>150</Width>
                  <Height>20</Height>
                  <Text>Stop crafting when secondary tradeskill achieves maximum level</Text>
                  <Command>noop ${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[StopCraftingAtSecondaryMaxLevel]:Set[TRUE]}</Command>
                  <CommandChecked>noop ${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[StopCraftingAtSecondaryMaxLevel]:Set[FALSE]}</CommandChecked>
                  <Data>${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[StopCraftingAtSecondaryMaxLevel]}</Data>
                </Commandcheckbox>
                <Commandcheckbox Name='Save Recipe List Range'>
                  <Font>
                    <Name>terminal</Name>
                    <Size>10</Size>
                    <Color>FFEBDEAA</Color>
                  </Font>
                  <X>10</X>
                  <Y>220</Y>
                  <Width>100</Width>
                  <Height>20</Height>
                  <Text>Save recipe list range</Text>
                  <Command>noop ${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[RecipeListRange]:Set[TRUE]} ${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}]:ExecuteAtom[UpdateSettings]}</Command>
                  <CommandChecked>noop ${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[RecipeListRange]:Set[FALSE]} noop ${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}]:ExecuteAtom[UpdateSettings]}</CommandChecked>
                  <Data>${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[RecipeListRange]}</Data>
                </Commandcheckbox>
                <Commandcheckbox Name='GuildPrivacy'>
                  <Font>
                    <Name>terminal</Name>
                    <Size>10</Size>
                    <Color>FFEBDEAA</Color>
                  </Font>
                  <X>10</X>
                  <Y>240</Y>
                  <Width>100</Width>
                  <Height>20</Height>
                  <Text>Disable guild notifications while crafting writs</Text>
                  <Command>noop ${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[GuildPrivacy]:Set[TRUE]} ${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}]:ExecuteAtom[UpdateSettings]}</Command>
                  <CommandChecked>noop ${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[GuildPrivacy]:Set[FALSE]} noop ${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}]:ExecuteAtom[UpdateSettings]}</CommandChecked>
                  <Data>${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[GuildPrivacy]}</Data>
                </Commandcheckbox>
								<Commandcheckbox Name='DeclineInvites'>
									<Font>
										<Name>terminal</Name>
										<Size>10</Size>
										<Color>FFEBDEAA</Color>
									</Font>
									<X>10</X>
									<Y>260</Y>
									<Width>100</Width>
									<Height>20</Height>
									<Text>Ignore Duels, Trades, and Groups when craft script is running</Text>
									<OnLeftClick>
										Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[DeclineInvites]:Set[${This.Checked}]
										Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}]:ExecuteAtom[UpdateSettings]
										Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].VariableScope.Craft:DoIgnores[${This.Checked}]
									</OnLeftClick>
									<Data>${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].VariableScope.DeclineInvites}</Data>
								</Commandcheckbox>
								<Text Name='MovementKeysLabel'>
                  <Font>
                    <Name>terminal</Name>
                    <Size>10</Size>
                    <Color>FFEBDEAA</Color>
                  </Font>
                  <X>10</X>
                  <Y>280</Y>
                  <Width>25%</Width>
                  <Height>20</Height>
                  <Text>Movement Keys:</Text>
                </Text>
                <Text Name='AutoRunKeyLabel'>
                  <Font>
                    <Name>terminal</Name>
                    <Size>10</Size>
                    <Color>FFEBDEAA</Color>
                  </Font>
                  <X>20</X>
                  <Y>300</Y>
                  <Width>20%</Width>
                  <Height>20</Height>
                  <Text>AutoRun:</Text>
                </Text>
                <Textentry Name='TEAutoRunKey'>
                  <X>25%</X>
                  <Y>290</Y>
                  <Width>20%</Width>
                  <Height>20</Height>
                  <MaxLength>20</MaxLength>
                  <Color>FFDDBB00</Color>
                  <OnLoad>This:SetText[${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[AutoRunKey]}]</OnLoad>
                  <OnChange>
                    LavishSettings[Craft Config File].FindSet[General Options].FindSetting[AutoRun Key]:Set[${This.Text}]
                    Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[AutoRunKey]:Set[${This.Text}]
                    LavishSettings[Craft Config File]:Export[${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[configfile]}]
                    Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}]:QueueCommand[Craft:UpdateNavKeys]
                  </OnChange>
                </Textentry>
                <Text Name='BackupKeyLabel'>
                  <Font>
                    <Name>terminal</Name>
                    <Size>10</Size>
                    <Color>FFEBDEAA</Color>
                  </Font>
                  <X>20</X>
                  <Y>320</Y>
                  <Width>20%</Width>
                  <Height>20</Height>
                  <Text>Backward:</Text>
                </Text>
                <Textentry Name='TEBackwardKey'>
                  <X>25%</X>
                  <Y>310</Y>
                  <Width>20%</Width>
                  <Height>20</Height>
                  <MaxLength>20</MaxLength>
                  <Color>FFDDBB00</Color>
                  <OnLoad>This:SetText[${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[BackwardKey]}]</OnLoad>
                  <OnChange>
                    LavishSettings[Craft Config File].FindSet[General Options].FindSetting[Backwards Key]:Set[${This.Text}]
                    Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[BackwardKey]:Set[${This.Text}]
                    LavishSettings[Craft Config File]:Export[${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[configfile]}]
                    Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}]:QueueCommand[Craft:UpdateNavKeys]
                  </OnChange>
                </Textentry>
                <Text Name='StrafeRightKeyLabel'>
                  <Font>
                    <Name>terminal</Name>
                    <Size>10</Size>
                    <Color>FFEBDEAA</Color>
                  </Font>
                  <X>20</X>
                  <Y>340</Y>
                  <Width>20%</Width>
                  <Height>20</Height>
                  <Text>Strafe Right:</Text>
                </Text>
                <Textentry Name='TEStrafeRightKey'>
                  <X>25%</X>
                  <Y>330</Y>
                  <Width>20%</Width>
                  <Height>20</Height>
                  <MaxLength>20</MaxLength>
                  <Color>FFDDBB00</Color>
                  <OnLoad>This:SetText[${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[StrafeRightKey]}]</OnLoad>
                  <OnChange>
                    LavishSettings[Craft Config File].FindSet[General Options].FindSetting[StrafeRight Key]:Set[${This.Text}]
                    Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[StrafeRightKey]:Set[${This.Text}]
                    LavishSettings[Craft Config File]:Export[${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[configfile]}]
                    Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}]:QueueCommand[Craft:UpdateNavKeys]
                  </OnChange>
                </Textentry>
                <Text Name='StrafeLeftKeyLabel'>
                  <Font>
                    <Name>terminal</Name>
                    <Size>10</Size>
                    <Color>FFEBDEAA</Color>
                  </Font>
                  <X>20</X>
                  <Y>360</Y>
                  <Width>20%</Width>
                  <Height>20</Height>
                  <Text>Strafe Left:</Text>
                </Text>
                <Textentry Name='TEStrafeLeftKey'>
                  <X>25%</X>
                  <Y>350</Y>
                  <Width>20%</Width>
                  <Height>20</Height>
                  <MaxLength>20</MaxLength>
                  <Color>FFDDBB00</Color>
                  <OnLoad>This:SetText[${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[StrafeLeftKey]}]</OnLoad>
                  <OnChange>
                    LavishSettings[Craft Config File].FindSet[General Options].FindSetting[StrafeLeft Key]:Set[${This.Text}]
                    Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[StrafeLeftKey]:Set[${This.Text}]
                    LavishSettings[Craft Config File]:Export[${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[configfile]}]
                    Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}]:QueueCommand[Craft:UpdateNavKeys]
                  </OnChange>
                </Textentry>
                <Frame Name='Additional Options Frame'>
                  <X>0</X>
                  <Y>400</Y>
                  <Height>200</Height>
                  <Width>100%</Width>
                  <Visible>1</Visible>
                  <Children>
                    <Text Name='Craft Delay Text'>
                      <X>20</X>
                      <Y>5</Y>
                      <Width>100%</Width>
                      <Height>20</Height>
                      <Font>
                        <Name>terminal</Name>
                        <Size>10</Size>
                        <Color>FFEBDEAA</Color>
                      </Font>
                      <Text>Time to wait between combines:       seconds</Text>
                    </Text>
                    <Textentry Name='Craft Delay'>
                      <X>205</X>
                      <Y>0</Y>
                      <Width>35</Width>
                      <Height>20</Height>
                      <MaxLength>4</MaxLength>
                      <Color>FFDDBB00</Color>
                      <OnLoad>This:SetText[${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[CraftDelay]}]</OnLoad>
                      <OnChange>
                        LavishSettings[Craft Config File].FindSet[General Options].FindSetting[Time to wait between combines?]:Set[${This.Text}]
                        Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[CraftDelay]:Set[${This.Text}]
                        LavishSettings[Craft Config File]:Export[${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[configfile]}]
                      </OnChange>
                    </Textentry>
                    <Text Name='Path Precision Text'>
                      <X>20</X>
                      <Y>27</Y>
                      <Width>100%</Width>
                      <Height>20</Height>
                      <Font>
                        <Name>terminal</Name>
                        <Size>10</Size>
                        <Color>FFEBDEAA</Color>
                      </Font>
                      <Visible>FALSE</Visible>
                      <Text>Precision for running path:</Text>
                    </Text>
                    <Textentry Name='Path Precision'>
                      <X>190</X>
                      <Y>22</Y>
                      <Width>35</Width>
                      <Height>20</Height>
                      <MaxLength>4</MaxLength>
                      <Visible>FALSE</Visible>
                      <OnLoad>This:SetText[${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[PathPrecision]}]</OnLoad>
                      <OnChange>
                        LavishSettings[Craft Config File].FindSet[General Options].FindSetting[Pather Precision]:Set[${This.Text}]
                        Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[PathPrecision]:Set[${This.Text}]
                        LavishSettings[Craft Config File]:Export[${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[configfile]}]
                      </OnChange>
                      <Color>FFDDBB00</Color>
                    </Textentry>
                    <Text Name='Threshold Text'>
                      <X>0</X>
                      <Y>45</Y>
                      <Width>100%</Width>
                      <Height>20</Height>
                      <Alignment>Center</Alignment>
                      <Font>
                        <Name>terminal</Name>
                        <Size>10</Size>
                        <Color>FFEBDEAA</Color>
                      </Font>
                      <Alignment>Center</Alignment>
                      <Text>-= Durability Threshold for Standard and Rare Recipes =-</Text>
                    </Text>
                    <Text Name='Quality 1 Text'>
                      <X>5%</X>
                      <Y>70</Y>
                      <Width>100%</Width>
                      <Height>20</Height>
                      <Font>
                        <Name>terminal</Name>
                        <Size>10</Size>
                        <Color>FFEBDEAA</Color>
                      </Font>
                      <Text>* Standard Quality 1:       %   * Rare Quality 1:       %</Text>
                      <AutoTooltip>Will cast progress + durability if DUR is below this.</AutoTooltip>
                    </Text>
                    <Textentry Name='Standard Quality1'>
                      <X>153</X>
                      <Y>65</Y>
                      <Width>35</Width>
                      <Height>20</Height>
                      <MaxLength>4</MaxLength>
                      <Color>FFDDBB00</Color>
                    </Textentry>
                    <Textentry Name='Rare Quality1'>
                      <X>320</X>
                      <Y>65</Y>
                      <Width>35</Width>
                      <Height>20</Height>
                      <MaxLength>4</MaxLength>
                      <Color>FFDDBB00</Color>
                    </Textentry>
                    <Text Name='Quality 2 Text'>
                      <X>5%</X>
                      <Y>100</Y>
                      <Width>100%</Width>
                      <Height>20</Height>
                      <Font>
                        <Name>terminal</Name>
                        <Size>10</Size>
                        <Color>FFEBDEAA</Color>
                      </Font>
                      <Text>* Standard Quality 2:       %   * Rare Quality 2:       %</Text>
                      <AutoTooltip>Will cast pure durability if DUR is below this.</AutoTooltip>
                    </Text>
                    <Textentry Name='Standard Quality2'>
                      <X>153</X>
                      <Y>95</Y>
                      <Width>35</Width>
                      <Height>20</Height>
                      <MaxLength>4</MaxLength>
                      <Color>FFDDBB00</Color>
                    </Textentry>
                    <Textentry Name='Rare Quality2'>
                      <X>320</X>
                      <Y>95</Y>
                      <Width>35</Width>
                      <Height>20</Height>
                      <MaxLength>4</MaxLength>
                      <Color>FFDDBB00</Color>
                    </Textentry>
                    <Text Name='Quality 3 Text'>
                      <X>5%</X>
                      <Y>130</Y>
                      <Width>100%</Width>
                      <Height>20</Height>
                      <Font>
                        <Name>terminal</Name>
                        <Size>10</Size>
                        <Color>FFEBDEAA</Color>
                      </Font>
                      <!--	<Text>* Standard Quality 3:       %   * Rare Quality 3:       %</text> -->
                      <Text>  * Standard Power 3:       %     * Rare Power 3:       %</Text>
                      <AutoTooltip>Will spam power-consuming buff if power is above this.</AutoTooltip>
                    </Text>
                    <Textentry Name='Standard Quality3'>
                      <X>153</X>
                      <Y>125</Y>
                      <Width>35</Width>
                      <Height>20</Height>
                      <MaxLength>4</MaxLength>
                      <Color>FFDDBB00</Color>
                    </Textentry>
                    <Textentry Name='Rare Quality3'>
                      <X>320</X>
                      <Y>125</Y>
                      <Width>35</Width>
                      <Height>20</Height>
                      <MaxLength>4</MaxLength>
                      <Color>FFDDBB00</Color>
                    </Textentry>
                    <!--		<Text Name='Quality 4 Text'>
								<X>5%</X>
								<Y>160</Y>
								<Width>100%</Width>
								<Height>20</Height>
								<Font>
									<Name>terminal</Name>
									<Size>10</Size>
									<Color>FFEBDEAA</Color>
								</Font>
								<Text>* Standard Quality 4:       %   * Rare Quality 4:       %</Text>
							</Text> -->
                    <!--	<Textentry Name='Standard Quality4'>
								<X>153</X>
								<Y>155</Y>
								<Width>35</Width> 
								<Height>20</Height>
								<MaxLength>4</MaxLength>
								<Color>FFDDBB00</Color>
							</Textentry> -->
                    <!--	<Textentry Name='Rare Quality4'>
								<X>320</X>
								<Y>155</Y>
								<Width>35</Width> 
								<Height>20</Height>
								<MaxLength>4</MaxLength>
								<Color>FFDDBB00</Color>
							</Textentry> -->
                    <Commandbutton Name='Save Threshold'>
                      <X>80</X>
                      <Y>185</Y>
                      <Width>100</Width>
                      <Height>20</Height>
                      <Text>Save Threshold</Text>
                      <OnLeftClick>
                        Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}]:QueueCommand[Craft:SaveThreshold]
                      </OnLeftClick>
                    </Commandbutton>
                    <Commandbutton Name='Reset Threshold'>
                      <X>240</X>
                      <Y>185</Y>
                      <Width>100</Width>
                      <Height>20</Height>
                      <Text>Reset Threshold</Text>
                      <OnLeftClick>
                        Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}]:QueueCommand[Craft:ResetThreshold]
                      </OnLeftClick>
                    </Commandbutton>
                  </Children>
                </Frame>
              </Tab>
              <Tab Name='Writs'>
                <Text Name='Writ Count Label'>
                  <Font>
                    <Name>terminal</Name>
                    <Size>10</Size>
                    <Color>FFEBDEAA</Color>
                  </Font>
                  <X>10</X>
                  <Y>20</Y>
                  <Width>500</Width>
                  <Height>20</Height>
                  <Text>Writ Count:</Text>
                </Text>
                <Textentry Name='Writ Count'>
                  <X>80</X>
                  <Y>10</Y>
                  <Width>35</Width>
                  <Height>20</Height>
                  <MaxLength>4</MaxLength>
                  <Color>FFDDBB00</Color>
                  <OnLoad>This:SetText[${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[WritCount]}]</OnLoad>
                  <OnChange>
                    LavishSettings[Craft Config File].FindSet[General Options].FindSetting[How many Writs to create per craft session?]:Set[${This.Text}]
                    Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[WritCount]:Set[${This.Text}]
                    LavishSettings[Craft Config File]:Export[${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[configfile]}]
                  </OnChange>
                </Textentry>
                <Text Name='Writ Qty Label'>
                  <Font>
                    <Name>terminal</Name>
                    <Size>10</Size>
                    <Color>FFEBDEAA</Color>
                  </Font>
                  <X>135</X>
                  <Y>20</Y>
                  <Width>500</Width>
                  <Height>20</Height>
                  <Text>Quantity:</Text>
                </Text>
                <Textentry Name='Writ Qty'>
                  <X>190</X>
                  <Y>10</Y>
                  <Width>35</Width>
                  <Height>20</Height>
                  <MaxLength>4</MaxLength>
                  <Color>FFDDBB00</Color>
                  <OnLoad>This:SetText[${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[WritQty]}]</OnLoad>
                  <OnChange>
                    LavishSettings[Craft Config File].FindSet[General Options].FindSetting[How many Recipes per Writ?]:Set[${This.Text}]
                    Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[WritQty]:Set[${This.Text}]
                    LavishSettings[Craft Config File]:Export[${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[configfile]}]
                  </OnChange>
                </Textentry>
                <Text Name='Tier Label'>
                  <Font>
                    <Name>terminal</Name>
                    <Size>10</Size>
                    <Color>FFEBDEAA</Color>
                  </Font>
                  <X>242</X>
                  <Y>20</Y>
                  <Width>500</Width>
                  <Height>20</Height>
                  <Text>Choice:</Text>
                </Text>
                <Textentry Name='Tier'>
                  <X>285</X>
                  <Y>10</Y>
                  <Width>35</Width>
                  <Height>20</Height>
                  <MaxLength>4</MaxLength>
                  <Color>FFDDBB00</Color>
                  <OnLoad>This:SetText[${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[Tier]}]</OnLoad>
                  <OnChange>
                    LavishSettings[Craft Config File].FindSet[General Options].FindSetting[Which Writ Tier to use?]:Set[${This.Text}]
                    Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[Tier]:Set[${This.Text}]
                    LavishSettings[Craft Config File]:Export[${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[configfile]}]
                  </OnChange>
                </Textentry>
                <Commandbutton Name='Create Work Order'>
                  <X>60</X>
                  <Y>40</Y>
                  <Width>120</Width>
                  <Height>20</Height>
                  <Text>Create Work Orders</Text>
                  <OnLeftClick>
                    Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[StartWO]:Set[TRUE]
                    UIElement[CraftLite@Titlebar@Craft Selection]:Hide
                  </OnLeftClick>
                </Commandbutton>
                <Commandbutton Name='Create Rush Order'>
                  <X>240</X>
                  <Y>40</Y>
                  <Width>120</Width>
                  <Height>20</Height>
                  <Text>Create Rush Orders</Text>
                  <OnLeftClick>
                    Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[StartRO]:Set[TRUE]
                    UIElement[CraftLite@Titlebar@Craft Selection]:Hide
                  </OnLeftClick>
                </Commandbutton>
              </Tab>
              <Tab Name='About'>
                <Text Name='Craft About Title'>
                  <X>0</X>
                  <Y>10</Y>
                  <Width>100%</Width>
                  <Height>15</Height>
                  <Alignment>Center</Alignment>
                  <Font>
                    <Name>terminal</Name>
                    <Size>11</Size>
                    <Color>FFEBDEAA</Color>
                  </Font>
                  <Text>Automatic Crafting Bot v${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[CraftVersion]}</Text>
                </Text>
                <Text Name='Craft About By'>
                  <X>0</X>
                  <Y>25</Y>
                  <Width>100%</Width>
                  <Height>15</Height>
                  <Alignment>Center</Alignment>
                  <Font>
                    <Name>terminal</Name>
                    <Size>11</Size>
                    <Color>FFEBDEAA</Color>
                  </Font>
                  <Text>Originally by Blazer</Text>
                </Text>
                <Text Name='About 1'>
                  <X>0</X>
                  <Y>40</Y>
                  <Width>100%</Width>
                  <Height>15</Height>
                  <Alignment>Center</Alignment>
                  <Font>
                    <Name>terminal</Name>
                    <Size>11</Size>
                    <Color>FFFFFF00</Color>
                  </Font>
                  <Text>ISXEQ2 was created by Amadeus</Text>
                </Text>
                <Text Name='About 2'>
                  <X>0</X>
                  <Y>60</Y>
                  <Width>100%</Width>
                  <Height>15</Height>
                  <Alignment>Center</Alignment>
                  <Font>
                    <Name>terminal</Name>
                    <Size>11</Size>
                    <Color>FFEBDEAA</Color>
                  </Font>
                  <Text>For more Information Please see</Text>
                </Text>
                <Text Name='About 3'>
                  <X>0</X>
                  <Y>75</Y>
                  <Width>100%</Width>
                  <Height>15</Height>
                  <Alignment>Center</Alignment>
                  <Font>
                    <Name>terminal</Name>
                    <Size>10</Size>
                    <Color>FFEBDEAA</Color>
                  </Font>
                  <Text>http://www.isxGames.com/forums</Text>
                </Text>
              </Tab>
            </Tabs>
          </Tabcontrol>
          <Frame Name='Crafting List Frame'>
            <X>0</X>
            <Y>180</Y>
            <Height>470</Height>
            <Width>100%</Width>
            <Visible>0</Visible>
            <Children>
              <Button Name='Craft Title'>
                <X>0</X>
                <Y>0</Y>
                <Width>415</Width>
                <Height>30</Height>
                <TextColor>FFEECC00</TextColor>
                <Text>Current list of Recipes in Queue</Text>
              </Button>
              <Listbox Name='Craft List'>
                <X>0</X>
                <Y>25</Y>
                <Width>415</Width>
                <Height>r5</Height>
                <Font>
                  <Name>terminal</Name>
                  <Size>12</Size>
                </Font>
                <Texture />
                <SelectMultiple>1</SelectMultiple>
                <Sort>Text</Sort>
              </Listbox>
            </Children>
          </Frame>
          <Frame Name='Harvest Frame'>
            <X>0</X>
            <Y>300</Y>
            <Height>500</Height>
            <Width>500</Width>
            <Visible>0</Visible>
            <Children>
              <Button Name='Harvest Title'>
                <X>0</X>
                <Y>0</Y>
                <Width>83%</Width>
                <Height>20</Height>
                <TextColor>FFEECC00</TextColor>
                <Text>RAW HARVESTED RESOURCES</Text>
              </Button>
              <Listbox Name='Harvest Resource List'>
                <X>0</X>
                <Y>16</Y>
                <Width>83%</Width>
                <Height>62</Height>
                <Font>
                  <Name>terminal</Name>
                  <Size>11</Size>
                </Font>
                <Texture />
                <SelectMultiple>1</SelectMultiple>
                <OnSelect>
                  broker Name "${This.Item[${ID}].Text.Token[1,|]}" Sort ByPriceAsc MinTier Handcrafted MaxTier Treasured
                </OnSelect>
                <Sort>Text</Sort>
              </Listbox>
              <Button Name='Vendor Bought Title'>
                <X>0</X>
                <Y>77</Y>
                <Width>83%</Width>
                <Height>20</Height>
                <TextColor>FFEECC00</TextColor>
                <Text>VENDOR BOUGHT COMPONENTS</Text>
              </Button>
              <Listbox Name='Vendor Bought List'>
                <X>0</X>
                <Y>96</Y>
                <Width>83%</Width>
                <Height>60</Height>
                <Font>
                  <Name>terminal</Name>
                  <Size>11</Size>
                </Font>
                <SelectMultiple>1</SelectMultiple>
                <Texture />
                <Sort>Text</Sort>
              </Listbox>
              <Button Name='Fuel Title'>
                <X>0</X>
                <Y>154</Y>
                <Width>83%</Width>
                <Height>20</Height>
                <TextColor>FFEECC00</TextColor>
                <Text>FUEL COMPONENTS</Text>
              </Button>
              <Listbox Name='Fuel List'>
                <X>0</X>
                <Y>175</Y>
                <Width>83%</Width>
                <Height>60</Height>
                <Font>
                  <Name>terminal</Name>
                  <Size>11</Size>
                </Font>
                <SelectMultiple>1</SelectMultiple>
                <Texture />
                <Sort>Text</Sort>
              </Listbox>
              <Button Name='Crafted Title'>
                <X>0</X>
                <Y>234</Y>
                <Width>83%</Width>
                <Height>20</Height>
                <TextColor>FFEECC00</TextColor>
                <Text>CRAFTED COMPONENTS</Text>
              </Button>
              <Listbox Name='Crafted List'>
                <X>0</X>
                <Y>253</Y>
                <Width>83%</Width>
                <Height>115</Height>
                <Font>
                  <Name>terminal</Name>
                  <Size>11</Size>
                </Font>
                <SelectMultiple>1</SelectMultiple>
                <Texture />
                <Sort>Text</Sort>
              </Listbox>
            </Children>
          </Frame>
        </Children>
      </Frame>
      <Frame Name='Crafting Frame'>
        <X>0</X>
        <Y>0</Y>
        <Height>720</Height>
        <Width>500</Width>
        <Visible>0</Visible>
        <Children>
          <Button Name='Process Title'>
            <X>20</X>
            <Y>55</Y>
            <Width>386</Width>
            <Height>30</Height>
            <TextColor>FFEECC00</TextColor>
            <Text>Current Crafting Progress List</Text>
          </Button>
          <Listbox Name='Process List'>
            <X>20</X>
            <Y>78</Y>
            <Width>386</Width>
            <Height>550</Height>
            <Font>
              <Name>terminal</Name>
              <Size>11</Size>
            </Font>
            <SelectMultiple>1</SelectMultiple>
            <Texture />
            <Sort>None</Sort>
          </Listbox>
        </Children>
      </Frame>
      <Commandbutton Name='Quit Button'>
        <visible>0</visible>
        <X>65</X>
        <Y>640</Y>
        <Width>130</Width>
        <Height>30</Height>
        <Text>Quit</Text>
        <OnLeftClick>
          Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[endcraft]:Set[TRUE]
          UIElement[Craft Selection].FindUsableChild[Quit Button,commandbutton]:Hide
          UIElement[Craft Selection].FindUsableChild[Pause Button,commandbutton]:Hide
        </OnLeftClick>
      </Commandbutton>
      <Commandbutton Name='Pause Button'>
        <visible>0</visible>
        <X>235</X>
        <Y>640</Y>
        <Width>130</Width>
        <Height>30</Height>
        <Text>Pause</Text>
        <OnLeftClick>
          if !${thisbuttonpaused}
          {
          thisbuttonpaused:Set[1]
          UIElement[Craft Selection].FindUsableChild[Pause Button,commandbutton]:SetText[Resume]
          }
          else
          {
          thisbuttonpaused:Set[0]
          UIElement[Craft Selection].FindUsableChild[Pause Button,commandbutton]:SetText[Pause]
          }
        </OnLeftClick>
      </Commandbutton>
      <Checkbox Name='Camp Now'>
        <visible>0</visible>
        <Font>
          <Name>terminal</Name>
          <Size>10</Size>
          <Color>FFEBDEAA</Color>
        </Font>
        <X>85</X>
        <Y>24</Y>
        <Width>150</Width>
        <Height>20</Height>
        <Text>Camp out after Craft Session is complete</Text>
        <OnLoad>
          if ${Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[CampNow]}
          {
          UIElement[Camp Now@Craft Selection]:SetChecked
          }
        </OnLoad>
        <OnLeftClick>
          if ${UIElement[Camp Now@Craft Selection].Checked}
          {
          Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[CampNow]:Set[TRUE]
          }
          else
          {
          Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}].Variable[CampNow]:Set[FALSE]
          }
          Script[${If[${Script[Buffer:Craft](exists)},Buffer:Craft,Craft]}]:ExecuteAtom[UpdateSettings]
        </OnLeftClick>
      </Checkbox>
    </Children>
  </Window>
</ISUI>