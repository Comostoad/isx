<?xml version="1.0" encoding="UTF-8" ?>
<ISUI>
	<Commandcheckbox Name='OffenseMode'>
		<X>5%</X>
		<Y>10</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Cast Offensive Spells</Text>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[OffenseMode]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Cast Offensive Spells",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[OffenseMode]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Cast Offensive Spells",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Cast Offensive Spells]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='UseCAs'>
		<Visible>1</Visible>
		<X>5%</X>
		<Y>30</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Use Battle Warden AA's</Text>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[UseCAs]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["UseCAs",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[UseCAs]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["UseCAs",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[UseCAs]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='AoEMode'>
		<X>5%</X>
		<Y>50</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Cast AoE Spells</Text>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[AoEMode]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Cast AoE Spells",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[AoEMode]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Cast AoE Spells",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Cast AoE Spells]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='CureMode'>
		<X>5%</X>
		<Y>70</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Cast Cures</Text>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[CureMode]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Cast Cure Spells",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[CureMode]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Cast Cure Spells",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Cast Cure Spells]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='GenesisMode'>
		<Visible>1</Visible>
		<X>5%</X>
		<Y>90</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Cast Genesis</Text>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[GenesisMode]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Cast Genesis",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[GenesisMode]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Cast Genesis",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Cast Genesis]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='MeleeMode'>
		<Visible>1</Visible>
		<X>5%</X>
		<Y>110</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Use Melee AA Attacks</Text>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[MeleeMode]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Use Melee",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[MeleeMode]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Use Melee",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Use Melee]}</Data>
	</Commandcheckbox>
	<Text name='lblShiftForm'>
	  <x>5%</x>
	  <y>130</y>
	  <Height>20</Height>
		<Width>80</Width>
		<Alignment>Left</Alignment>
		<Text>ShapeShift:</Text>
	</Text>
	<combobox Name='ShiftForm'>
		<X>20%</X>
		<Y>130</Y>
		<Width>80</Width>
		<Height>20</Height>
		<AutoTooltip>Select ShapeShift Form</AutoTooltip>
		<Items>
		  <Item Value='0'>None</Item>
			<Item Value='1'>Wolf</Item>
			<Item Value='2'>Tiger</Item>
			<Item Value='3'>Treant</Item>
		</items>
		<OnLoad>
			This:AddItem[${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[ShiftForm]}]
			This.ItemByValue[${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[ShiftForm]}]:Select
		</OnLoad>
		<OnSelect>
			Script[EQ2Bot].Variable[ShiftForm]:Set[${This.SelectedItem.Value}]
			SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set[ShiftForm,${This.SelectedItem.Value}]:Save</OnSelect>
		<OnLeftClick></OnLeftClick>
	</combobox>
	<Commandcheckbox Name='InfusionMode'>
		<Visible>1</Visible>
		<X>5%</X>
		<Y>150</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Buff Infusion</Text>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[InfusionMode]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["InfusionMode",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[InfusionMode]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["InfusionMode",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[InfusionMode]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='BuffThorns'>
		<X>190</X>
		<Y>10</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Buff Thorns on MT</Text>
		<AutoTooltip>keep group and single reactives always up out of combat when power is greater than 85</AutoTooltip>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[BuffThorns]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Buff Thorns",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[BuffThorns]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Buff Thorns",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Buff Thorns]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='BuffBoon'>
		<X>190</X>
		<Y>30</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Buff Water Breathing</Text>
		<AutoTooltip>Buff Group Water Breathing</AutoTooltip>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[BuffBoon]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["BuffBoon",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[BuffBoon]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["BuffBoon",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[BuffBoon]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='CombatRez'>
		<X>190</X>
		<Y>50</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Use Rez's in Combat</Text>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[CombatRez]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Combat Rez",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[CombatRez]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Combat Rez",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Combat Rez]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='StartHO'>
		<Visible>1</Visible>
		<X>190</X>
		<Y>70</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Innitiate HO's</Text>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[StartHO]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Start HOs",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[StartHO]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Start HOs",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Start HOs]}</Data>
	</Commandcheckbox>
	<Text Name='lblBuffBatGroupMember'>
		<X>350</X>
		<Y>10</Y>
		<Width>25%</Width>
		<Height>20</Height>
		<Alignment>Left</Alignment>
		<Text>Buff Spirit of Bat:</Text>
		<AutoTooltip></AutoTooltip>
	</Text>
	<combobox name='cbBuffBatGroupMember'>
		<x>350</x>
		<y>25</y>
		<Width>100</width>
		<Height>20</height>
		<AutoTooltip>The Group Member to Bat Buff</AutoTooltip>
		<Items></items>
		<OnLoad>
			This:AddItem[${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[BuffBatGroupMember]}]
			This.ItemByValue[${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[BuffBatGroupMember]}]:Select
		</OnLoad>
		<OnSelect>
			SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set[BuffBatGroupMember,${This.SelectedItem.Text}]:Save</OnSelect>
		<OnLeftClick>
			declare tmpvar int

			This:ClearItems
			tmpvar:Set[1]
			This:AddItem[${Me.Name}:${Me.ToActor.Type}]
			if ${Me.ToActor.Pet(exists)}
			{
				This:AddItem[${Me.ToActor.Pet.Name}:${Me.ToActor.Pet.Type}]
			}
			do
			{
				if ${Me.Grouped}
				{
					if ${Me.Group[${tmpvar}].ToActor(exists)}
					{
						This:AddItem[${Me.Group[${tmpvar}].Name}:${Me.Group[${tmpvar}].ToActor.Type}]
					}
					if (${Me.Group[${tmpvar}].Class.Equal[conjuror]} || ${Me.Group[${tmpvar}].Class.Equal[necromancer]})  &amp;&amp; ${Me.Group[${tmpvar}].ToActor.Pet(exists)}
					{
						This:AddItem[${Me.Group[${tmpvar}].ToActor.Pet}:${Me.Group[${tmpvar}].ToActor.Pet.Type}]
					}

				}

			}
			while ${tmpvar:Inc}&lt;=5
		</OnLeftClick>
		</combobox>
	<Text Name='lblBuffInstinctGroupMember'>
		<X>350</X>
		<Y>50</Y>
		<Width>25%</Width>
		<Height>20</Height>
		<Alignment>Left</Alignment>
		<Text>Buff Instinct:</Text>
		<AutoTooltip></AutoTooltip>
	</Text>
	<combobox name='cbBuffInstinctGroupMember'>
		<x>350</x>
		<y>65</y>
		<Width>100</width>
		<Height>20</height>
		<AutoTooltip>The Group Member to Instinct Buff</AutoTooltip>
		<Items></items>
		<OnLoad>
			This:AddItem[${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[BuffInstinctGroupMember]}]
			This.ItemByValue[${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[BuffInstinctGroupMember]}]:Select
		</OnLoad>
		<OnSelect>
			SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set[BuffInstinctGroupMember,${This.SelectedItem.Text}]:Save</OnSelect>
		<OnLeftClick>
			declare tmpvar int

			This:ClearItems
			tmpvar:Set[1]
			This:AddItem[${Me.Name}:${Me.ToActor.Type}]
			if ${Me.ToActor.Pet(exists)}
			{
				This:AddItem[${Me.ToActor.Pet.Name}:${Me.ToActor.Pet.Type}]
			}
			do
			{
				if ${Me.Grouped}
				{
					if ${Me.Group[${tmpvar}].ToActor(exists)}
					{
						This:AddItem[${Me.Group[${tmpvar}].Name}:${Me.Group[${tmpvar}].ToActor.Type}]
					}
					if (${Me.Group[${tmpvar}].Class.Equal[conjuror]} || ${Me.Group[${tmpvar}].Class.Equal[necromancer]})  &amp;&amp; ${Me.Group[${tmpvar}].ToActor.Pet(exists)}
					{
						This:AddItem[${Me.Group[${tmpvar}].ToActor.Pet}:${Me.Group[${tmpvar}].ToActor.Pet.Type}]
					}

				}

			}
			while ${tmpvar:Inc}&lt;=5
		</OnLeftClick>
	</combobox>
	<Text Name='lblBuffSporesGroupMember'>
		<X>350</X>
		<Y>90</Y>
		<Width>20%</Width>
		<Height>20</Height>
		<Alignment>Left</Alignment>
		<Text>Buff Spores:</Text>
		<AutoTooltip></AutoTooltip>
	</Text>
	<combobox name='cbBuffSporesGroupMember'>
		<x>350</x>
		<y>105</y>
		<Width>100</width>
		<Height>20</height>
		<AutoTooltip>The Group Member to Spores Buff</AutoTooltip>
		<Items></items>
		<OnLoad>
			This:AddItem[${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[BuffSporesGroupMember]}]
			This.ItemByValue[${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[BuffSporesGroupMember]}]:Select
		</OnLoad>
		<OnSelect>
			SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set[BuffSporesGroupMember,${This.SelectedItem.Text}]:Save</OnSelect>
		<OnLeftClick>
			declare tmpvar int

			This:ClearItems
			tmpvar:Set[1]
			This:AddItem[${Me.Name}:${Me.ToActor.Type}]
			if ${Me.ToActor.Pet(exists)}
			{
				This:AddItem[${Me.ToActor.Pet.Name}:${Me.ToActor.Pet.Type}]
			}
			do
			{
				if ${Me.Grouped}
				{
					if ${Me.Group[${tmpvar}].ToActor(exists)}
					{
						This:AddItem[${Me.Group[${tmpvar}].Name}:${Me.Group[${tmpvar}].ToActor.Type}]
					}
					if (${Me.Group[${tmpvar}].Class.Equal[conjuror]} || ${Me.Group[${tmpvar}].Class.Equal[necromancer]})  &amp;&amp; ${Me.Group[${tmpvar}].ToActor.Pet(exists)}
					{
						This:AddItem[${Me.Group[${tmpvar}].ToActor.Pet}:${Me.Group[${tmpvar}].ToActor.Pet.Type}]
					}

				}

			}
			while ${tmpvar:Inc}&lt;=5
			</OnLeftClick>
	</combobox>
	<Text Name='lblBuffVigorGroupMember'>
		<X>350</X>
		<Y>130</Y>
		<Width>25%</Width>
		<Height>20</Height>
		<Alignment>Left</Alignment>
		<Text>Buff Vigor:</Text>
		<AutoTooltip></AutoTooltip>
	</Text>
	<combobox name='cbBuffVigorGroupMember'>
		<x>350</x>
		<y>145</y>
		<Width>100</width>
		<Height>20</height>
		<AutoTooltip>The Group Member to Vigor Buff</AutoTooltip>
		<Items></items>
		<OnLoad>
			This:AddItem[${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[BuffVigorGroupMember]}]
			This.ItemByValue[${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[BuffVigorGroupMember]}]:Select
		</OnLoad>
		<OnSelect>
			SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set[BuffVigorGroupMember,${This.SelectedItem.Text}]:Save</OnSelect>
		<OnLeftClick>
			declare tmpvar int

			This:ClearItems
			tmpvar:Set[1]
			This:AddItem[${Me.Name}:${Me.ToActor.Type}]
			if ${Me.ToActor.Pet(exists)}
			{
				This:AddItem[${Me.ToActor.Pet.Name}:${Me.ToActor.Pet.Type}]
			}
			do
			{
				if ${Me.Grouped}
				{
					if ${Me.Group[${tmpvar}].ToActor(exists)}
					{
						This:AddItem[${Me.Group[${tmpvar}].Name}:${Me.Group[${tmpvar}].ToActor.Type}]
					}
					if (${Me.Group[${tmpvar}].Class.Equal[conjuror]} || ${Me.Group[${tmpvar}].Class.Equal[necromancer]})  &amp;&amp; ${Me.Group[${tmpvar}].ToActor.Pet(exists)}
					{
						This:AddItem[${Me.Group[${tmpvar}].ToActor.Pet}:${Me.Group[${tmpvar}].ToActor.Pet.Type}]
					}

				}

			}
			while ${tmpvar:Inc}&lt;=5
		</OnLeftClick>
	</combobox>
	<Commandcheckbox Name='PreReactiveMode'>
		<X>350</X>
		<Y>170</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Pre-HoT</Text>
		<AutoTooltip>keep group and single reactives always up out of combat when power is greater than 85</AutoTooltip>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[KeepReactiveUp]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["KeepReactiveUp",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[KeepReactiveUp]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["KeepReactiveUp",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[KeepReactiveUp]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='ChainHOTMT'>
		<X>350</X>
		<Y>190</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Chain HoT MT</Text>
		<AutoTooltip>Keep single HoT on MT at all times while in combat</AutoTooltip>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[KeepMTHOTUp]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["KeepMTHOTUp",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[KeepMTHOTUp]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["KeepMTHOTUp",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[KeepMTHOTUp]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='ChainHoTGroup'>
		<X>350</X>
		<Y>210</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Chain HoT Group</Text>
		<AutoTooltip>Keep group HoT up at all times while in combat</AutoTooltip>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[KeepGroupHOTUp]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["KeepGroupHOTUp",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[KeepGroupHOTUp]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["KeepGroupHOTUp",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[KeepGroupHOTUp]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='UseRaidHeals'>
		<Visible>1</Visible>
		<X>350</X>
		<Y>230</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Use Raid Heals</Text>
		<AutoTooltip>Will cast single target heals on out of group raid members</AutoTooltip>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[RaidHealMode]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Use Raid Heals",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[RaidHealMode]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Use Raid Heals",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Use Raid Heals]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='UsePets'>
		<Visible>1</Visible>
		<X>350</X>
		<Y>250</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Use Pets</Text>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[PetMode]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Use Pets",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[PetMode]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Use Pets",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Use Pets]}</Data>
	</Commandcheckbox>
</ISUI>