<?xml version="1.0" encoding="UTF-8" ?>
<ISUI>
	<Commandcheckbox Name='BuffEmpathicSoothing'>
		<X>10</X>
		<Y>10</Y>
		<Width>30</Width>
		<Height>20</Height>
		<Text>Buff Empathic Soothing</Text>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[BuffEmpathicSoothing]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["BuffEmpathicSoothing",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[BuffEmpathicSoothing]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["BuffEmpathicSoothing",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[BuffEmpathicSoothing]}</Data>
	</Commandcheckbox>	
	<Commandcheckbox Name='BuffEmpathicAura'>
		<X>10</X>
		<Y>30</Y>
		<Width>30</Width>
		<Height>20</Height>
		<Text>Buff Empathic Aura</Text>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[BuffEmpathicAura]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["BuffEmpathicAura",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[BuffEmpathicAura]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["BuffEmpathicAura",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[BuffEmpathicAura]}</Data>
	</Commandcheckbox>	
	<Commandcheckbox Name='BuffPowerRegen'>
		<X>10</X>
		<Y>50</Y>
		<Width>30</Width>
		<Height>20</Height>
		<Text>Buff Power Regen</Text>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[BuffPowerRegen]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["BuffPowerRegen",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[BuffPowerRegen]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["BuffPowerRegen",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[BuffPowerRegen]}</Data>
	</Commandcheckbox>			
	<Commandcheckbox Name='BuffAspect'>
		<X>10</X>
		<Y>70</Y>
		<Width>30</Width>
		<Height>20</Height>
		<Text>Buff Aspect</Text>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[BuffAspect]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["BuffAspect",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[BuffAspect]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["BuffAspect",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[BuffAspect]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='BuffRune'>
		<X>10</X>
		<Y>90</Y>
		<Width>30</Width>
		<Height>20</Height>
		<Text>Buff Rune</Text>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[BuffRune]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["BuffRune",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[BuffRune]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["BuffRune",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[BuffRune]}</Data>
	</Commandcheckbox>	
	<Text Name='lblBuffPrismOn'>
		<X>10</X>
		<Y>278</Y>
		<Width>35%</Width>
		<Height>20</Height>
		<Alignment>Left</Alignment>
		<Text>Cast "Prismatic" proc on:</Text>
		<AutoTooltip></AutoTooltip>
	</Text>
	<combobox name='cbBuffPrismOn'>
		<x>156</x>
		<y>275</y>
		<Width>100</width>
		<Height>20</height>
		<AutoTooltip>The Raid Friend to cast the 3-proc "Prismatic" buff upon.</AutoTooltip>
		<Items></items>
		<Sort>Text</Sort>
        <OnLoad>
		    if (${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[BuffPrism](exists)})
		    {
    			This:AddItem[${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[BuffPrism]}]
    			This.ItemByValue[${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[BuffPrism]}]:Select
    		}
    		else
    		{
    		    This:AddItem["No one"]
    		    This.ItemByValue["No one"]:Select
    		}
        </OnLoad>        		
		<OnSelect>
			SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set[BuffPrism,${This.SelectedItem.Text}]:Save</OnSelect>
		<OnLeftClick>
			declare tmpvar int

			This:ClearItems
			tmpvar:Set[1]
			This:AddItem["No one"]
			This:AddItem[${Me.Name}:${Me.ToActor.Type}]
			if ${Me.Pet(exists)}
			{
				This:AddItem[${Me.Pet.Name}:${Me.Pet.Type}]
			}
			if ${Me.Raid} > 0
			{
			    do
			    {
			        if (${Me.Raid[${tmpvar}].Name.Equal[${Me.Name}]})
			            continue
					if ${Me.Raid[${tmpvar}].ToActor(exists)}
					{
						This:AddItem[${Me.Raid[${tmpvar}].Name}:${Me.Raid[${tmpvar}].ToActor.Type}]
					}
					if (${Me.Raid[${tmpvar}].Class.Equal[conjuror]} || ${Me.Raid[${tmpvar}].Class.Equal[necromancer]})  &amp;&amp; ${Me.Raid[${tmpvar}].ToActor.Pet(exists)}
					{
						This:AddItem[${Me.Raid[${tmpvar}].ToActor.Pet}:${Me.Raid[${tmpvar}].ToActor.Pet.Type}]
					}
			    }
			    while ${tmpvar:Inc}&lt; ${Me.Raid}			
			}
			elseif ${Me.Group} > 1
			{
			    do
			    {
					if ${Me.Group[${tmpvar}].ToActor(exists)}
					{
						This:AddItem[${Me.Group[${tmpvar}].Name}:${Me.Group[${tmpvar}].ToActor.Type}]
					}
					if (${Me.Group[${tmpvar}].Class.Equal[conjuror]} || ${Me.Group[${tmpvar}].Class.Equal[necromancer]})  &amp;&amp; ${Me.Group[${tmpvar}].ToActor.Pet(exists)}
					{
						This:AddItem[${Me.Group[${tmpvar}].ToActor.Pet}:${Me.Group[${tmpvar}].ToActor.Pet.Type}]
					}
			    }
			    while ${tmpvar:Inc}&lt; ${Me.Group}
			}
			This:Sort
		</OnLeftClick>
	</combobox>	
	<Text Name='lblBuffIllusory_Arm'>
		<X>155</X>
		<Y>100</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Alignment>Left</Alignment>
		<Text>Buff Illusionary Arm:</Text>
		<AutoTooltip></AutoTooltip>
	</Text>
	<combobox name='cbBuffIllusory_Arm'>
		<x>155</x>
		<y>120</y>
		<Width>100</width>
		<Height>20</height>
		<Sort>Text</Sort>
		<AutoTooltip>The Group Member to buff Double Attack</AutoTooltip>
		<Items></items>
		<OnLoad>
		    if (${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[BuffIllusory_Arm](exists)})
		    {
    			This:AddItem[${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[BuffIllusory_Arm]}]
    			This.ItemByValue[${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[BuffIllusory_Arm]}]:Select
    		}
    		else
    		{
    		    This:AddItem["No one"]
    		    This.ItemByValue["No one"]:Select
    		}
		</OnLoad>
		<OnSelect>
			SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set[BuffIllusory_Arm,${This.SelectedItem.Text}]:Save</OnSelect>
		<OnLeftClick>
			declare tmpvar int

			This:ClearItems
			tmpvar:Set[1]
			This:AddItem["No one"]
			This:AddItem[${Me.Name}:Me]
			if ${Me.Pet(exists)}
			{
				This:AddItem[${Me.Pet.Name}:${Me.Pet.Type}]
			}
			if ${Me.GroupCount} > 1
			{
			    do
			    {
					if ${Me.Group[${tmpvar}].ToActor(exists)}
					{
						This:AddItem[${Me.Group[${tmpvar}].Name}:${Me.Group[${tmpvar}].ToActor.Type}]
					}
					if (${Me.Group[${tmpvar}].Class.Equal[conjuror]} || ${Me.Group[${tmpvar}].Class.Equal[necromancer]})  &amp;&amp; ${Me.Group[${tmpvar}].ToActor.Pet(exists)}
					{
						This:AddItem[${Me.Group[${tmpvar}].ToActor.Pet}:${Me.Group[${tmpvar}].ToActor.Pet.Type}]
					}
			    }
			    while ${tmpvar:Inc}&lt; ${Me.GroupCount}
			}
			This:Sort
		</OnLeftClick>
	</combobox>
	<Text Name='lblBuffTime_Compression'>
		<X>155</X>
		<Y>50</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Alignment>Left</Alignment>
		<Text>Buff Time Compression:</Text>
		<AutoTooltip></AutoTooltip>
	</Text>
	<combobox name='cbBuffTime_Compression'>
		<x>155</x>
		<y>70</y>
		<Width>100</width>
		<Height>20</height>
		<AutoTooltip>The Group Member to Buff Time Compression on</AutoTooltip>
		<Items></items>
		<Sort>Text</Sort>
        <OnLoad>
		    if (${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[BuffTime_Compression](exists)})
		    {
    			This:AddItem[${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[BuffTime_Compression]}]
    			This.ItemByValue[${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[BuffTime_Compression]}]:Select
    		}
    		else
    		{
    		    This:AddItem["No one"]
    		    This.ItemByValue["No one"]:Select
    		}
        </OnLoad>        		
		<OnSelect>
			SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set[BuffTime_Compression,${This.SelectedItem.Text}]:Save</OnSelect>
		<OnLeftClick>
			declare tmpvar int

			This:ClearItems
			tmpvar:Set[1]
			This:AddItem["No one"]
			if ${Me.Pet(exists)}
			{
				This:AddItem[${Me.Pet.Name}:${Me.Pet.Type}]
			}
			if ${Me.GroupCount} > 1
			{
			    do
			    {
					if ${Me.Group[${tmpvar}].ToActor(exists)}
					{
						This:AddItem[${Me.Group[${tmpvar}].Name}:${Me.Group[${tmpvar}].ToActor.Type}]
					}
					if (${Me.Group[${tmpvar}].Class.Equal[conjuror]} || ${Me.Group[${tmpvar}].Class.Equal[necromancer]})  &amp;&amp; ${Me.Group[${tmpvar}].ToActor.Pet(exists)}
					{
						This:AddItem[${Me.Group[${tmpvar}].ToActor.Pet}:${Me.Group[${tmpvar}].ToActor.Pet.Type}]
					}
			    }
			    while ${tmpvar:Inc}&lt; ${Me.GroupCount}
			}
			This:Sort
		</OnLeftClick>
	</combobox>	
	<Commandbutton name='RefreshDPS'>
		<X>275</X>
		<Y>10</Y>
		<Width>20</Width>
		<Height>20</Height>
		<Text></Text>
		<AutoTooltip>Refresh</AutoTooltip>
		<OnLeftClick>
			declare tmpvar int
			declare tmpCollection collection:string

			if ${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffDPS].Keys}&gt;0
			{
				tmpvar:Set[1]

				do
				{
					tmpCollection:Set["${tmpvar}",${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffDPS].GetString[${tmpvar}]}]
				}
				while ${tmpvar:Inc}&lt;=${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffDPS].Keys}
			}

			tmpvar:Set[1]

			UIElement[lbBuffDPS@Buffs@EQ2Bot Tabs@EQ2 Bot]:ClearItems
			UIElement[lbBuffDPS@Buffs@EQ2Bot Tabs@EQ2 Bot]:AddItem[${Me.Name}:${Me.ToActor.Type}]

			if ${Me.Pet(exists)}
			{
				UIElement[lbBuffDPS@Buffs@EQ2Bot Tabs@EQ2 Bot]:AddItem[${Me.Pet}:${Me.Pet.Type}, FF0000FF]
			}

			if ${Me.Group} > 1
			{
				tmpvar:Set[1]
				do
				{
						if ${Me.Group[${tmpvar}].ToActor(exists)}
						{
							UIElement[lbBuffDPS@Buffs@EQ2Bot Tabs@EQ2 Bot]:AddItem[${Me.Group[${tmpvar}].Name}:${Me.Group[${tmpvar}].ToActor.Type}]
						}
						if (${Me.Group[${tmpvar}].Class.Equal[conjuror]} || ${Me.Group[${tmpvar}].Class.Equal[necromancer]}) &amp;&amp; ${Me.Group[${tmpvar}].ToActor.Pet(exists)}
						{
							UIElement[lbBuffDPS@Buffs@EQ2Bot Tabs@EQ2 Bot]:AddItem[${Me.Group[${tmpvar}].ToActor.Pet}:${Me.Group[${tmpvar}].ToActor.Pet.Type},FF0000FF]
						}
				}
				while ${tmpvar:Inc}&lt; ${Me.Group}
			}


			tmpvar:Set[1]

			if ${tmpCollection.FirstKey(exists)}
			{
				do
				{
					UIElement[lbBuffDPS@Buffs@EQ2Bot Tabs@EQ2 Bot].ItemByText[${tmpCollection.CurrentValue}]:Select
				}
				while ${tmpCollection.NextKey(exists)}
			}
			UIElement[lbBuffDPS@Buffs@EQ2Bot Tabs@EQ2 Bot]:Sort
		</OnLeftClick>
	</Commandbutton>
	<Text Name='lblBuffDPS'>
		<X>300</X>
		<Y>10</Y>
		<Width>150</Width>
		<Height>20</Height>
		<Alignment>Left</Alignment>
		<Text>Buff haste on:</Text>
		<AutoTooltip>Shift Left click to select group members to buff haste on</AutoTooltip>
	</Text>
	<listbox name='lbBuffDPS'>
		<x>300</x>
		<y>30</y>
		<width>150</width>
		<height>110</height>
		<SelectMultiple>1</SelectMultiple>
		<Items></items>
		<Sort>Text</Sort>
		<OnLoad>
			declare tmpvar int
			declare tmpCollection collection:string

			if ${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffDPS].Keys}&gt;0
			{
				tmpvar:Set[1]

				do
				{
					tmpCollection:Set["${tmpvar}",${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffDPS].GetString[${tmpvar}]}]
				}
				while ${tmpvar:Inc}&lt;=${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffDPS].Keys}

			}

			tmpvar:Set[1]

			UIElement[lbBuffDPS@Buffs@EQ2Bot Tabs@EQ2 Bot]:ClearItems

			UIElement[lbBuffDPS@Buffs@EQ2Bot Tabs@EQ2 Bot]:AddItem[${Me.Name}:${Me.ToActor.Type}]

			if ${Me.Pet(exists)}
				UIElement[lbBuffDPS@Buffs@EQ2Bot Tabs@EQ2 Bot]:AddItem[${Me.Pet}:${Me.Pet.Type}, FF0000FF]

			if ${Me.Group} > 1
			{

				tmpvar:Set[1]
				do
				{
						if ${Me.Group[${tmpvar}].ToActor(exists)}
						{
							UIElement[lbBuffDPS@Buffs@EQ2Bot Tabs@EQ2 Bot]:AddItem[${Me.Group[${tmpvar}].Name}:${Me.Group[${tmpvar}].ToActor.Type}]
						}
						if (${Me.Group[${tmpvar}].Class.Equal[conjuror]} || ${Me.Group[${tmpvar}].Class.Equal[necromancer]}) &amp;&amp; ${Me.Group[${tmpvar}].ToActor.Pet(exists)}
						{
							UIElement[lbBuffDPS@Buffs@EQ2Bot Tabs@EQ2 Bot]:AddItem[${Me.Group[${tmpvar}].ToActor.Pet}:${Me.Group[${tmpvar}].ToActor.Pet.Type},FF0000FF]
						}
				}
				while ${tmpvar:Inc}&lt; ${Me.Group}
			}

			tmpvar:Set[1]

			if ${tmpCollection.FirstKey(exists)}
			{
				do
				{
					UIElement[lbBuffDPS@Buffs@EQ2Bot Tabs@EQ2 Bot].ItemByText[${tmpCollection.CurrentValue}]:Select
				}
				while ${tmpCollection.NextKey(exists)}
			}
			This:Sort
		</OnLoad>
		<OnSelect>
			declare tmpvar int
			SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffDPS]:Clear
			SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffDPS]:Save

			tmpvar:Set[1]
			if ${This.SelectedItems}&gt;0
			{
				do
				{
					SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffDPS]:Set[${tmpvar},${This.SelectedItem[${tmpvar}].Text}]:Save
				}
				while ${tmpvar:Inc}&lt;=${This.SelectedItems}
			}
		</OnSelect>
		<OnDeselect>
			declare tmpvar int
			SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffDPS]:Clear
			SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffDPS]:Save

			tmpvar:Set[1]
			if ${This.SelectedItems}&gt;0
			{
				do
				{
					SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffDPS]:Set[${tmpvar},${This.SelectedItem[${tmpvar}].Text}]:Save
				}
				while ${tmpvar:Inc}&lt;=${This.SelectedItems}
			}
		</OnDeselect>
		<OnLeftClick></OnLeftClick>
	</listbox>
	<Commandbutton name='RefreshCasterDPS'>
		<X>275</X>
		<Y>150</Y>
		<Width>20</Width>
		<Height>20</Height>
		<Text></Text>
		<AutoTooltip>Refresh</AutoTooltip>
		<OnLeftClick>
			declare tmpvar int
			declare tmpCollection collection:string

			if ${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffCasterDPS].Keys}&gt;0
			{
				tmpvar:Set[1]

				do
				{
					tmpCollection:Set["${tmpvar}",${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffCasterDPS].GetString[${tmpvar}]}]
				}
				while ${tmpvar:Inc}&lt;=${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffCasterDPS].Keys}

			}

			UIElement[lbBuffCasterDPS@Buffs@EQ2Bot Tabs@EQ2 Bot]:ClearItems
			UIElement[lbBuffCasterDPS@Buffs@EQ2Bot Tabs@EQ2 Bot]:AddItem[${Me.Name}:${Me.ToActor.Type}]

			if ${Me.Pet(exists)}
				UIElement[lbBuffCasterDPS@Buffs@EQ2Bot Tabs@EQ2 Bot]:AddItem[${Me.Pet}:${Me.Pet.Type}, FF0000FF]


			if ${Me.Raid} > 0
			{
			    tmpvar:Set[1]
			    do
			    {
			        if (${Me.Raid[${tmpvar}].Name.Equal[${Me.Name}]})
			            continue

					if ${Me.Raid[${tmpvar}].ToActor(exists)}
					{
						UIElement[lbBuffCasterDPS@Buffs@EQ2Bot Tabs@EQ2 Bot]:AddItem[${Me.Raid[${tmpvar}].Name}:${Me.Raid[${tmpvar}].ToActor.Type}]
					}
					if (${Me.Raid[${tmpvar}].Class.Equal[conjuror]} || ${Me.Raid[${tmpvar}].Class.Equal[necromancer]})  &amp;&amp; ${Me.Raid[${tmpvar}].ToActor.Pet(exists)}
					{
						UIElement[lbBuffCasterDPS@Buffs@EQ2Bot Tabs@EQ2 Bot]:AddItem[${Me.Raid[${tmpvar}].ToActor.Pet}:${Me.Raid[${tmpvar}].ToActor.Pet.Type},FF0000FF]
					}
			    }
			    while ${tmpvar:Inc} &lt; ${Me.Raid}			
			}
			elseif ${Me.Group} > 1
			{

				tmpvar:Set[1]
				do
				{
						if ${Me.Group[${tmpvar}].ToActor(exists)}
						{
							UIElement[lbBuffCasterDPS@Buffs@EQ2Bot Tabs@EQ2 Bot]:AddItem[${Me.Group[${tmpvar}].Name}:${Me.Group[${tmpvar}].ToActor.Type}]
						}
						if (${Me.Group[${tmpvar}].Class.Equal[conjuror]} || ${Me.Group[${tmpvar}].Class.Equal[necromancer]}) &amp;&amp; ${Me.Group[${tmpvar}].ToActor.Pet(exists)}
						{
							UIElement[lbBuffCasterDPS@Buffs@EQ2Bot Tabs@EQ2 Bot]:AddItem[${Me.Group[${tmpvar}].ToActor.Pet}:${Me.Group[${tmpvar}].ToActor.Pet.Type},FF0000FF]
						}
				}
				while ${tmpvar:Inc}&lt; ${Me.Group}
			}

			tmpvar:Set[1]

			if ${tmpCollection.FirstKey(exists)}
			{
				do
				{
					UIElement[lbBuffCasterDPS@Buffs@EQ2Bot Tabs@EQ2 Bot].ItemByText[${tmpCollection.CurrentValue}]:Select
				}
				while ${tmpCollection.NextKey(exists)}
			}
			UIElement[lbBuffCasterDPS@Buffs@EQ2Bot Tabs@EQ2 Bot]:Sort
		</OnLeftClick>
	</Commandbutton>	
	<Text Name='lblBuffCasterDPS'>
		<X>300</X>
		<Y>150</Y>
		<Width>150</Width>
		<Height>20</Height>
		<Alignment>Left</Alignment>
		<Text>Buff caster proc spell on:</Text>
		<AutoTooltip>Shift Left click to select group members to buff caster proc spell on</AutoTooltip>
	</Text>
	<listbox name='lbBuffCasterDPS'>
		<x>300</x>
		<y>170</y>
		<width>150</width>
		<height>110</height>
		<SelectMultiple>1</SelectMultiple>
		<Sort>Text</Sort>
		<Items></items>
		<OnLoad>
			declare tmpvar int
			declare tmpCollection collection:string

			if ${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffCasterDPS].Keys}&gt;0
			{
				tmpvar:Set[1]

				do
				{
					tmpCollection:Set["${tmpvar}",${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffCasterDPS].GetString[${tmpvar}]}]
				}
				while ${tmpvar:Inc}&lt;=${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffCasterDPS].Keys}

			}

			tmpvar:Set[1]

			UIElement[lbBuffCasterDPS@Buffs@EQ2Bot Tabs@EQ2 Bot]:ClearItems

			UIElement[lbBuffCasterDPS@Buffs@EQ2Bot Tabs@EQ2 Bot]:AddItem[${Me.Name}:${Me.ToActor.Type}]

			if ${Me.Pet(exists)}
				UIElement[lbBuffCasterDPS@Buffs@EQ2Bot Tabs@EQ2 Bot]:AddItem[${Me.Pet}:${Me.Pet.Type}, FF0000FF]

			if ${Me.Raid} > 0
			{
			    do
			    {
			        if (${Me.Raid[${tmpvar}].Name.Equal[${Me.Name}]})
			            continue
					if ${Me.Raid[${tmpvar}].ToActor(exists)}
					{
						This:AddItem[${Me.Raid[${tmpvar}].Name}:${Me.Raid[${tmpvar}].ToActor.Type}]
					}
					if (${Me.Raid[${tmpvar}].Class.Equal[conjuror]} || ${Me.Raid[${tmpvar}].Class.Equal[necromancer]})  &amp;&amp; ${Me.Raid[${tmpvar}].ToActor.Pet(exists)}
					{
						This:AddItem[${Me.Raid[${tmpvar}].ToActor.Pet}:${Me.Raid[${tmpvar}].ToActor.Pet.Type}]
					}
			    }
			    while ${tmpvar:Inc}&lt; ${Me.Raid}			
			}
			elseif ${Me.Group} > 1
			{

				tmpvar:Set[1]
				do
				{
						if ${Me.Group[${tmpvar}].ToActor(exists)}
						{
							UIElement[lbBuffCasterDPS@Buffs@EQ2Bot Tabs@EQ2 Bot]:AddItem[${Me.Group[${tmpvar}].Name}:${Me.Group[${tmpvar}].ToActor.Type}]
						}
						if (${Me.Group[${tmpvar}].Class.Equal[conjuror]} || ${Me.Group[${tmpvar}].Class.Equal[necromancer]}) &amp;&amp; ${Me.Group[${tmpvar}].ToActor.Pet(exists)}
						{
							UIElement[lbBuffCasterDPS@Buffs@EQ2Bot Tabs@EQ2 Bot]:AddItem[${Me.Group[${tmpvar}].ToActor.Pet}:${Me.Group[${tmpvar}].ToActor.Pet.Type},FF0000FF]
						}
				}
				while ${tmpvar:Inc}&lt; ${Me.Group}
			}

			tmpvar:Set[1]

			if ${tmpCollection.FirstKey(exists)}
			{
				do
				{

					UIElement[lbBuffCasterDPS@Buffs@EQ2Bot Tabs@EQ2 Bot].ItemByText[${tmpCollection.CurrentValue}]:Select

				}
				while ${tmpCollection.NextKey(exists)}
			}
			This:Sort
		</OnLoad>
		<OnSelect>
			declare tmpvar int
			SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffCasterDPS]:Clear
			SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffCasterDPS]:Save

			tmpvar:Set[1]
			if ${This.SelectedItems}&gt;0
			{
				do
				{
					SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffCasterDPS]:Set[${tmpvar},${This.SelectedItem[${tmpvar}].Text}]:Save
				}
				while ${tmpvar:Inc}&lt;=${This.SelectedItems}
			}
		</OnSelect>
		<OnDeselect>
			declare tmpvar int
			SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffCasterDPS]:Clear
			SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffCasterDPS]:Save

			tmpvar:Set[1]
			if ${This.SelectedItems}&gt;0
			{
				do
				{
					SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffCasterDPS]:Set[${tmpvar},${This.SelectedItem[${tmpvar}].Text}]:Save
				}
				while ${tmpvar:Inc}&lt;=${This.SelectedItems}
			}
		</OnDeselect>
		<OnLeftClick></OnLeftClick>
	</listbox>	
</ISUI>