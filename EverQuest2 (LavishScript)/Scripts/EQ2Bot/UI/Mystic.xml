<?xml version="1.0" encoding="UTF-8" ?>
<ISUI>
	<Commandcheckbox Name='OffenseMode' Template='EQ2.Commandcheckbox'>
		<X>5%</X>
		<Y>10</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Cast Offensive Spells</Text>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[OffenseMode]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Cast Offensive Spells",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[OffenseMode]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Cast Offensive Spells",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Cast Offensive Spells]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='Deubff NPCs' Template='EQ2.Commandcheckbox'>
		<X>5%</X>
		<Y>30</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Debuff NPCs</Text>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[DebuffMode]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Cast Debuff Spells",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[DebuffMode]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Cast Debuff Spells",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Cast Debuff Spells]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='AoEMode' Template='EQ2.Commandcheckbox'>
		<X>5%</X>
		<Y>50</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Cast AoE Spells</Text>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[AoEMode]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Cast AoE Spells",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[AoEMode]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Cast AoE Spells",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Cast AoE Spells]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='CureMode' Template='EQ2.Commandcheckbox'>
		<X>5%</X>
		<Y>70</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Cast Cures</Text>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[CureMode]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Cast Cure Spells",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[CureMode]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Cast Cure Spells",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Cast Cure Spells]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='OberonMode' Template='EQ2.Commandcheckbox'>
		<Visible>1</Visible>
		<X>5%</X>
		<Y>90</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Use Oberon</Text>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[OberonMode]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Oberon Mode",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[OberonMode]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Oberon Mode",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Oberon Mode]}</Data>
	</Commandcheckbox>
		<Commandcheckbox Name='TorporMode' Template='EQ2.Commandcheckbox'>
		<Visible>1</Visible>
		<X>5%</X>
		<Y>110</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Use Torpor</Text>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[TorporMode]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Torpor Mode",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[TorporMode]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Torpor Mode",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Torpor Mode]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='CombatRez' Template='EQ2.Commandcheckbox'>
		<Visible>1</Visible>
		<X>5%</X>
		<Y>130</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Use Rez in Combat</Text>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[CombatRez]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Combat Rez",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[CombatRez]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Combat Rez",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Combat Rez]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='MeleeMode' Template='EQ2.Commandcheckbox'>
		<X>5%</X>
		<Y>150</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Use Melee Mystic Mode</Text>
		<AutoTooltip>Toggles use of combat arts and melee abilities</AutoTooltip>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[BuffNoxious]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["BuffNoxious",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[BuffNoxious]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["BuffNoxious",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[BuffNoxious]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='BuffMitigation' Template='EQ2.Commandcheckbox'>
		<X>175</X>
		<Y>30</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Buff Group Mitigation</Text>
		<AutoTooltip>Buff Group Mitigiation</AutoTooltip>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[BuffMitigation]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["BuffMitigation",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[BuffMitigation]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["BuffMitigation",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[BuffMitigation]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='BuffStrength' Template='EQ2.Commandcheckbox'>
		<X>175</X>
		<Y>50</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Buff Group Strength</Text>
		<AutoTooltip>Buff Group Strength and Max Health</AutoTooltip>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[BuffStrength]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["BuffStrength",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[BuffStrength]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["BuffStrength",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[BuffStrength]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='BuffWaterBreathing' Template='EQ2.Commandcheckbox'>
		<X>175</X>
		<Y>70</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Buff Water Breathing</Text>
		<AutoTooltip>Buff Group Water Breathing</AutoTooltip>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[BuffWaterBreathing]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["BuffWaterBreathing",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[BuffWaterBreathing]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["BuffWaterBreathing",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[BuffWaterBreathing]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='StartHO' Template='EQ2.Commandcheckbox'>
		<Visible>1</Visible>
		<X>175</X>
		<Y>90</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Innitiate HO's</Text>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[StartHO]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Start HOs",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[StartHO]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Start HOs",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Start HOs]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='UsePets' Template='EQ2.Commandcheckbox'>
		<Visible>1</Visible>
		<X>175</X>
		<Y>110</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Use Pets</Text>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[PetMode]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Use Pets",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[PetMode]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Use Pets",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Use Pets]}</Data>
	</Commandcheckbox>
	<Text Name='lblBuffAvatarGroupMember' Template='EQ2.text'>
		<X>340</X>
		<Y>10</Y>
		<Width>20%</Width>
		<Height>20</Height>
		<Alignment>Left</Alignment>
		<Text>Buff Avatar:</Text>
		<AutoTooltip></AutoTooltip>
	</Text>
	<combobox name='cbBuffAvatarGroupMember' Template='EQ2.Combobox'>
		<X>340</X>
		<y>25</y>
		<Width>100</width>
		<Height>20</height>
		<AutoTooltip>The Group Member to Buff Avatar</AutoTooltip>
		<Items></items>
		<OnLoad>
			This:AddItem[${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[BuffAvatarGroupMember]}]
			This.ItemByValue[${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[BuffAvatarGroupMember]}]:Select
		</OnLoad>
		<OnSelect>
			SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set[BuffAvatarGroupMember,${This.SelectedItem.Text}]:Save</OnSelect>
		<OnLeftClick>
			declare tmpvar int

			This:ClearItems
			tmpvar:Set[1]
			This:AddItem[${Me.Name}:${Me.ToActor.Type}]
			if ${Me.ToActor.Pet(exists)}
			{
				This:AddItem[${Me.ToActor.Pet.Name}:${Me.ToActor.Pet.Type}]
			}
			do
			{
				if ${Me.Grouped}
				{
					if ${Me.Group[${tmpvar}].ToActor(exists)}
					{
						This:AddItem[${Me.Group[${tmpvar}].Name}:${Me.Group[${tmpvar}].ToActor.Type}]
					}
					if (${Me.Group[${tmpvar}].Class.Equal[conjuror]} || ${Me.Group[${tmpvar}].Class.Equal[necromancer]})  &amp;&amp; ${Me.Group[${tmpvar}].ToActor.Pet(exists)}
					{
						This:AddItem[${Me.Group[${tmpvar}].ToActor.Pet}:${Me.Group[${tmpvar}].ToActor.Pet.Type}]
					}

				}

			}
			while ${tmpvar:Inc}&lt;=5
		</OnLeftClick>
	</combobox>
	<Commandcheckbox Name='PreWardMode' Template='EQ2.Commandcheckbox'>
		<X>340</X>
		<Y>50</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Pre-Ward</Text>
		<AutoTooltip>keep group and single Wards always up out of combat when power is greater than 85</AutoTooltip>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[KeepWardUp]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["KeepWardUp",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[KeepWardUp]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["KeepWardUp",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[KeepWardUp]}</Data>
	</Commandcheckbox>
		<Commandcheckbox Name='ChainWardMT' Template='EQ2.Commandcheckbox'>
		<X>340</X>
		<Y>70</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Chain Ward MT</Text>
		<AutoTooltip>Keep single ward on MT at all times while in combat</AutoTooltip>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[KeepMTWardUp]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["KeepMTWardUp",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[KeepMTWardUp]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["KeepMTWardUp",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[KeepMTWardUp]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='KeepGroupWardUp' Template='EQ2.Commandcheckbox'>
		<X>340</X>
		<Y>90</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Chain Ward Group</Text>
		<AutoTooltip>Keep wards on group at all times while in combat</AutoTooltip>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[KeepGroupWardUp]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["KeepGroupWardUp",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[KeepGroupWardUp]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["KeepGroupWardUp",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[KeepGroupWardUp]}</Data>
	</Commandcheckbox>
	<Commandbutton name='RefreshPower' Template='EQ2.Commandbutton'>
		<X>325</X>
		<Y>150</Y>
		<Width>20</Width>
		<Height>20</Height>
		<Text></Text>
		<AutoTooltip>Refresh</AutoTooltip>
		<OnLeftClick>
			declare tmpvar int
			declare tmpCollection collection:string

			if ${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffPower].Keys}&gt;0
			{
				tmpvar:Set[1]

				do
				{
					tmpCollection:Set["${tmpvar}",${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffPower].GetString[${tmpvar}]}]
				}
				while ${tmpvar:Inc}&lt;=${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffPower].Keys}

			}

			tmpvar:Set[1]

			UIElement[lbBuffPower@Class@EQ2Bot Tabs@EQ2 Bot]:ClearItems


			UIElement[lbBuffPower@Class@EQ2Bot Tabs@EQ2 Bot]:AddItem[${Me.Name}:${Me.ToActor.Type}]

			if ${Me.ToActor.Pet(exists)}
			{
				UIElement[lbBuffPower@Class@EQ2Bot Tabs@EQ2 Bot]:AddItem[${Me.ToActor.Pet}:${Me.ToActor.Pet.Type}, FF0000FF]
			}

			if ${Me.Grouped}
			{

				tmpvar:Set[1]
				do
				{
						if ${Me.Group[${tmpvar}].ToActor(exists)}
						{
							UIElement[lbBuffPower@Class@EQ2Bot Tabs@EQ2 Bot]:AddItem[${Me.Group[${tmpvar}].Name}:${Me.Group[${tmpvar}].ToActor.Type}]
						}
						if (${Me.Group[${tmpvar}].Class.Equal[conjuror]} || ${Me.Group[${tmpvar}].Class.Equal[necromancer]}) &amp;&amp; ${Me.Group[${tmpvar}].ToActor.Pet(exists)}
						{
							UIElement[lbBuffPower@Class@EQ2Bot Tabs@EQ2 Bot]:AddItem[${Me.Group[${tmpvar}].ToActor.Pet}:${Me.Group[${tmpvar}].ToActor.Pet.Type},FF0000FF]
						}
				}
				while ${tmpvar:Inc}&lt;=5
			}


			tmpvar:Set[1]

			if ${tmpCollection.FirstKey(exists)}
			{
				do
				{

					UIElement[lbBuffPower@Class@EQ2Bot Tabs@EQ2 Bot].ItemByText[${tmpCollection.CurrentValue}]:Select

				}
				while ${tmpCollection.NextKey(exists)}
			}
		</OnLeftClick>
	</Commandbutton>
	<Text Name='lblBuffPower' Template='EQ2.text'>
		<X>350</X>
		<Y>150</Y>
		<Width>150</Width>
		<Height>20</Height>
		<Alignment>Left</Alignment>
		<Text>Buff Power On:</Text>
		<AutoTooltip>Shift Left click to select group members to buff Power on</AutoTooltip>
	</Text>
	<listbox name='lbBuffPower' Template='EQ2.Listbox'>
		<X>325</X>
		<y>170</y>
		<width>150</width>
		<height>110</height>
		<SelectMultiple>1</SelectMultiple>
		<Items></items>
		<OnLoad>
			declare tmpvar int
			declare tmpCollection collection:string

			if ${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffPower].Keys}&gt;0
			{
				tmpvar:Set[1]

				do
				{
					tmpCollection:Set["${tmpvar}",${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffPower].GetString[${tmpvar}]}]
				}
				while ${tmpvar:Inc}&lt;=${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffPower].Keys}

			}

			tmpvar:Set[1]

			UIElement[lbBuffPower@Class@EQ2Bot Tabs@EQ2 Bot]:ClearItems

			UIElement[lbBuffPower@Class@EQ2Bot Tabs@EQ2 Bot]:AddItem[${Me.Name}:${Me.ToActor.Type}]

			if ${Me.ToActor.Pet(exists)}
			{
				UIElement[lbBuffPower@Class@EQ2Bot Tabs@EQ2 Bot]:AddItem[${Me.ToActor.Pet}:${Me.ToActor.Pet.Type}, FF0000FF]
			}

			if ${Me.Grouped}
			{

				tmpvar:Set[1]
				do
				{
						if ${Me.Group[${tmpvar}].ToActor(exists)}
						{
							UIElement[lbBuffPower@Class@EQ2Bot Tabs@EQ2 Bot]:AddItem[${Me.Group[${tmpvar}].Name}:${Me.Group[${tmpvar}].ToActor.Type}]
						}
						if (${Me.Group[${tmpvar}].Class.Equal[conjuror]} || ${Me.Group[${tmpvar}].Class.Equal[necromancer]}) &amp;&amp; ${Me.Group[${tmpvar}].ToActor.Pet(exists)}
						{
							UIElement[lbBuffPower@Class@EQ2Bot Tabs@EQ2 Bot]:AddItem[${Me.Group[${tmpvar}].ToActor.Pet}:${Me.Group[${tmpvar}].ToActor.Pet.Type},FF0000FF]
						}
				}
				while ${tmpvar:Inc}&lt;=5
			}

			tmpvar:Set[1]

			if ${tmpCollection.FirstKey(exists)}
			{
				do
				{

					UIElement[lbBuffPower@Class@EQ2Bot Tabs@EQ2 Bot].ItemByText[${tmpCollection.CurrentValue}]:Select

				}
				while ${tmpCollection.NextKey(exists)}
			}
		</OnLoad>
		<OnSelect>
			declare tmpvar int
			SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffPower]:Clear
			SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffPower]:Save

			tmpvar:Set[1]
			if ${This.SelectedItems}&gt;0
			{
				do
				{
					SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffPower]:Set[${tmpvar},${This.SelectedItem[${tmpvar}].Text}]:Save
				}
				while ${tmpvar:Inc}&lt;=${This.SelectedItems}
			}
		</OnSelect>
		<OnDeselect>
			declare tmpvar int
			SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffPower]:Clear
			SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffPower]:Save

			tmpvar:Set[1]
			if ${This.SelectedItems}&gt;0
			{
				do
				{
					SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffPower]:Set[${tmpvar},${This.SelectedItem[${tmpvar}].Text}]:Save
				}
				while ${tmpvar:Inc}&lt;=${This.SelectedItems}
			}
		</OnDeselect>
		<OnLeftClick></OnLeftClick>
	</listbox>
</ISUI>