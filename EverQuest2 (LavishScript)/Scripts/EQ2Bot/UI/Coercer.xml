<?xml version="1.0" encoding="UTF-8" ?>
<ISUI>
	<Commandcheckbox Name='AoEMode' Template='EQ2.Commandcheckbox'>
		<X>10</X>
		<Y>10</Y>
		<Width>30</Width>
		<Height>20</Height>
		<Text>Cast AoE Spells</Text>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[AoEMode]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Cast AoE Spells",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[AoEMode]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Cast AoE Spells",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Cast AoE Spells]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='PBAoEMode' Template='EQ2.Commandcheckbox'>
		<X>10</X>
		<Y>30</Y>
		<Width>30</Width>
		<Height>20</Height>
		<Text>Cast PBAoE Spells</Text>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[PBAoEMode]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Cast PBAoE Spells",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[PBAoEMode]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Cast PBAoE Spells",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Cast PBAoE Spells]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='BuffSeeInvis' Template='EQ2.Commandcheckbox'>
		<X>10</X>
		<Y>50</Y>
		<Width>30</Width>
		<Height>20</Height>
		<Text>Buff See Invisible</Text>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[BuffSeeInvis]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Buff See Invis",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[BuffSeeInvis]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Buff See Invis",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Buff See Invis]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='ccbBuffHate' Template='EQ2.Commandcheckbox'>
		<Visible>1</Visible>
		<X>10</X>
		<Y>70</Y>
		<Width>80</Width>
		<Height>20</Height>
		<Text>Buff Hate:</Text>
		<AutoTooltip>Use Hate buff</AutoTooltip>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[BuffHate]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["BuffHate",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[BuffHate]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["BuffHate",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[BuffHate]}</Data>
	</Commandcheckbox>
	<combobox name='cbBuffHateGroupMember' Template='EQ2.Combobox'>
		<x>100</x>
		<y>70</y>
		<Width>100</width>
		<Height>20</height>
		<AutoTooltip>The Group Member to Hate Buff</AutoTooltip>
		<Items></items>
		<OnLoad>
			This:AddItem[${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[BuffHateGroupMember]}]
			This.ItemByValue[${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[BuffHateGroupMember]}]:Select
		</OnLoad>
		<OnSelect>
			SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set[BuffHateGroupMember,${This.SelectedItem.Text}]:Save</OnSelect>
		<OnLeftClick>
			declare tmpvar int

			This:ClearItems
			tmpvar:Set[1]
			This:AddItem[${Me.Name}:${Me.ToActor.Type}]
			if ${Me.ToActor.Pet(exists)}
			{
				This:AddItem[${Me.ToActor.Pet.Name}:${Me.ToActor.Pet.Type}]
			}
			do
			{
				if ${Me.Grouped}
				{
					if ${Me.Group[${tmpvar}].ToActor(exists)}
					{
						This:AddItem[${Me.Group[${tmpvar}].Name}:${Me.Group[${tmpvar}].ToActor.Type}]
					}
					if (${Me.Group[${tmpvar}].Class.Equal[conjuror]} || ${Me.Group[${tmpvar}].Class.Equal[necromancer]})  &amp;&amp; ${Me.Group[${tmpvar}].ToActor.Pet(exists)}
					{
						This:AddItem[${Me.Group[${tmpvar}].ToActor.Pet}:${Me.Group[${tmpvar}].ToActor.Pet.Type}]
					}

				}

			}
			while ${tmpvar:Inc}&lt;=5
		</OnLeftClick>
	</combobox>
	<Commandcheckbox Name='cbBuffHeal' Template='EQ2.Commandcheckbox'>
		<Visible>1</Visible>
		<X>10</X>
		<Y>90</Y>
		<Width>80</Width>
		<Height>20</Height>
		<Text>Buff Heal:</Text>
		<AutoTooltip>Use Heal buff</AutoTooltip>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[BuffCoerciveHealing]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["BuffCoerciveHealing",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[BuffCoerciveHealing]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["BuffCoerciveHealing",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[BuffCoerciveHealing]}</Data>
	</Commandcheckbox>
	<combobox name='cbBuffHealGroupMember' Template='EQ2.Combobox'>
		<x>100</x>
		<y>90</y>
		<Width>100</width>
		<Height>20</height>
		<AutoTooltip>The Group Member to Heal Buff</AutoTooltip>
		<Items></items>
		<OnLoad>
			This:AddItem[${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[BuffCoerciveHealingGroupMember]}]
			This.ItemByValue[${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[BuffCoerciveHealingGroupMember]}]:Select
		</OnLoad>
		<OnSelect>
			SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set[BuffCoerciveHealingGroupMember,${This.SelectedItem.Text}]:Save</OnSelect>
		<OnLeftClick>
			declare tmpvar int

			This:ClearItems
			tmpvar:Set[1]

			do
			{
				if ${Me.Grouped}
				{
					if ${Me.Group[${tmpvar}].ToActor(exists)}
					{
						This:AddItem[${Me.Group[${tmpvar}].Name}:${Me.Group[${tmpvar}].ToActor.Type}]
					}
				}
			}
			while ${tmpvar:Inc}&lt;=5
		</OnLeftClick>
	</combobox>
	<Commandcheckbox Name='BuffInstigation' Template='EQ2.Commandcheckbox'>
		<X>10</X>
		<Y>110</Y>
		<Width>30</Width>
		<Height>20</Height>
		<Text>Buff Instigation</Text>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[BuffInstigation]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["BuffInstigation",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[BuffInstigation]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["BuffInstigation",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[BuffInstigation]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='BuffSignet' Template='EQ2.Commandcheckbox'>
		<X>10</X>
		<Y>130</Y>
		<Width>30</Width>
		<Height>20</Height>
		<Text>Buff Signet</Text>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[BuffSignet]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["BuffSignet",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[BuffSignet]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["BuffSignet",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[BuffSignet]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='Mezz' Template='EQ2.Commandcheckbox'>
		<Visible>1</Visible>
		<X>10</X>
		<Y>150</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Mezz Adds</Text>
		<AutoTooltip>Attempts to mezz up to two adds</AutoTooltip>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[MezzMode]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Mezz Mode",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[MezzMode]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Mezz Mode",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Mezz Mode]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='Charm' Template='EQ2.Commandcheckbox'>
		<Visible>1</Visible>
		<X>10</X>
		<Y>170</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Charm an Add</Text>
		<AutoTooltip>Charms an add</AutoTooltip>
		<OnLeftClick>
			if ${This.Checked}
			{

				Script[EQ2Bot].Variable[Charm]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Charm",TRUE]:Save
			}
			else
			{

				Script[EQ2Bot].Variable[Charm]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Charm",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Charm]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='DPSMode' Template='EQ2.Commandcheckbox'>
		<Visible>1</Visible>
		<X>10</X>
		<Y>190</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Use DPS Mode</Text>
		<AutoTooltip>Used for group or raid</AutoTooltip>
		<OnLeftClick>
			if ${This.Checked}
			{

				Script[EQ2Bot].Variable[DPSMode]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["DPSMode",TRUE]:Save
			}
			else
			{

				Script[EQ2Bot].Variable[DPSMode]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["DPSMode",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[DPSMode]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='SprintMode' Template='EQ2.Commandcheckbox'>
		<Visible>1</Visible>
		<X>10</X>
		<Y>210</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Use Sprint Mode</Text>
		<AutoTooltip>Toggles on Sprint till under 50 power</AutoTooltip>
		<OnLeftClick>
			if ${This.Checked}
			{

				Script[EQ2Bot].Variable[SprintMode]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["UseSprint",TRUE]:Save
			}
			else
			{

				Script[EQ2Bot].Variable[SprintMode]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["UseSprint",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[UseSprint]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='TSMode' Template='EQ2.Commandcheckbox'>
		<Visible>1</Visible>
		<X>10</X>
		<Y>230</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Use ThoughtSnap</Text>
		<AutoTooltip>Used for raid when MT not in group</AutoTooltip>
		<OnLeftClick>
			if ${This.Checked}
			{

				Script[EQ2Bot].Variable[TSMode]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["UseTS",TRUE]:Save
			}
			else
			{

				Script[EQ2Bot].Variable[TSMode]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["UseTS",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[UseTS]}</Data>
	</Commandcheckbox>
	<Commandbutton name='RefreshDPS' Template='EQ2.Commandbutton'>
		<X>275</X>
		<Y>10</Y>
		<Width>20</Width>
		<Height>20</Height>
		<Text></Text>
		<AutoTooltip>Refresh</AutoTooltip>
		<OnLeftClick>
			declare tmpvar int
			declare tmpCollection collection:string

			if ${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffDPS].Keys}&gt;0
			{
				tmpvar:Set[1]

				do
				{
					tmpCollection:Set["${tmpvar}",${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffDPS].GetString[${tmpvar}]}]
				}
				while ${tmpvar:Inc}&lt;=${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffDPS].Keys}

			}

			tmpvar:Set[1]

			UIElement[lbBuffDPS@Class@EQ2Bot Tabs@EQ2 Bot]:ClearItems


			UIElement[lbBuffDPS@Class@EQ2Bot Tabs@EQ2 Bot]:AddItem[${Me.Name}:${Me.ToActor.Type}]

			if ${Me.ToActor.Pet(exists)}
			{
				UIElement[lbBuffDPS@Class@EQ2Bot Tabs@EQ2 Bot]:AddItem[${Me.ToActor.Pet}:${Me.ToActor.Pet.Type}, FF0000FF]
			}

			if ${Me.Grouped}
			{

				tmpvar:Set[1]
				do
				{
						if ${Me.Group[${tmpvar}].ToActor(exists)}
						{
							UIElement[lbBuffDPS@Class@EQ2Bot Tabs@EQ2 Bot]:AddItem[${Me.Group[${tmpvar}].Name}:${Me.Group[${tmpvar}].ToActor.Type}]
						}
						if (${Me.Group[${tmpvar}].Class.Equal[conjuror]} || ${Me.Group[${tmpvar}].Class.Equal[necromancer]}) &amp;&amp; ${Me.Group[${tmpvar}].ToActor.Pet(exists)}
						{
							UIElement[lbBuffDPS@Class@EQ2Bot Tabs@EQ2 Bot]:AddItem[${Me.Group[${tmpvar}].ToActor.Pet}:${Me.Group[${tmpvar}].ToActor.Pet.Type},FF0000FF]
						}
				}
				while ${tmpvar:Inc}&lt;=5
			}


			tmpvar:Set[1]

			if ${tmpCollection.FirstKey(exists)}
			{
				do
				{

					UIElement[lbBuffDPS@Class@EQ2Bot Tabs@EQ2 Bot].ItemByText[${tmpCollection.CurrentValue}]:Select

				}
				while ${tmpCollection.NextKey(exists)}
			}
		</OnLeftClick>
	</Commandbutton>
	<Text Name='lblBuffDPS' Template='EQ2.text'>
		<X>300</X>
		<Y>10</Y>
		<Width>150</Width>
		<Height>20</Height>
		<Alignment>Left</Alignment>
		<Text>Buff DPS On:</Text>
		<AutoTooltip>Shift Left click to select group members to buff DPS on</AutoTooltip>
	</Text>
	<listbox name='lbBuffDPS' Template='EQ2.Listbox'>
		<x>300</x>
		<y>30</y>
		<width>150</width>
		<height>110</height>
		<SelectMultiple>1</SelectMultiple>
		<Items></items>
		<OnLoad>
			declare tmpvar int
			declare tmpCollection collection:string

			if ${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffDPS].Keys}&gt;0
			{
				tmpvar:Set[1]

				do
				{
					tmpCollection:Set["${tmpvar}",${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffDPS].GetString[${tmpvar}]}]
				}
				while ${tmpvar:Inc}&lt;=${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffDPS].Keys}

			}

			tmpvar:Set[1]

			UIElement[lbBuffDPS@Class@EQ2Bot Tabs@EQ2 Bot]:ClearItems

			UIElement[lbBuffDPS@Class@EQ2Bot Tabs@EQ2 Bot]:AddItem[${Me.Name}:${Me.ToActor.Type}]

			if ${Me.ToActor.Pet(exists)}
			{
				UIElement[lbBuffDPS@Class@EQ2Bot Tabs@EQ2 Bot]:AddItem[${Me.ToActor.Pet}:${Me.ToActor.Pet.Type}, FF0000FF]
			}

			if ${Me.Grouped}
			{

				tmpvar:Set[1]
				do
				{
						if ${Me.Group[${tmpvar}].ToActor(exists)}
						{
							UIElement[lbBuffDPS@Class@EQ2Bot Tabs@EQ2 Bot]:AddItem[${Me.Group[${tmpvar}].Name}:${Me.Group[${tmpvar}].ToActor.Type}]
						}
						if (${Me.Group[${tmpvar}].Class.Equal[conjuror]} || ${Me.Group[${tmpvar}].Class.Equal[necromancer]}) &amp;&amp; ${Me.Group[${tmpvar}].ToActor.Pet(exists)}
						{
							UIElement[lbBuffDPS@Class@EQ2Bot Tabs@EQ2 Bot]:AddItem[${Me.Group[${tmpvar}].ToActor.Pet}:${Me.Group[${tmpvar}].ToActor.Pet.Type},FF0000FF]
						}
				}
				while ${tmpvar:Inc}&lt;=5
			}

			tmpvar:Set[1]

			if ${tmpCollection.FirstKey(exists)}
			{
				do
				{

					UIElement[lbBuffDPS@Class@EQ2Bot Tabs@EQ2 Bot].ItemByText[${tmpCollection.CurrentValue}]:Select

				}
				while ${tmpCollection.NextKey(exists)}
			}
		</OnLoad>
		<OnSelect>
			declare tmpvar int
			SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffDPS]:Clear
			SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffDPS]:Save

			tmpvar:Set[1]
			if ${This.SelectedItems}&gt;0
			{
				do
				{
					SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffDPS]:Set[${tmpvar},${This.SelectedItem[${tmpvar}].Text}]:Save
				}
				while ${tmpvar:Inc}&lt;=${This.SelectedItems}
			}
		</OnSelect>
		<OnDeselect>
			declare tmpvar int
			SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffDPS]:Clear
			SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffDPS]:Save

			tmpvar:Set[1]
			if ${This.SelectedItems}&gt;0
			{
				do
				{
					SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffDPS]:Set[${tmpvar},${This.SelectedItem[${tmpvar}].Text}]:Save
				}
				while ${tmpvar:Inc}&lt;=${This.SelectedItems}
			}
		</OnDeselect>
		<OnLeftClick></OnLeftClick>
	</listbox>
	<Commandbutton name='RefreshAntiHate' Template='EQ2.Commandbutton'>
		<X>275</X>
		<Y>150</Y>
		<Width>20</Width>
		<Height>20</Height>
		<Text></Text>
		<AutoTooltip>Refresh</AutoTooltip>
		<OnLeftClick>
			declare tmpvar int
			declare tmpCollection collection:string

			if ${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffAntiHate].Keys}&gt;0
			{
				tmpvar:Set[1]

				do
				{
					tmpCollection:Set["${tmpvar}",${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffAntiHate].GetString[${tmpvar}]}]
				}
				while ${tmpvar:Inc}&lt;=${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffAntiHate].Keys}

			}

			tmpvar:Set[1]

			UIElement[lbBuffAntiHate@Class@EQ2Bot Tabs@EQ2 Bot]:ClearItems

			if ${Me.InRaid}
			{
				do
				{
					if ${Me.Raid[${tmpvar}](exists)}
					{
						UIElement[lbBuffAntiHate@Class@EQ2Bot Tabs@EQ2 Bot]:AddItem[${Me.Raid[${tmpvar}].Name}]
					}
				}
				while ${tmpvar:Inc}&lt;=24
			}
			else
			{
				UIElement[lbBuffAntiHate@Class@EQ2Bot Tabs@EQ2 Bot]:AddItem[${Me.Name}:${Me.ToActor.Type}]

				if ${Me.ToActor.Pet(exists)}
				{
					UIElement[lbBuffAntiHate@Class@EQ2Bot Tabs@EQ2 Bot]:AddItem[${Me.ToActor.Pet}:${Me.ToActor.Pet.Type}, FF0000FF]
				}

				if ${Me.Grouped}
				{

					tmpvar:Set[1]
					do
					{
							if ${Me.Group[${tmpvar}].ToActor(exists)}
							{
								UIElement[lbBuffAntiHate@Class@EQ2Bot Tabs@EQ2 Bot]:AddItem[${Me.Group[${tmpvar}].Name}:${Me.Group[${tmpvar}].ToActor.Type}]
							}
							if (${Me.Group[${tmpvar}].Class.Equal[conjuror]} || ${Me.Group[${tmpvar}].Class.Equal[necromancer]}) &amp;&amp; ${Me.Group[${tmpvar}].ToActor.Pet(exists)}
							{
								UIElement[lbBuffAntiHate@Class@EQ2Bot Tabs@EQ2 Bot]:AddItem[${Me.Group[${tmpvar}].ToActor.Pet}:${Me.Group[${tmpvar}].ToActor.Pet.Type},FF0000FF]
							}
					}
					while ${tmpvar:Inc}&lt;=5
				}
			}

			tmpvar:Set[1]

			if ${tmpCollection.FirstKey(exists)}
			{
				do
				{

					UIElement[lbBuffAntiHate@Class@EQ2Bot Tabs@EQ2 Bot].ItemByText[${tmpCollection.CurrentValue}]:Select

				}
				while ${tmpCollection.NextKey(exists)}
			}
		</OnLeftClick>
	</Commandbutton>
	<Text Name='lblBuffAntiHate' Template='EQ2.text'>
		<X>300</X>
		<Y>150</Y>
		<Width>150</Width>
		<Height>20</Height>
		<Alignment>Left</Alignment>
		<Text>Buff Anti Hate On:</Text>
		<AutoTooltip>Shift Left click to select group members to buff Anti Hate on</AutoTooltip>
	</Text>
	<listbox name='lbBuffAntiHate' Template='EQ2.Listbox'>
		<x>300</x>
		<y>170</y>
		<width>150</width>
		<height>110</height>
		<SelectMultiple>1</SelectMultiple>
		<Items></items>
		<OnLoad>
			declare tmpvar int
			declare tmpCollection collection:string

			if ${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffAntiHate].Keys}&gt;0
			{
				tmpvar:Set[1]

				do
				{
					tmpCollection:Set["${tmpvar}",${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffAntiHate].GetString[${tmpvar}]}]
				}
				while ${tmpvar:Inc}&lt;=${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffAntiHate].Keys}

			}

			tmpvar:Set[1]

			UIElement[lbBuffAntiHate@Class@EQ2Bot Tabs@EQ2 Bot]:ClearItems

			if ${Me.InRaid}
			{
				do
				{
					if ${Me.Raid[${tmpvar}](exists)}
					{
						UIElement[lbBuffAntiHate@Class@EQ2Bot Tabs@EQ2 Bot]:AddItem[${Me.Raid[${tmpvar}].Name}]
					}
				}
				while ${tmpvar:Inc}&lt;=24
			}
			else
			{
				UIElement[lbBuffAntiHate@Class@EQ2Bot Tabs@EQ2 Bot]:AddItem[${Me.Name}:${Me.ToActor.Type}]

				if ${Me.ToActor.Pet(exists)}
				{
					UIElement[lbBuffAntiHate@Class@EQ2Bot Tabs@EQ2 Bot]:AddItem[${Me.ToActor.Pet}:${Me.ToActor.Pet.Type}, FF0000FF]
				}

				if ${Me.Grouped}
				{

					tmpvar:Set[1]
					do
					{
							if ${Me.Group[${tmpvar}].ToActor(exists)}
							{
								UIElement[lbBuffAntiHate@Class@EQ2Bot Tabs@EQ2 Bot]:AddItem[${Me.Group[${tmpvar}].Name}:${Me.Group[${tmpvar}].ToActor.Type}]
							}
							if (${Me.Group[${tmpvar}].Class.Equal[conjuror]} || ${Me.Group[${tmpvar}].Class.Equal[necromancer]}) &amp;&amp; ${Me.Group[${tmpvar}].ToActor.Pet(exists)}
							{
								UIElement[lbBuffAntiHate@Class@EQ2Bot Tabs@EQ2 Bot]:AddItem[${Me.Group[${tmpvar}].ToActor.Pet}:${Me.Group[${tmpvar}].ToActor.Pet.Type},FF0000FF]
							}
					}
					while ${tmpvar:Inc}&lt;=5
				}
			}

			tmpvar:Set[1]

			if ${tmpCollection.FirstKey(exists)}
			{
				do
				{

					UIElement[lbBuffAntiHate@Class@EQ2Bot Tabs@EQ2 Bot].ItemByText[${tmpCollection.CurrentValue}]:Select

				}
				while ${tmpCollection.NextKey(exists)}
			}
		</OnLoad>
		<OnSelect>
			declare tmpvar int
			SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffAntiHate]:Clear
			SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffAntiHate]:Save

			tmpvar:Set[1]
			if ${This.SelectedItems}&gt;0
			{
				do
				{
					SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffAntiHate]:Set[${tmpvar},${This.SelectedItem[${tmpvar}].Text}]:Save
				}
				while ${tmpvar:Inc}&lt;=${This.SelectedItems}
			}
		</OnSelect>
		<OnDeselect>
			declare tmpvar int
			SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffAntiHate]:Clear
			SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffAntiHate]:Save

			tmpvar:Set[1]
			if ${This.SelectedItems}&gt;0
			{
				do
				{
					SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffAntiHate]:Set[${tmpvar},${This.SelectedItem[${tmpvar}].Text}]:Save
				}
				while ${tmpvar:Inc}&lt;=${This.SelectedItems}
			}
		</OnDeselect>
		<OnLeftClick></OnLeftClick>
	</listbox>
</ISUI>