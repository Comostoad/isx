<?xml version="1.0" encoding="UTF-8" ?>
<ISUI>
	<Commandcheckbox Name='OffenseMode'>
		<X>5%</X>
		<Y>10</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Cast Offensive Spells</Text>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[OffenseMode]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Cast Offensive Spells",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[OffenseMode]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Cast Offensive Spells",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Cast Offensive Spells]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='Deubff NPCs'>
		<X>5%</X>
		<Y>30</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Debuff NPCs</Text>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[DebuffMode]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Cast Debuff Spells",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[DebuffMode]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Cast Debuff Spells",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Cast Debuff Spells]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='AoEMode'>
		<X>5%</X>
		<Y>50</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Cast AoE Spells</Text>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[AoEMode]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Cast AoE Spells",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[AoEMode]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Cast AoE Spells",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Cast AoE Spells]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='CureMode'>
		<X>5%</X>
		<Y>70</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Cast Cures</Text>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[CureMode]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Cast Cure Spells",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[CureMode]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Cast Cure Spells",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Cast Cure Spells]}</Data>
	</Commandcheckbox>
  <Commandcheckbox Name='Yaulp'>
    <Visible>1</Visible>
    <X>5%</X>
    <Y>90</Y>
    <Width>30%</Width>
    <Height>20</Height>
    <Text>Use Yaulp</Text>
    <OnLeftClick>
      if ${This.Checked}
      {
      Script[EQ2Bot].Variable[YaulpMode]:Set[TRUE]
      SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Yaulp Mode",TRUE]:Save
      }
      else
      {
      Script[EQ2Bot].Variable[YaulpMode]:Set[FALSE]
      SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Yaulp Mode",FALSE]:Save
      }
    </OnLeftClick>
    <Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Yaulp Mode]}</Data>
  </Commandcheckbox>
  <Commandcheckbox Name='InquisitionMode'>
		<Visible>1</Visible>
		<X>5%</X>
		<Y>110</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Use Inquisition</Text>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[InquisitionMode]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Inquisition Mode",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[InquisitionMode]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Inquisition Mode",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Inquisition Mode]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='PreHealMode'>
		<X>200</X>
		<Y>10</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Cast PreHeal </Text>
		<AutoTooltip>Casts reactives out of combat</AutoTooltip>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[PreHealMode]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["PreHeal Mode",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[PreHealMode]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["PreHeal Mode",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[PreHeal Mode]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='KeepReactiveUp'>
		<X>200</X>
		<Y>30</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Maintain Single Target Reactive on MT</Text>
		<AutoTooltip>keep single reactives always up on MT</AutoTooltip>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[KeepReactiveUp]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["KeepReactiveUp",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[KeepReactiveUp]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["KeepReactiveUp",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[KeepReactiveUp]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='PreGroupReactiveMode'>
		<X>200</X>
		<Y>50</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Maintain Group Reactive</Text>
		<AutoTooltip>keep group reactives always up</AutoTooltip>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[KeepGroupReactiveUp]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["KeepGroupReactiveUp",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[KeepGroupReactiveUp]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["KeepGroupReactiveUp",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[KeepGroupReactiveUp]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='Mezz'>
		<Visible>1</Visible>
		<X>200</X>
		<Y>70</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Mezz an Add</Text>
		<AutoTooltip>Attempts to mezz 1 add by using the Wonderous Buckling AA</AutoTooltip>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[MezzMode]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Mezz Mode",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[MezzMode]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Mezz Mode",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Mezz Mode]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='Fanaticism'>
		<Visible>1</Visible>
		<X>200</X>
		<Y>90</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Use Fanaticism</Text>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[FanaticismMode]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Fanaticism Mode",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[FanaticismMode]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Fanaticism Mode",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Fanaticism Mode]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='BattleClericMode'>
		<Visible>1</Visible>
		<X>200</X>
		<Y>110</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Battle Cleric?</Text>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[BattleClericMode]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["BattleCleric Mode",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[BattleClericMode]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["BattleCleric Mode",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[BattleCleric Mode]}</Data>
	</Commandcheckbox>
  <Text Name="BuffsLbl">
    <X>20</X>
    <Y>137</Y>
    <Width>100</Width>
    <Height>20</Height>
    <Text>Buffs:</Text>
  </Text>
  <Frame Name="BuffsFrame">
    <Visible>1</Visible>
    <X>10</X>
    <Y>155</Y>
    <Width>r20</Width>
    <Height>r165</Height>
    <Border>1</Border>
    <Children>
      <Commandcheckbox Name='BuffArcane'>
        <X>5%</X>
        <Y>10</Y>
        <Width>30%</Width>
        <Height>20</Height>
        <Text>Buff Group Arcane</Text>
        <AutoTooltip>Buff the group Arcane Mitigation Spell line</AutoTooltip>
        <OnLeftClick>
          if ${This.Checked}
          {
          Script[EQ2Bot].Variable[BuffArcane]:Set[TRUE]
          SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["BuffArcane",TRUE]:Save
          }
          else
          {
          Script[EQ2Bot].Variable[BuffArcane]:Set[FALSE]
          SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["BuffArcane",FALSE]:Save
          }
        </OnLeftClick>
        <Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[BuffArcane]}</Data>
      </Commandcheckbox>
      <Commandcheckbox Name='BuffMitigation'>
        <X>5%</X>
        <Y>30</Y>
        <Width>30%</Width>
        <Height>20</Height>
        <Text>Buff Group Mitigation</Text>
        <AutoTooltip>Buff Group Mitigiation</AutoTooltip>
        <OnLeftClick>
          if ${This.Checked}
          {
          Script[EQ2Bot].Variable[BuffMitigation]:Set[TRUE]
          SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["BuffMitigation",TRUE]:Save
          }
          else
          {
          Script[EQ2Bot].Variable[BuffMitigation]:Set[FALSE]
          SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["BuffMitigation",FALSE]:Save
          }
        </OnLeftClick>
        <Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[BuffMitigation]}</Data>
      </Commandcheckbox>
      <Commandcheckbox Name='BuffProc'>
        <X>5%</X>
        <Y>50</Y>
        <Width>30%</Width>
        <Height>20</Height>
        <Text>Buff Group Proc</Text>
        <AutoTooltip>Buff Group Proc</AutoTooltip>
        <OnLeftClick>
          if ${This.Checked}
          {
          Script[EQ2Bot].Variable[BuffProc]:Set[TRUE]
          SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["BuffProc",TRUE]:Save
          }
          else
          {
          Script[EQ2Bot].Variable[BuffProc]:Set[FALSE]
          SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["BuffProc",FALSE]:Save
          }
        </OnLeftClick>
        <Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[BuffProc]}</Data>
      </Commandcheckbox>
      <Commandcheckbox Name='Convert'>
        <Visible>1</Visible>
        <X>5%</X>
        <Y>70</Y>
        <Width>30%</Width>
        <Height>20</Height>
        <Text>Buff Convert</Text>
        <OnLeftClick>
          if ${This.Checked}
          {
          Script[EQ2Bot].Variable[ConvertMode]:Set[TRUE]
          SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Convert Mode",TRUE]:Save
          }
          else
          {
          Script[EQ2Bot].Variable[ConvertMode]:Set[FALSE]
          SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Convert Mode",FALSE]:Save
          }
        </OnLeftClick>
        <Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Convert Mode]}</Data>
      </Commandcheckbox>
      <Text Name='lblBuffAuraGroupMember'>
        <X>37%</X>
        <Y>10</Y>
        <Width>20%</Width>
        <Height>20</Height>
        <Alignment>Left</Alignment>
        <Text>Buff Aura:</Text>
        <AutoTooltip></AutoTooltip>
      </Text>
      <combobox name='cbBuffAuraGroupMember'>
        <x>37%</x>
        <y>27</y>
        <Width>100</Width>
        <Height>20</Height>
        <AutoTooltip>The Group Member to Aura on</AutoTooltip>
        <Items></Items>
        <OnLoad>
          This:AddItem[${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[BuffAuraGroupMember]}]
          This.ItemByValue[${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[BuffAuraGroupMember]}]:Select
        </OnLoad>
        <OnSelect>
          Script[EQ2Bot].Variable[BuffAuraGroupMember]:Set[${This.SelectedItem.Text}]
          SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set[BuffAuraGroupMember,${This.SelectedItem.Text}]:Save
        </OnSelect>
        <OnLeftClick>
          declare tmpvar int

          This:ClearItems
          tmpvar:Set[1]
          This:AddItem[${Me.Name}]
          if ${Me.ToActor.Pet(exists)}
          {
          This:AddItem[${Me.ToActor.Pet.Name}]
          }
          do
          {
          if ${Me.Grouped}
          {
          if ${Me.Group[${tmpvar}].Name(exists)}
          {
          This:AddItem[${Me.Group[${tmpvar}].Name}]
          }
          if ${Me.Group[${tmpvar}].Class.Equal[conjuror]} || ${Me.Group[${tmpvar}].Class.Equal[necromancer]}
          {
          This:AddItem[${Me.Group[${tmpvar}].ToActor.Pet}]
          }

          }

          }
          while ${tmpvar:Inc}&lt;=5
        </OnLeftClick>
      </combobox>
      <Text Name='lblBuffShieldAllyGroupMember'>
        <X>37%</X>
        <Y>50</Y>
        <Width>20%</Width>
        <Height>20</Height>
        <Alignment>Left</Alignment>
        <Text>Buff Shield Ally:</Text>
        <AutoTooltip></AutoTooltip>
      </Text>
      <combobox name='cbBuffShieldAllyGroupMember'>
        <x>37%</x>
        <y>67</y>
        <Width>100</Width>
        <Height>20</Height>
        <AutoTooltip>The Group Member to Shield Ally Buff</AutoTooltip>
        <Items></Items>
        <OnLoad>
          This:AddItem[${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[BuffShieldAllyGroupMember]}]
          This.ItemByValue[${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[BuffShieldAllyGroupMember]}]:Select
        </OnLoad>
        <OnSelect>
          Script[EQ2Bot].Variable[BuffShieldAllyGroupMember]:Set[${This.SelectedItem.Text}]
          SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set[BuffShieldAllyGroupMember,${This.SelectedItem.Text}]:Save
        </OnSelect>
        <OnLeftClick>
          declare tmpvar int

          This:ClearItems
          tmpvar:Set[1]
          This:AddItem[${Me.Name}]
          if ${Me.ToActor.Pet(exists)}
          {
          This:AddItem[${Me.ToActor.Pet.Name}]
          }
          do
          {
          if ${Me.Grouped}
          {
          if ${Me.Group[${tmpvar}].Name(exists)}
          {
          This:AddItem[${Me.Group[${tmpvar}].Name}]
          }
          if ${Me.Group[${tmpvar}].Class.Equal[conjuror]} || ${Me.Group[${tmpvar}].Class.Equal[necromancer]}
          {
          This:AddItem[${Me.Group[${tmpvar}].ToActor.Pet}]
          }

          }

          }
          while ${tmpvar:Inc}&lt;=5
        </OnLeftClick>
      </combobox>
      <Text Name='lblBuffDPS'>
        <X>325</X>
        <Y>10</Y>
        <Width>150</Width>
        <Height>20</Height>
        <Alignment>Left</Alignment>
        <Text>Buff HP-DPS On:</Text>
        <AutoTooltip>Shift Left click to select group members to buff Portent line on</AutoTooltip>
      </Text>
      <Commandbutton name='Refresh'>
        <X>300</X>
        <Y>10</Y>
        <Width>20</Width>
        <Height>20</Height>
        <Text></Text>
        <AutoTooltip>Refresh</AutoTooltip>
        <OnLeftClick>
          declare tmpvar int
          declare tmpCollection collection:string

          if ${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffDPS].Keys}&gt;0
          {
          tmpvar:Set[1]

          do
          {
          tmpCollection:Set["${tmpvar}",${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffDPS].GetString[${tmpvar}]}]
          Script[EQ2Bot].Variable[BuffDPS]:Set["${tmpvar}",${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffDPS].GetString[${tmpvar}]}]
          }
          while ${tmpvar:Inc}&lt;=${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffDPS].Keys}

          }

          tmpvar:Set[1]

          UIElement[lbBuffDPS@Class@EQ2Bot Tabs@EQ2 Bot]:ClearItems
          UIElement[lbBuffDPS@Class@EQ2Bot Tabs@EQ2 Bot]:AddItem[${Me.Name}]

          if ${Me.ToActor.Pet(exists)}
          {
          UIElement[lbBuffDPS@Class@EQ2Bot Tabs@EQ2 Bot]:AddItem[${Me.ToActor.Pet}]
          }
          do
          {
          if ${Me.Grouped}
          {
          if ${Me.Group[${tmpvar}].Name(exists)}
          {
          UIElement[lbBuffDPS@Class@EQ2Bot Tabs@EQ2 Bot]:AddItem[${Me.Group[${tmpvar}].Name}]
          }
          if ${Me.Group[${tmpvar}].ToActor.Pet(exists)}
          {
          UIElement[lbBuffDPS@Class@EQ2Bot Tabs@EQ2 Bot]:AddItem[${Me.Group[${tmpvar}].ToActor.Pet}]
          }

          }
          }
          while ${tmpvar:Inc}&lt;=5

          if ${tmpCollection.FirstKey(exists)}
          {
          do
          {
          UIElement[lbBuffDPS@Class@EQ2Bot Tabs@EQ2 Bot].ItemByText[${tmpCollection.CurrentValue}]:Select
          }
          while ${tmpCollection.NextKey(exists)}
          }
        </OnLeftClick>
      </Commandbutton>
      <listbox name='lbBuffDPS'>
        <x>300</x>
        <y>30</y>
        <width>150</width>
        <height>90</height>
        <SelectMultiple>1</SelectMultiple>
        <Items></Items>
        <OnLoad>
          declare tmpvar int
          declare tmpCollection collection:string

          if ${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffDPS].Keys}&gt;0
          {
          tmpvar:Set[1]

          do
          {
          tmpCollection:Set["${tmpvar}",${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffDPS].GetString[${tmpvar}]}]
          Script[EQ2Bot].Variable[BuffDPS]:Set["${tmpvar}",${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffDPS].GetString[${tmpvar}]}]
          }
          while ${tmpvar:Inc}&lt;=${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffDPS].Keys}

          }

          tmpvar:Set[1]

          This:ClearItems
          This:AddItem[${Me.Name}]

          if ${Me.ToActor.Pet(exists)}
          {
          This:AddItem[${Me.ToActor.Pet}]
          }
          do
          {
          if ${Me.Grouped}
          {
          if ${Me.Group[${tmpvar}].Name(exists)}
          {
          This:AddItem[${Me.Group[${tmpvar}].Name}]
          }
          if ${Me.Group[${tmpvar}].ToActor.Pet(exists)}
          {
          This:AddItem[${Me.Group[${tmpvar}].ToActor.Pet}]
          }

          }
          }
          while ${tmpvar:Inc}&lt;=5

          if ${tmpCollection.FirstKey(exists)}
          {
          do
          {
          This.ItemByText[${tmpCollection.CurrentValue}]:Select
          }
          while ${tmpCollection.NextKey(exists)}
          }
        </OnLoad>
        <OnSelect>
          declare tmpvar int
          SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffDPS]:Clear
          SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffDPS]:Save
          Script[EQ2Bot].Variable[BuffDPS]:Clear

          tmpvar:Set[1]
          if ${This.SelectedItems}&gt;0
          {
          do
          {
          SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffDPS]:Set[${tmpvar},${This.SelectedItem[${tmpvar}].Text}]:Save
          Script[EQ2Bot].Variable[BuffDPS]:Set["${tmpvar}","${This.SelectedItem[${tmpvar}].Text}"]
          }
          while ${tmpvar:Inc}&lt;=${This.SelectedItems}
          }
        </OnSelect>
        <OnDeselect>
          declare tmpvar int

          SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffDPS]:Clear
          SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffDPS]:Save
          Script[EQ2Bot].Variable[BuffDPS]:Clear


          tmpvar:Set[1]
          if ${This.SelectedItems}&gt;0
          {
          do
          {
          SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffDPS]:Set[${tmpvar},${This.SelectedItem[${tmpvar}].Text}]:Save
          Script[EQ2Bot].Variable[BuffDPS]:Set[${tmpvar},${This.SelectedItem[${tmpvar}].Text}]
          }
          while ${tmpvar:Inc}&lt;=${This.SelectedItems}
          }
        </OnDeselect>
        <OnLeftClick></OnLeftClick>
      </listbox>
    </Children>
  </Frame>
</ISUI>