<?xml version="1.0" encoding="UTF-8" ?>
<ISUI>
	<Commandcheckbox Name='OffenseMode' Template='EQ2.Commandcheckbox'>
		<X>5%</X>
		<Y>10</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Cast Offensive Spells</Text>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[OffenseMode]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Cast Offensive Spells",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[OffenseMode]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Cast Offensive Spells",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Cast Offensive Spells]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='Deubff NPCs' Template='EQ2.Commandcheckbox'>
		<X>5%</X>
		<Y>30</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Debuff NPCs</Text>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[DebuffMode]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Cast Debuff Spells",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[DebuffMode]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Cast Debuff Spells",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Cast Debuff Spells]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='AoEMode' Template='EQ2.Commandcheckbox'>
		<X>5%</X>
		<Y>50</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Cast AoE Spells</Text>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[AoEMode]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Cast AoE Spells",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[AoEMode]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Cast AoE Spells",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Cast AoE Spells]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='CureMode' Template='EQ2.Commandcheckbox'>
		<X>5%</X>
		<Y>70</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Cast Cures</Text>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[CureMode]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Cast Cure Spells",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[CureMode]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Cast Cure Spells",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Cast Cure Spells]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='Convert' Template='EQ2.Commandcheckbox'>
		<Visible>1</Visible>
		<X>5%</X>
		<Y>90</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Buff Convert:</Text>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[ConvertMode]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Convert Mode",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[ConvertMode]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Convert Mode",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Convert Mode]}</Data>
	</Commandcheckbox>
	<Text Name='lblMainWeapon' Template='EQ2.text'>
		<X>5%</X>
		<Y>230</Y>
		<Width>20%</Width>
		<Height>20</Height>
		<Alignment>Left</Alignment>
		<Text>Main Hand:</Text>
		<AutoTooltip>Main Hand weapon to equip when not using an AA weapon</AutoTooltip>
	</Text>
	<combobox name='cbMainWeapon' Template='EQ2.Combobox'>
		<x>150</x>
		<y>230</y>
		<width>40%</width>
		<height>20</height>
		<AutoTooltip>Main Hand weapon to equip when not using an AA weapon</AutoTooltip>
		<OnLeftClick>
			declare Counter int
			Counter:Set[1]
			This:ClearItems
			Me:CreateCustomInventoryArray[nonbankonly]
			do
			{
				if ${Me.CustomInventory[${Counter}].Type.Equal[Weapon]}
				{
					This:AddItem[${Me.CustomInventory[${Counter}].Name}]
				}
			}
			while ${Counter:Inc}&lt;=${Me.CustomInventoryArraySize}
			Counter:Set[1]
			do
			{
				if ${Me.Equipment[${Counter}].Type.Equal[Weapon]}
				{
					This:AddItem[${Me.Equipment[${Counter}].Name}]
				}
			}
			while ${Counter:Inc}&lt;=22
		</OnLeftClick>
		<OnLoad>
			This:AddItem[${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[MainWeapon]}]
			This.ItemByValue[${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[MainWeapon]}]:Select
		</OnLoad>
		<OnSelect>
			Script[EQ2Bot].Variable[MainWeapon]:Set[${This.SelectedItem.Text}]
			SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set[MainWeapon,${This.SelectedItem.Text}]:Save
		</OnSelect>
	</combobox>
	<Text Name='lblOffHand' Template='EQ2.text'>
		<X>5%</X>
		<Y>250</Y>
		<Width>20%</Width>
		<Height>20</Height>
		<Alignment>Left</Alignment>
		<Text>Off Hand:</Text>
		<AutoTooltip>Off hand item to equip when not using an AA off hand item</AutoTooltip>
	</Text>
	<combobox name='cbOffHand' Template='EQ2.Combobox'>
		<x>150</x>
		<y>250</y>
		<width>40%</width>
		<height>20</height>
		<AutoTooltip>Off hand item to equip when not using an AA off hand item</AutoTooltip>
		<OnLeftClick>
			declare Counter int
			Counter:Set[1]
			This:ClearItems
			Me:CreateCustomInventoryArray[nonbankonly]
			do
			{
				if ${Me.CustomInventory[${Counter}].Type.Equal[Shield]} || ${Me.CustomInventory[${Counter}].Type.Equal[Symbol]}
				{
					This:AddItem[${Me.CustomInventory[${Counter}].Name}]
				}
			}
			while ${Counter:Inc}&lt;=${Me.CustomInventoryArraySize}
			Counter:Set[1]
			do
			{
				if ${Me.Equipment[${Counter}].Type.Equal[Shield]} || ${Me.Equipment[${Counter}].Type.Equal[Symbol]}
				{
					This:AddItem[${Me.Equipment[${Counter}].Name}]
				}
			}
			while ${Counter:Inc}&lt;=22
		</OnLeftClick>
		<OnLoad>
			This:AddItem[${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[OffHand]}]
			This.ItemByValue[${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[OffHand]}]:Select
		</OnLoad>
		<OnSelect>
			Script[EQ2Bot].Variable[OffHand]:Set[${This.SelectedItem.Text}]
			SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set[OffHand,${This.SelectedItem.Text}]:Save
		</OnSelect>
	</combobox>
	<Text Name='lblYaulpWeapon' Template='EQ2.text'>
		<X>5%</X>
		<Y>270</Y>
		<Width>130</Width>
		<Height>20</Height>
		<Alignment>Left</Alignment>
		<Text>AA Yaulp Weapon:</Text>
		<AutoTooltip>Weapon to use while cleric is using Yaulp</AutoTooltip>
	</Text>
	<combobox name='cbYaulpWeapon' Template='EQ2.Combobox'>
		<x>150</x>
		<y>270</y>
		<width>40%</width>
		<height>20</height>
		<AutoTooltip>Weapon to use while cleric is using Yaulp</AutoTooltip>
		<OnLeftClick>
			declare Counter int
			Counter:Set[1]
			This:ClearItems
			Me:CreateCustomInventoryArray[nonbankonly]
			do
			{
				if ${Me.CustomInventory[${Counter}].Type.Equal[Weapon]}
				{
					This:AddItem[${Me.CustomInventory[${Counter}].Name}]
				}
			}
			while ${Counter:Inc}&lt;=${Me.CustomInventoryArraySize}
			Counter:Set[1]
			do
			{
				if ${Me.Equipment[${Counter}].Type.Equal[Weapon]}
				{
					This:AddItem[${Me.Equipment[${Counter}].Name}]
				}
			}
			while ${Counter:Inc}&lt;=22
		</OnLeftClick>
		<OnLoad>
			This:AddItem[${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[YaulpWeapon]}]
			This.ItemByValue[${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[YaulpWeapon]}]:Select
		</OnLoad>
		<OnSelect>
			Script[EQ2Bot].Variable[YaulpWeapon]:Set[${This.SelectedItem.Text}]
			SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set[YaulpWeapon,${This.SelectedItem.Text}]:Save
		</OnSelect>
	</combobox>
	<Commandcheckbox Name='PreReactiveMode' Template='EQ2.Commandcheckbox'>
		<X>200</X>
		<Y>10</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Pre-Reactive</Text>
		<AutoTooltip>keep group and single reactives always up out of combat when power is greater than 85</AutoTooltip>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[KeepReactiveUp]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["KeepReactiveUp",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[KeepReactiveUp]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["KeepReactiveUp",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[KeepReactiveUp]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='Mezz' Template='EQ2.Commandcheckbox'>
		<Visible>1</Visible>
		<X>200</X>
		<Y>30</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Mezz an Add</Text>
		<AutoTooltip>Attempts to mezz 1 add by using the Wonderous Buckling AA</AutoTooltip>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[MezzMode]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Mezz Mode",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[MezzMode]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Mezz Mode",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Mezz Mode]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='Fanaticism' Template='EQ2.Commandcheckbox'>
		<Visible>1</Visible>
		<X>200</X>
		<Y>50</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Use Fanaticism</Text>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[FanaticismMode]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Fanaticism Mode",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[FanaticismMode]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Fanaticism Mode",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Fanaticism Mode]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='Yaulp' Template='EQ2.Commandcheckbox'>
		<Visible>1</Visible>
		<X>200</X>
		<Y>70</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Use Yaulp</Text>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[YaulpMode]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Yaulp Mode",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[YaulpMode]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Yaulp Mode",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Yaulp Mode]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='BattleClericMode' Template='EQ2.Commandcheckbox'>
		<Visible>1</Visible>
		<X>200</X>
		<Y>90</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Battle Cleric?</Text>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[BattleClericMode]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["BattleCleric Mode",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[BattleClericMode]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["BattleCleric Mode",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[BattleCleric Mode]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='BuffArcane' Template='EQ2.Commandcheckbox'>
		<X>325</X>
		<Y>10</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Buff Group Arcane</Text>
		<AutoTooltip>Buff the group Arcane Mitigation Spell line</AutoTooltip>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[BuffArcane]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["BuffArcane",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[BuffArcane]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["BuffArcane",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[BuffArcane]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='BuffMitigation' Template='EQ2.Commandcheckbox'>
		<X>325</X>
		<Y>30</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Buff Group Mitigation</Text>
		<AutoTooltip>Buff Group Mitigiation</AutoTooltip>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[BuffMitigation]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["BuffMitigation",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[BuffMitigation]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["BuffMitigation",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[BuffMitigation]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='BuffProc' Template='EQ2.Commandcheckbox'>
		<X>325</X>
		<Y>50</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Buff Group Proc</Text>
		<AutoTooltip>Buff Group Proc</AutoTooltip>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[BuffProc]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["BuffProc",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[BuffProc]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["BuffProc",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[BuffProc]}</Data>
	</Commandcheckbox>
	<Text Name='lblBuffAuraGroupMember' Template='EQ2.text'>
		<X>325</X>
		<Y>70</Y>
		<Width>20%</Width>
		<Height>20</Height>
		<Alignment>Left</Alignment>
		<Text>Buff Aura:</Text>
		<AutoTooltip></AutoTooltip>
	</Text>
	<combobox name='cbBuffAuraGroupMember' Template='EQ2.Combobox'>
		<x>325</x>
		<y>90</y>
		<Width>100</width>
		<Height>20</height>
		<AutoTooltip>The Group Member to Aura on</AutoTooltip>
		<Items></items>
		<OnLoad>
			This:AddItem[${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[BuffAuraGroupMember]}]
			This.ItemByValue[${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[BuffAuraGroupMember]}]:Select
		</OnLoad>
		<OnSelect>
			Script[EQ2Bot].Variable[BuffAuraGroupMember]:Set[${This.SelectedItem.Text}]
			SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set[BuffAuraGroupMember,${This.SelectedItem.Text}]:Save</OnSelect>
		<OnLeftClick>
			declare tmpvar int

			This:ClearItems
			tmpvar:Set[1]
			This:AddItem[${Me.Name}]
			if ${Me.ToActor.Pet(exists)}
			{
				This:AddItem[${Me.ToActor.Pet.Name}]
			}
			do
			{
				if ${Me.Grouped}
				{
					if ${Me.Group[${tmpvar}].Name(exists)}
					{
						This:AddItem[${Me.Group[${tmpvar}].Name}]
					}
					if ${Me.Group[${tmpvar}].Class.Equal[conjuror]} || ${Me.Group[${tmpvar}].Class.Equal[necromancer]}
					{
						This:AddItem[${Me.Group[${tmpvar}].ToActor.Pet}]
					}

				}

			}
			while ${tmpvar:Inc}&lt;=5
		</OnLeftClick>
	</combobox>
	<Text Name='lblBuffShieldAllyGroupMember' Template='EQ2.text'>
		<X>325</X>
		<Y>110</Y>
		<Width>20%</Width>
		<Height>20</Height>
		<Alignment>Left</Alignment>
		<Text>Buff Shield Ally:</Text>
		<AutoTooltip></AutoTooltip>
	</Text>
	<combobox name='cbBuffShieldAllyGroupMember' Template='EQ2.Combobox'>
		<x>325</x>
		<y>130</y>
		<Width>100</width>
		<Height>20</height>
		<AutoTooltip>The Group Member to Shield Ally Buff</AutoTooltip>
		<Items></items>
		<OnLoad>
			This:AddItem[${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[BuffShieldAllyGroupMember]}]
			This.ItemByValue[${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[BuffShieldAllyGroupMember]}]:Select
		</OnLoad>
		<OnSelect>
			Script[EQ2Bot].Variable[BuffShieldAllyGroupMember]:Set[${This.SelectedItem.Text}]
			SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set[BuffShieldAllyGroupMember,${This.SelectedItem.Text}]:Save</OnSelect>
		<OnLeftClick>
			declare tmpvar int

			This:ClearItems
			tmpvar:Set[1]
			This:AddItem[${Me.Name}]
			if ${Me.ToActor.Pet(exists)}
			{
				This:AddItem[${Me.ToActor.Pet.Name}]
			}
			do
			{
				if ${Me.Grouped}
				{
					if ${Me.Group[${tmpvar}].Name(exists)}
					{
						This:AddItem[${Me.Group[${tmpvar}].Name}]
					}
					if ${Me.Group[${tmpvar}].Class.Equal[conjuror]} || ${Me.Group[${tmpvar}].Class.Equal[necromancer]}
					{
						This:AddItem[${Me.Group[${tmpvar}].ToActor.Pet}]
					}

				}

			}
			while ${tmpvar:Inc}&lt;=5
		</OnLeftClick>
	</combobox>
	<Text Name='lblBuffDPS' Template='EQ2.text'>
		<X>325</X>
		<Y>150</Y>
		<Width>150</Width>
		<Height>20</Height>
		<Alignment>Left</Alignment>
		<Text>Buff HP-DPS On:</Text>
		<AutoTooltip>Shift Left click to select group members to buff Portent line on</AutoTooltip>
	</Text>
	<Commandbutton name='Refresh' Template='EQ2.Commandbutton'>
		<X>300</X>
		<Y>150</Y>
		<Width>20</Width>
		<Height>20</Height>
		<Text></Text>
		<AutoTooltip>Refresh</AutoTooltip>
		<OnLeftClick>
			declare tmpvar int
			declare tmpCollection collection:string

			if ${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffDPS].Keys}&gt;0
			{
				tmpvar:Set[1]

				do
				{
					tmpCollection:Set["${tmpvar}",${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffDPS].GetString[${tmpvar}]}]
					Script[EQ2Bot].Variable[BuffDPS]:Set["${tmpvar}",${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffDPS].GetString[${tmpvar}]}]
				}
				while ${tmpvar:Inc}&lt;=${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffDPS].Keys}

			}

			tmpvar:Set[1]

			UIElement[lbBuffDPS@Class@EQ2Bot Tabs@EQ2 Bot]:ClearItems
			UIElement[lbBuffDPS@Class@EQ2Bot Tabs@EQ2 Bot]:AddItem[${Me.Name}]

			if ${Me.ToActor.Pet(exists)}
			{
				UIElement[lbBuffDPS@Class@EQ2Bot Tabs@EQ2 Bot]:AddItem[${Me.ToActor.Pet}]
			}
			do
			{
				if ${Me.Grouped}
				{
					if ${Me.Group[${tmpvar}].Name(exists)}
					{
						UIElement[lbBuffDPS@Class@EQ2Bot Tabs@EQ2 Bot]:AddItem[${Me.Group[${tmpvar}].Name}]
					}
					if ${Me.Group[${tmpvar}].ToActor.Pet(exists)}
					{
						UIElement[lbBuffDPS@Class@EQ2Bot Tabs@EQ2 Bot]:AddItem[${Me.Group[${tmpvar}].ToActor.Pet}]
					}

				}
			}
			while ${tmpvar:Inc}&lt;=5

			if ${tmpCollection.FirstKey(exists)}
			{
				do
				{
					UIElement[lbBuffDPS@Class@EQ2Bot Tabs@EQ2 Bot].ItemByText[${tmpCollection.CurrentValue}]:Select
				}
				while ${tmpCollection.NextKey(exists)}
			}
		</OnLeftClick>
	</Commandbutton>
	<listbox name='lbBuffDPS' Template='EQ2.Listbox'>
		<x>325</x>
		<y>170</y>
		<width>150</width>
		<height>110</height>
		<SelectMultiple>1</SelectMultiple>
		<Items></items>
		<OnLoad>
			declare tmpvar int
			declare tmpCollection collection:string

			if ${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffDPS].Keys}&gt;0
			{
				tmpvar:Set[1]

				do
				{
					tmpCollection:Set["${tmpvar}",${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffDPS].GetString[${tmpvar}]}]
					Script[EQ2Bot].Variable[BuffDPS]:Set["${tmpvar}",${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffDPS].GetString[${tmpvar}]}]
				}
				while ${tmpvar:Inc}&lt;=${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffDPS].Keys}

			}

			tmpvar:Set[1]

			This:ClearItems
			This:AddItem[${Me.Name}]

			if ${Me.ToActor.Pet(exists)}
			{
				This:AddItem[${Me.ToActor.Pet}]
			}
			do
			{
				if ${Me.Grouped}
				{
					if ${Me.Group[${tmpvar}].Name(exists)}
					{
						This:AddItem[${Me.Group[${tmpvar}].Name}]
					}
					if ${Me.Group[${tmpvar}].ToActor.Pet(exists)}
					{
						This:AddItem[${Me.Group[${tmpvar}].ToActor.Pet}]
					}

				}
			}
			while ${tmpvar:Inc}&lt;=5

			if ${tmpCollection.FirstKey(exists)}
			{
				do
				{
					This.ItemByText[${tmpCollection.CurrentValue}]:Select
				}
				while ${tmpCollection.NextKey(exists)}
			}
		</OnLoad>
		<OnSelect>
			declare tmpvar int
			SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffDPS]:Clear
			SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffDPS]:Save
			Script[EQ2Bot].Variable[BuffDPS]:Clear

			tmpvar:Set[1]
			if ${This.SelectedItems}&gt;0
			{
				do
				{
					SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffDPS]:Set[${tmpvar},${This.SelectedItem[${tmpvar}].Text}]:Save
					Script[EQ2Bot].Variable[BuffDPS]:Set["${tmpvar}","${This.SelectedItem[${tmpvar}].Text}"]
				}
				while ${tmpvar:Inc}&lt;=${This.SelectedItems}
			}
		</OnSelect>
		<OnDeselect>
			declare tmpvar int

			SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffDPS]:Clear
			SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffDPS]:Save
			Script[EQ2Bot].Variable[BuffDPS]:Clear


			tmpvar:Set[1]
			if ${This.SelectedItems}&gt;0
			{
				do
				{
					SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffDPS]:Set[${tmpvar},${This.SelectedItem[${tmpvar}].Text}]:Save
					Script[EQ2Bot].Variable[BuffDPS]:Set[${tmpvar},${This.SelectedItem[${tmpvar}].Text}]
				}
				while ${tmpvar:Inc}&lt;=${This.SelectedItems}
			}
		</OnDeselect>
		<OnLeftClick></OnLeftClick>
	</listbox>
</ISUI>