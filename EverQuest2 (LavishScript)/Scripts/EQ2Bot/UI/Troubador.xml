<?xml version="1.0" encoding="UTF-8" ?>
<ISUI>
	<Commandcheckbox Name='OffenseMode' Template='EQ2.Commandcheckbox'>
		<X>10</X>
		<Y>10</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Cast Offense Spells</Text>
		<AutoTooltip>Use Offensive Spells and Arts</AutoTooltip>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[OffenseMode]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Cast Offensive Spells",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[OffenseMode]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Cast Offensive Spells",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Cast Offensive Spells]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='DebuffMode' Template='EQ2.Commandcheckbox'>
		<X>10</X>
		<Y>30</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Cast Debuffs</Text>
		<AutoTooltip>Use Encounter and Single Debuffs</AutoTooltip>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[DebuffMode]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Cast Debuff Spells",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[DebuffMode]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Cast Debuff Spells",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Cast Debuff Spells]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='AoEMode' Template='EQ2.Commandcheckbox'>
		<X>10</X>
		<Y>50</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Cast AoEs</Text>
		<AutoTooltip>Cast AoE spells for multi NPC encounters</AutoTooltip>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[AoEMode]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Cast AoE Spells",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[AoEMode]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Cast AoE Spells",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Cast AoE Spells]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='Mezz' Template='EQ2.Commandcheckbox'>
		<Visible>1</Visible>
		<X>10</X>
		<Y>70</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Mezz Adds</Text>
		<AutoTooltip>Attempts to mezz up to two adds</AutoTooltip>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[MezzMode]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Mezz Mode",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[MezzMode]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Mezz Mode",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Mezz Mode]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='Charm' Template='EQ2.Commandcheckbox'>
		<Visible>1</Visible>
		<X>10</X>
		<Y>90</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Charm an Add</Text>
		<AutoTooltip>Charms an add</AutoTooltip>
		<OnLeftClick>
			if ${This.Checked}
			{

				Script[EQ2Bot].Variable[Charm]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Charm",TRUE]:Save
			}
			else
			{

				Script[EQ2Bot].Variable[Charm]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Charm",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Charm]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='BowAttackMode' Template='EQ2.Commandcheckbox'>
		<X>10</X>
		<Y>110</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Use Bow Attacks</Text>
		<AutoTooltip>Uses Bow Attacks</AutoTooltip>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[BowAttacksMode]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Cast Bow Attack Spells",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[BowAttacksMode]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Cast Bow Attack Spells",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Cast Bow Attack Spells]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='RangedAttackMode' Template='EQ2.Commandcheckbox'>
		<X>10</X>
		<Y>130</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Use Ranged Attacks Only</Text>
		<AutoTooltip>Use only ranged spells, arts and auto attack</AutoTooltip>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[RangedAttackMode]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Use Ranged Attacks Only",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[RangedAttackMode]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Use Ranged Attacks Only",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Use Ranged Attacks Only]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='JoustMode' Template='EQ2.Commandcheckbox'>
		<X>5%</X>
		<Y>150</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Joust Mobs based on Raid/Tell:</Text>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[JoustMode]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Listen to Joust Calls",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[JoustMode]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Listen to Joust Calls",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Listen to Joust Calls]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='Buff Defense' Template='EQ2.Commandcheckbox'>
		<Visible>1</Visible>
		<X>200</X>
		<Y>10</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Buff Defense:</Text>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[BuffDefense]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Buff Defense",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[BuffDefense]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Buff Defense",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Buff Defense]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='Buff Power' Template='EQ2.Commandcheckbox'>
		<Visible>1</Visible>
		<X>200</X>
		<Y>30</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Buff Power:</Text>
		<OnLeftClick>
			if ${This.Checked}
			{

				Script[EQ2Bot].Variable[BuffPower]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Buff Power",TRUE]:Save
			}
			else
			{

				Script[EQ2Bot].Variable[BuffPower]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Buff Power",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Buff Power]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='Buff Arcane' Template='EQ2.Commandcheckbox'>
		<Visible>1</Visible>
		<X>200</X>
		<Y>50</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Buff Arcane:</Text>
		<OnLeftClick>
			if ${This.Checked}
			{

				Script[EQ2Bot].Variable[BuffArcane]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Buff Arcane",TRUE]:Save
			}
			else
			{

				Script[EQ2Bot].Variable[BuffArcane]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Buff Arcane",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Buff Arcane]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='Buff Elemental' Template='EQ2.Commandcheckbox'>
		<Visible>1</Visible>
		<X>200</X>
		<Y>70</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Buff Elemental:</Text>
		<OnLeftClick>
			if ${This.Checked}
			{

				Script[EQ2Bot].Variable[BuffElemental]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Buff Elemental",TRUE]:Save
			}
			else
			{

				Script[EQ2Bot].Variable[BuffElemental]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Buff Elemental",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Buff Elemental]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='Buff Haste' Template='EQ2.Commandcheckbox'>
		<Visible>1</Visible>
		<X>200</X>
		<Y>90</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Buff Haste:</Text>
		<OnLeftClick>
			if ${This.Checked}
			{

				Script[EQ2Bot].Variable[BuffHaste]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Buff Haste",TRUE]:Save
			}
			else
			{

				Script[EQ2Bot].Variable[BuffHaste]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Buff Haste",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Buff Haste]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='Buff Health' Template='EQ2.Commandcheckbox'>
		<Visible>1</Visible>
		<X>200</X>
		<Y>110</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Buff Health:</Text>
		<OnLeftClick>
			if ${This.Checked}
			{

				Script[EQ2Bot].Variable[BuffHealth]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Buff Health",TRUE]:Save
			}
			else
			{

				Script[EQ2Bot].Variable[BuffHealth]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Buff Health",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Buff Health]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='Buff Reflection' Template='EQ2.Commandcheckbox'>
		<Visible>1</Visible>
		<X>200</X>
		<Y>130</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Buff Reflection:</Text>
		<OnLeftClick>
			if ${This.Checked}
			{

				Script[EQ2Bot].Variable[BuffReflection]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Buff Reflection",TRUE]:Save
			}
			else
			{

				Script[EQ2Bot].Variable[BuffReflection]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Buff Reflection",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Buff Reflection]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='Buff Aria' Template='EQ2.Commandcheckbox'>
		<Visible>1</Visible>
		<X>350</X>
		<Y>10</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Buff Aria:</Text>
		<OnLeftClick>
			if ${This.Checked}
			{

				Script[EQ2Bot].Variable[BuffAria]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Buff Aria",TRUE]:Save
			}
			else
			{

				Script[EQ2Bot].Variable[BuffAria]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Buff Aria",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Buff Aria]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='Buff Stamina' Template='EQ2.Commandcheckbox'>
		<Visible>1</Visible>
		<X>350</X>
		<Y>30</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Buff Stamina:</Text>
		<OnLeftClick>
			if ${This.Checked}
			{

				Script[EQ2Bot].Variable[BuffStamina]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Buff Stamina",TRUE]:Save
			}
			else
			{

				Script[EQ2Bot].Variable[BuffStamina]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Buff Stamina",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Buff Stamina]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='Buff Casting' Template='EQ2.Commandcheckbox'>
		<Visible>1</Visible>
		<X>350</X>
		<Y>50</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Buff Casting:</Text>
		<OnLeftClick>
			if ${This.Checked}
			{

				Script[EQ2Bot].Variable[BuffCasting]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Buff Casting",TRUE]:Save
			}
			else
			{

				Script[EQ2Bot].Variable[BuffCasting]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Buff Casting",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Buff Casting]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='Buff Hate' Template='EQ2.Commandcheckbox'>
		<Visible>1</Visible>
		<X>350</X>
		<Y>70</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Buff Hate:</Text>
		<OnLeftClick>
			if ${This.Checked}
			{

				Script[EQ2Bot].Variable[BuffHate]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Buff Hate",TRUE]:Save
			}
			else
			{

				Script[EQ2Bot].Variable[BuffHate]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Buff Hate",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Buff Hate]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='Buff Self' Template='EQ2.Commandcheckbox'>
		<Visible>1</Visible>
		<X>350</X>
		<Y>90</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Buff Self:</Text>
		<OnLeftClick>
			if ${This.Checked}
			{

				Script[EQ2Bot].Variable[BuffSelf]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Buff Self",TRUE]:Save
			}
			else
			{

				Script[EQ2Bot].Variable[BuffSelf]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Buff Self",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Buff Self]}</Data>
	</Commandcheckbox>
	<Commandbutton name='RefreshJesterCap' Template='EQ2.Commandbutton'>
		<X>275</X>
		<Y>150</Y>
		<Width>20</Width>
		<Height>20</Height>
		<Text></Text>
		<AutoTooltip>Refresh</AutoTooltip>
		<OnLeftClick>
			declare tmpvar int
			declare tmpCollection collection:string

			if ${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffJesterCap].Keys}&gt;0
			{
				tmpvar:Set[1]

				do
				{
					tmpCollection:Set["${tmpvar}",${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffJesterCap].GetString[${tmpvar}]}]
				}
				while ${tmpvar:Inc}&lt;=${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffJesterCap].Keys}

			}

			tmpvar:Set[1]

			UIElement[lbBuffJesterCap@Class@EQ2Bot Tabs@EQ2 Bot]:ClearItems

			if ${Me.InRaid}
			{
				do
				{
					if ${Me.Raid[${tmpvar}](exists)}
					{
						UIElement[lbBuffJesterCap@Class@EQ2Bot Tabs@EQ2 Bot]:AddItem[${Me.Raid[${tmpvar}].Name}]
					}
				}
				while ${tmpvar:Inc}&lt;=24
			}
			else
			{
				UIElement[lbBuffJesterCap@Class@EQ2Bot Tabs@EQ2 Bot]:AddItem[${Me.Name}:${Me.ToActor.Type}]

				if ${Me.ToActor.Pet(exists)}
				{
					UIElement[lbBuffJesterCap@Class@EQ2Bot Tabs@EQ2 Bot]:AddItem[${Me.ToActor.Pet}:${Me.ToActor.Pet.Type}, FF0000FF]
				}

				if ${Me.Grouped}
				{

					tmpvar:Set[1]
					do
					{
							if ${Me.Group[${tmpvar}].ToActor(exists)}
							{
								UIElement[lbBuffJesterCap@Class@EQ2Bot Tabs@EQ2 Bot]:AddItem[${Me.Group[${tmpvar}].Name}:${Me.Group[${tmpvar}].ToActor.Type}]
							}
							if (${Me.Group[${tmpvar}].Class.Equal[conjuror]} || ${Me.Group[${tmpvar}].Class.Equal[necromancer]}) &amp;&amp; ${Me.Group[${tmpvar}].ToActor.Pet(exists)}
							{
								UIElement[lbBuffJesterCap@Class@EQ2Bot Tabs@EQ2 Bot]:AddItem[${Me.Group[${tmpvar}].ToActor.Pet}:${Me.Group[${tmpvar}].ToActor.Pet.Type},FF0000FF]
							}
					}
					while ${tmpvar:Inc}&lt;=5
				}
			}

			tmpvar:Set[1]

			if ${tmpCollection.FirstKey(exists)}
			{
				do
				{

					UIElement[lbBuffJesterCap@Class@EQ2Bot Tabs@EQ2 Bot].ItemByText[${tmpCollection.CurrentValue}]:Select

				}
				while ${tmpCollection.NextKey(exists)}
			}
		</OnLeftClick>
	</Commandbutton>
	<Text Name='lblBuffJesterCap' Template='EQ2.text'>
		<X>300</X>
		<Y>150</Y>
		<Width>150</Width>
		<Height>20</Height>
		<Alignment>Left</Alignment>
		<Text>Cycle Jester Cap On:</Text>
		<AutoTooltip>Shift Left click to select group members to buff Jester Cap on</AutoTooltip>
	</Text>
	<listbox name='lbBuffJesterCap' Template='EQ2.Listbox'>
		<x>300</x>
		<y>170</y>
		<width>150</width>
		<height>110</height>
		<SelectMultiple>1</SelectMultiple>
		<Items></items>
		<OnLoad>
			declare tmpvar int
			declare tmpCollection collection:string

			if ${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffJesterCap].Keys}&gt;0
			{
				tmpvar:Set[1]

				do
				{
					tmpCollection:Set["${tmpvar}",${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffJesterCap].GetString[${tmpvar}]}]
				}
				while ${tmpvar:Inc}&lt;=${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffJesterCap].Keys}

			}

			tmpvar:Set[1]

			UIElement[lbBuffJesterCap@Class@EQ2Bot Tabs@EQ2 Bot]:ClearItems

			if ${Me.InRaid}
			{
				do
				{
					if ${Me.Raid[${tmpvar}](exists)}
					{
						UIElement[lbBuffJesterCap@Class@EQ2Bot Tabs@EQ2 Bot]:AddItem[${Me.Raid[${tmpvar}].Name}]
					}
				}
				while ${tmpvar:Inc}&lt;=24
			}
			else
			{
				UIElement[lbBuffJesterCap@Class@EQ2Bot Tabs@EQ2 Bot]:AddItem[${Me.Name}:${Me.ToActor.Type}]

				if ${Me.ToActor.Pet(exists)}
				{
					UIElement[lbBuffJesterCap@Class@EQ2Bot Tabs@EQ2 Bot]:AddItem[${Me.ToActor.Pet}:${Me.ToActor.Pet.Type}, FF0000FF]
				}

				if ${Me.Grouped}
				{

					tmpvar:Set[1]
					do
					{
							if ${Me.Group[${tmpvar}].ToActor(exists)}
							{
								UIElement[lbBuffJesterCap@Class@EQ2Bot Tabs@EQ2 Bot]:AddItem[${Me.Group[${tmpvar}].Name}:${Me.Group[${tmpvar}].ToActor.Type}]
							}
							if (${Me.Group[${tmpvar}].Class.Equal[conjuror]} || ${Me.Group[${tmpvar}].Class.Equal[necromancer]}) &amp;&amp; ${Me.Group[${tmpvar}].ToActor.Pet(exists)}
							{
								UIElement[lbBuffJesterCap@Class@EQ2Bot Tabs@EQ2 Bot]:AddItem[${Me.Group[${tmpvar}].ToActor.Pet}:${Me.Group[${tmpvar}].ToActor.Pet.Type},FF0000FF]
							}
					}
					while ${tmpvar:Inc}&lt;=5
				}
			}

			tmpvar:Set[1]

			if ${tmpCollection.FirstKey(exists)}
			{
				do
				{

					UIElement[lbBuffJesterCap@Class@EQ2Bot Tabs@EQ2 Bot].ItemByText[${tmpCollection.CurrentValue}]:Select

				}
				while ${tmpCollection.NextKey(exists)}
			}
		</OnLoad>
		<OnSelect>
			declare tmpvar int
			SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffJesterCap]:Clear
			SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffJesterCap]:Save

			tmpvar:Set[1]
			if ${This.SelectedItems}&gt;0
			{
				do
				{
					SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffJesterCap]:Set[${tmpvar},${This.SelectedItem[${tmpvar}].Text}]:Save
				}
				while ${tmpvar:Inc}&lt;=${This.SelectedItems}
			}
		</OnSelect>
		<OnDeselect>
			declare tmpvar int

			SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffJesterCap]:Clear
			SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffJesterCap]:Save

			tmpvar:Set[1]
			if ${This.SelectedItems}&gt;0
			{
				do
				{
					SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffJesterCap]:Set[${tmpvar},${This.SelectedItem[${tmpvar}].Text}]:Save
				}
				while ${tmpvar:Inc}&lt;=${This.SelectedItems}
			}
		</OnDeselect>
		<OnLeftClick></OnLeftClick>
	</listbox>
</ISUI>