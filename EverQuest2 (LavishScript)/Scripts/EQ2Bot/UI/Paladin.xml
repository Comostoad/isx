<?xml version="1.0" encoding="UTF-8" ?>
<ISUI>
	<Commandcheckbox Name='Start_HO'>
		<X>10</X>
		<Y>10</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Start HO's</Text>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[Start_HO]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Start_HO",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[AoEMode]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Start_HO",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Start_HO]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='Use Consencrate'>
		<X>10</X>
		<Y>30</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Use Consencrate</Text>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[Use_Consencrate]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Use_Consecrate",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[AoEMode]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Use_Consecrate",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Use_Consecrate]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='Taunt Mode'>
		<Visible>1</Visible>
		<X>10</X>
		<Y>50</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Taunt Mode:</Text>
		<OnLeftClick>
			if ${This.Checked}
			{

				Script[EQ2Bot].Variable[TauntMode]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Cast Taunt Spells",TRUE]:Save
			}
			else
			{

				Script[EQ2Bot].Variable[TauntMode]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Cast Taunt Spells",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Cast Taunt Spells]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='Healer Mode'>
		<X>180</X>
		<Y>10</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Enable Healer Mode</Text>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[HealerMode]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["HealerMode",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[HealerMode]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["HealerMode",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[HealerMode]}</Data>
	</Commandcheckbox>
	<Text Name='lblMainWeapon'>
		<X>5%</X>
		<Y>130</Y>
		<Width>20%</Width>
		<Height>20</Height>
		<Alignment>Left</Alignment>
		<Text>Main Hand:</Text>
		<AutoTooltip>Main Hand weapon to equip when not using an AA weapon</AutoTooltip>
	</Text>
	<combobox name='cbMainWeapon'>
		<x>150</x>
		<y>130</y>
		<width>30%</width>
		<height>20</height>
		<AutoTooltip>Main Hand weapon to equip when not using an AA weapon</AutoTooltip>
		<OnLeftClick>
			declare Counter int
			Counter:Set[1]
			This:ClearItems
			Me:CreateCustomInventoryArray[nonbankonly]
			do
			{
				if ${Me.CustomInventory[${Counter}].Type.Equal[Weapon]}
				{
					This:AddItem[${Me.CustomInventory[${Counter}].Name}]
				}
			}
			while ${Counter:Inc}&lt;=${Me.CustomInventoryArraySize}
			Counter:Set[1]
			do
			{
				if ${Me.Equipment[${Counter}].Type.Equal[Weapon]}
				{
					This:AddItem[${Me.Equipment[${Counter}].Name}]
				}
			}
			while ${Counter:Inc}&lt;=22
		</OnLeftClick>
		<OnLoad>
			This:AddItem[${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[MainWeapon]}]
			This.ItemByValue[${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[MainWeapon]}]:Select
		</OnLoad>
		<OnSelect>
			Script[EQ2Bot].Variable[MainWeapon]:Set[${This.SelectedItem.Text}]
			SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set[MainWeapon,${This.SelectedItem.Text}]:Save
		</OnSelect>
	</combobox>
	<Text Name='lblOffHand'>
		<X>5%</X>
		<Y>150</Y>
		<Width>20%</Width>
		<Height>20</Height>
		<Alignment>Left</Alignment>
		<Text>Off Hand:</Text>
		<AutoTooltip>Off hand item to equip when not using an AA off hand item</AutoTooltip>
	</Text>
	<combobox name='cbOffHand'>
		<x>150</x>
		<y>150</y>
		<width>30%</width>
		<height>20</height>
		<AutoTooltip>Off hand item to equip when not using an AA off hand item</AutoTooltip>
		<OnLeftClick>
			declare Counter int
			Counter:Set[1]
			This:ClearItems
			Me:CreateCustomInventoryArray[nonbankonly]
			do
			{
				if ${Me.CustomInventory[${Counter}].Type.Equal[Shield]} || ${Me.CustomInventory[${Counter}].Type.Equal[Symbol]}
				{
					This:AddItem[${Me.CustomInventory[${Counter}].Name}]
				}
			}
			while ${Counter:Inc}&lt;=${Me.CustomInventoryArraySize}
			Counter:Set[1]
			do
			{
				if ${Me.Equipment[${Counter}].Type.Equal[Shield]} || ${Me.Equipment[${Counter}].Type.Equal[Symbol]}
				{
					This:AddItem[${Me.Equipment[${Counter}].Name}]
				}
			}
			while ${Counter:Inc}&lt;=22
		</OnLeftClick>
		<OnLoad>
			This:AddItem[${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[OffHand]}]
			This.ItemByValue[${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[OffHand]}]:Select
		</OnLoad>
		<OnSelect>
			Script[EQ2Bot].Variable[OffHand]:Set[${This.SelectedItem.Text}]
			SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set[OffHand,${This.SelectedItem.Text}]:Save
		</OnSelect>
	</combobox>
	<Text Name='lblBuffProcGroupMember'>
		<X>375</X>
		<Y>10</Y>
		<Width>20%</Width>
		<Height>20</Height>
		<Alignment>Left</Alignment>
		<Text>Buff Protect:</Text>
		<AutoTooltip></AutoTooltip>
	</Text>
	<combobox name='cbBuffProcGroupMember'>
		<x>375</x>
		<y>30</y>
		<Width>100</width>
		<Height>20</height>
		<AutoTooltip>The Group Member to Protect</AutoTooltip>
		<Items></items>
		<OnLoad>
			This:AddItem[${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[BuffProcGroupMember]}]
			This.ItemByValue[${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[BuffProcGroupMember]}]:Select
		</OnLoad>
		<OnSelect>
			SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set[BuffProcGroupMember,${This.SelectedItem.Text}]:Save</OnSelect>
		<OnLeftClick>
			declare tmpvar int

			This:ClearItems
			tmpvar:Set[1]
			if ${Me.ToActor.Pet(exists)}
			{
				This:AddItem[${Me.ToActor.Pet.Name}:${Me.ToActor.Pet.Type}]
			}
			do
			{
				if ${Me.Grouped}
				{
					if ${Me.Group[${tmpvar}].ToActor(exists)}
					{
						This:AddItem[${Me.Group[${tmpvar}].Name}:${Me.Group[${tmpvar}].ToActor.Type}]
					}
					if (${Me.Group[${tmpvar}].Class.Equal[conjuror]} || ${Me.Group[${tmpvar}].Class.Equal[necromancer]})  &amp;&amp; ${Me.Group[${tmpvar}].ToActor.Pet(exists)}
					{
						This:AddItem[${Me.Group[${tmpvar}].ToActor.Pet}:${Me.Group[${tmpvar}].ToActor.Pet.Type}]
					}

				}

			}
			while ${tmpvar:Inc}&lt;=5
		</OnLeftClick>
	</combobox>
	<Text Name='lblSecondary_Assist'>
		<X>375</X>
		<Y>50</Y>
		<Width>20%</Width>
		<Height>20</Height>
		<Alignment>Left</Alignment>
		<Text>Buff Armament:</Text>
		<AutoTooltip></AutoTooltip>
	</Text>
	<combobox Name='cbSecondary_Assist'>
		<x>375</x>
		<y>70</y>
		<Width>100</width>
		<Height>20</height>
		<AutoTooltip>THe Group Member to Give Mitigation to</AutoTooltip>
		<Items></items>
		<OnLoad>
			This:AddItem[${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Secondary_Assist]}]
			This.ItemByValue[${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Secondary_Assist]}]:Select
		</OnLoad>
		<OnSelect>
			SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set[Secondary_Assist,${This.SelectedItem.Text}]:Save</OnSelect>
		<OnLeftClick>
			declare tmpvar int

			This:ClearItems
			tmpvar:Set[1]
			if ${Me.ToActor.Pet(exists)}
			{
				This:AddItem[${Me.ToActor.Pet.Name}:${Me.ToActor.Pet.Type}]
			}
			do
			{
				if ${Me.Grouped}
				{
					if ${Me.Group[${tmpvar}].ToActor(exists)}
					{
						This:AddItem[${Me.Group[${tmpvar}].Name}:${Me.Group[${tmpvar}].ToActor.Type}]
					}
					if (${Me.Group[${tmpvar}].Class.Equal[conjuror]} || ${Me.Group[${tmpvar}].Class.Equal[necromancer]})  &amp;&amp; ${Me.Group[${tmpvar}].ToActor.Pet(exists)}
					{
						This:AddItem[${Me.Group[${tmpvar}].ToActor.Pet}:${Me.Group[${tmpvar}].ToActor.Pet.Type}]
					}

				}

			}
			while ${tmpvar:Inc}&lt;=5
		</OnLeftClick>
	</combobox>
</ISUI>