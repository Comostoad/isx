<?xml version="1.0" encoding="UTF-8" ?>
<ISUI>
	<Commandcheckbox Name='OffensiveMode' Template='EQ2.Commandcheckbox'>
		<X>10</X>
		<Y>10</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Enable Offensive Mode</Text>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[OffensiveMode]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Cast Offensive Spells",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[OffensiveMode]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Cast Offensive Spells",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Cast Offensive Spells]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='DefensiveMode' Template='EQ2.Commandcheckbox'>
		<X>10</X>
		<Y>30</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Enable Defensive Mode</Text>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[DefensiveMode]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Cast Defensive Spells",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[DefensiveMode]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Cast Defensive Spells",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Cast Defensive Spells]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='AoEMode' Template='EQ2.Commandcheckbox'>
		<X>10</X>
		<Y>50</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Enable AoE Mode</Text>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[AoEMode]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Cast AoE Spells",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[AoEMode]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Cast AoE Spells",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Cast AoE Spells]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='PBAoEMode' Template='EQ2.Commandcheckbox'>
		<X>10</X>
		<Y>70</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Enable PBAoE Mode</Text>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[PBAoEMode]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Cast PBAoE Spells",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[PBAoEMode]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Cast PBAoE Spells",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Cast PBAoE Spells]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='Full Auto Mode' Template='EQ2.Commandcheckbox'>
		<Visible>1</Visible>
		<X>10</X>
		<Y>90</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Full Auto Mode:</Text>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[FullAutoMode]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Full Auto Mode",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[FullAutoMode]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Full Auto Mode",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Full Auto Mode]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='Taunt Mode' Template='EQ2.Commandcheckbox'>
		<Visible>1</Visible>
		<X>10</X>
		<Y>110</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Taunt Mode:</Text>
		<OnLeftClick>
			if ${This.Checked}
			{

				Script[EQ2Bot].Variable[TauntMode]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Cast Taunt Spells",TRUE]:Save
			}
			else
			{

				Script[EQ2Bot].Variable[TauntMode]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Cast Taunt Spells",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Cast Taunt Spells]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='cbCraneTwirl' Template='EQ2.Commandcheckbox'>
		<Visible>1</Visible>
		<X>10</X>
		<Y>130</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Buff Crane Twirl:</Text>
		<OnLeftClick>
			if ${This.Checked}
			{

				Script[EQ2Bot].Variable[CraneTwirlMode]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Buff Crane Twirl",TRUE]:Save
			}
			else
			{

				Script[EQ2Bot].Variable[CraneTwirlMode]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Buff Crane Twirl",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Buff Crane Twirl]}</Data>
	</Commandcheckbox>
	<Text Name='lblStanceType' Template='EQ2.text'>
		<X>10</X>
		<Y>150</Y>
		<Width>50</Width>
		<Height>20</Height>
		<Alignment>Left</Alignment>
		<Text>Stance:</Text>
	</Text>
	<combobox name='cbStanceType' Template='EQ2.Combobox'>
		<x>60</x>
		<y>150</y>
		<width>100</width>
		<height>20</height>
		<items>
			<Item Value='1'>Offensive</Item>
			<Item Value='2'>Defensive</Item>
			<Item Value='3'>Mixed</Item>
		</items>
		<OnSelect>
			Script[EQ2Bot].Variable[StanceType]:Set[${This.SelectedItem.ID}]
			SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Stance Type",${This.SelectedItem.ID}]:Save
		</OnSelect>
		<OnLoad>This.Item[${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Stance Type]}]:Select
		</OnLoad>
	</combobox>	
	<Text Name='lblMainWeapon' Template='EQ2.text'>
		<X>10</X>
		<Y>170</Y>
		<Width>20%</Width>
		<Height>20</Height>
		<Alignment>Left</Alignment>
		<Text>Main Hand:</Text>
		<AutoTooltip>Main Hand weapon to equip when not using an AA weapon</AutoTooltip>
	</Text>
	<combobox name='cbMainWeapon' Template='EQ2.Combobox'>
		<x>100</x>
		<y>170</y>
		<width>60%</width>
		<height>20</height>
		<OnLeftClick>
			declare Counter int
			Counter:Set[1]
			This:ClearItems
			This:AddItem
			Me:CreateCustomInventoryArray[nonbankonly]
			do
			{
				if ${Me.CustomInventory[${Counter}].Type.Equal[Weapon]}
				{
					This:AddItem["${Me.CustomInventory[${Counter}].Name}"]
				}
			}
			while ${Counter:Inc}&lt;=${Me.CustomInventoryArraySize}
			Counter:Set[1]
			do
			{
				if ${Me.Equipment[${Counter}].Type.Equal[Weapon]}
				{
					This:AddItem["${Me.Equipment[${Counter}].Name}"]
				}
			}
			while ${Counter:Inc}&lt;=22
		</OnLeftClick>
		<OnLoad>
			This:AddItem["${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Main]}"]
			This.ItemByValue[${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Main]}]:Select
		</OnLoad>
		<OnSelect>
			Script[EQ2Bot].Variable[WeaponMain]:Set[${This.SelectedItem.Text}]
			SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set[Main,"${This.SelectedItem.Text}"]:Save
		</OnSelect>
	</combobox>
	<Text Name='lblOffHand' Template='EQ2.text'>
		<X>10</X>
		<Y>190</Y>
		<Width>20%</Width>
		<Height>20</Height>
		<Alignment>Left</Alignment>
		<Text>Off Hand:</Text>
		<AutoTooltip>Off hand item to equip when not using an AA off hand item</AutoTooltip>
	</Text>
	<combobox name='cbOffHand' Template='EQ2.Combobox'>
		<x>100</x>
		<y>190</y>
		<width>60%</width>
		<height>20</height>
		<AutoTooltip>Off hand item to equip when not using an AA off hand item</AutoTooltip>
		<OnLeftClick>
			declare Counter int
			Counter:Set[1]
			This:ClearItems
			This:AddItem
			Me:CreateCustomInventoryArray[nonbankonly]
			do
			{
				if ${Me.CustomInventory[${Counter}].Type.Equal[Weapon]}
				{
					This:AddItem["${Me.CustomInventory[${Counter}].Name}"]
				}
			}
			while ${Counter:Inc}&lt;=${Me.CustomInventoryArraySize}
			Counter:Set[1]
			do
			{
				if ${Me.Equipment[${Counter}].Type.Equal[Weapon]}
				{
					This:AddItem["${Me.Equipment[${Counter}].Name}"]
				}
			}
			while ${Counter:Inc}&lt;=22
		</OnLeftClick>
		<OnLoad>
			This:AddItem["${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[OffHand]}"]
			This.ItemByValue[${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[OffHand]}]:Select
		</OnLoad>
		<OnSelect>
			Script[EQ2Bot].Variable[OffHand]:Set[${This.SelectedItem.Text}]
			SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set[OffHand,"${This.SelectedItem.Text}"]:Save
		</OnSelect>
	</combobox>
	<Text Name='lblStaff' Template='EQ2.text'>
		<X>10</X>
		<Y>210</Y>
		<Width>20%</Width>
		<Height>20</Height>
		<Alignment>Left</Alignment>
		<Text>AA Staff:</Text>
		<AutoTooltip>Weapon to use during Staff required AA skills</AutoTooltip>
	</Text>
	<combobox name='cbStaff' Template='EQ2.Combobox'>
		<x>100</x>
		<y>210</y>
		<width>60%</width>
		<height>20</height>
		<OnLeftClick>
			declare Counter int
			Counter:Set[1]
			This:ClearItems
			Me:CreateCustomInventoryArray[nonbankonly]
			do
			{
				if ${Me.CustomInventory[${Counter}].SubType.Equal[Staff]} || ${Me.CustomInventory[${Counter}].SubType.Equal[Great Staff]}
				{
					This:AddItem["${Me.CustomInventory[${Counter}].Name}"]
				}
			}
			while ${Counter:Inc}&lt;=${Me.CustomInventoryArraySize}
			Counter:Set[1]
			do
			{
				if ${Me.Equipment[${Counter}].SubType.Equal[Staff]} || ${Me.Equipment[${Counter}].SubType.Equal[Great Staff]}
				{
					This:AddItem["${Me.Equipment[${Counter}].Name}"]
				}
			}
			while ${Counter:Inc}&lt;=22
		</OnLeftClick>
		<OnLoad>
			This:AddItem["${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Staff]}"]
			This.ItemByValue[${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Staff]}]:Select
		</OnLoad>
		<OnSelect>
			Script[EQ2Bot].Variable[WeaponStaff]:Set[${This.SelectedItem.Text}]
			SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set[Staff,"${This.SelectedItem.Text}"]:Save
		</OnSelect>
	</combobox>
	<Text Name='lblFists' Template='EQ2.text'>
		<X>10</X>
		<Y>230</Y>
		<Width>20%</Width>
		<Height>20</Height>
		<Alignment>Left</Alignment>
		<Text>AA Fists:</Text>
		<AutoTooltip>Weapon to use during Fists required AA skills</AutoTooltip>
	</Text>
	<combobox name='cbFists' Template='EQ2.Combobox'>
		<x>100</x>
		<y>230</y>
		<width>60%</width>
		<height>20</height>
		<OnLeftClick>
			declare Counter int
			Counter:Set[1]
			This:ClearItems
			Me:CreateCustomInventoryArray[nonbankonly]
			do
			{
				if ${Me.CustomInventory[${Counter}].SubType.Equal[Fists]}				{
					This:AddItem["${Me.CustomInventory[${Counter}].Name}"]
				}
			}
			while ${Counter:Inc}&lt;=${Me.CustomInventoryArraySize}
			Counter:Set[1]
			do
			{
				if ${Me.Equipment[${Counter}].SubType.Equal[Fists]}
				{
					This:AddItem["${Me.Equipment[${Counter}].Name}"]
				}
			}
			while ${Counter:Inc}&lt;=22
		</OnLeftClick>
		<OnLoad>
			This:AddItem["${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Fists]}"]
			This.ItemByValue[${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Fists]}]:Select
		</OnLoad>
		<OnSelect>
			Script[EQ2Bot].Variable[WeaponFists]:Set[${This.SelectedItem.Text}]
			SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set[Fists,"${This.SelectedItem.Text}"]:Save
		</OnSelect>
	</combobox>
	<Text Name='lblTwoHandedStaff' Template='EQ2.text'>
		<X>10</X>
		<Y>250</Y>
		<Width>20%</Width>
		<Height>20</Height>
		<Alignment>Left</Alignment>
		<Text>AA 2H Staff:</Text>
		<AutoTooltip>2H staff to use during AAs</AutoTooltip>
	</Text>
	<combobox name='cbTwoHandedStaff' Template='EQ2.Combobox'>
		<x>100</x>
		<y>250</y>
		<width>60%</width>
		<height>20</height>
		<AutoTooltip>Weapon to use while using a 2 handed staff AA </AutoTooltip>
		<OnLeftClick>
			declare Counter int
			Counter:Set[1]
			This:ClearItems
			Me:CreateCustomInventoryArray[nonbankonly]
			do
			{
				if ${Me.CustomInventory[${Counter}].SubType.Equal[Staff]} &amp;&amp; ${Me.CustomInventory[${Counter}].WieldStyle.Find[Two-Handed]}
				{
					This:AddItem[${Me.CustomInventory[${Counter}].Name}]
				}
			}
			while ${Counter:Inc}&lt;=${Me.CustomInventoryArraySize}
			Counter:Set[1]
			do
			{
				if ${Me.Equipment[${Counter}].SubType.Equal[Staff]} &amp;&amp; ${Me.Equipment[${Counter}].WieldStyle.Find[Two-Handed]}
				{
					This:AddItem[${Me.Equipment[${Counter}].Name}]
				}
			}
			while ${Counter:Inc}&lt;=22
		</OnLeftClick>
		<OnLoad>
			This:AddItem[${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[TwoHandedStaff]}]
			This.ItemByValue[${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[TwoHandedStaff]}]:Select
		</OnLoad>
		<OnSelect>
			Script[EQ2Bot].Variable[TwoHandedStaff]:Set[${This.SelectedItem.Text}]
			SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set[TwoHandedStaff,${This.SelectedItem.Text}]:Save
		</OnSelect>
	</combobox>
	<Commandcheckbox Name='ThrownAttackMode' Template='EQ2.Commandcheckbox'>
		<Visible>1</Visible>
		<X>200</X>
		<Y>10</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Use Thrown Attacks</Text>
		<AutoTooltip>Uses Thrown Attacks</AutoTooltip>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[ThrownAttacksMode]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Cast Thrown Attack Spells",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[ThrownAttacksMode]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Cast Thrown Attack Spells",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Cast Thrown Attack Spells]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='RangedAttackMode' Template='EQ2.Commandcheckbox'>
		<Visible>1</Visible>
		<X>200</X>
		<Y>30</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Use Ranged Attacks Only</Text>
		<AutoTooltip>Use only ranged spells, arts and auto attack</AutoTooltip>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[RangedAttackMode]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Use Ranged Attacks Only",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[RangedAttackMode]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Use Ranged Attacks Only",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Use Ranged Attacks Only]}</Data>
	</Commandcheckbox>	
	<Text Name='lblBuffProtectGroupMember' Template='EQ2.text'>
		<X>375</X>
		<Y>10</Y>
		<Width>90</Width>
		<Height>20</Height>
		<Alignment>Left</Alignment>
		<Text>Buff Protect on:</Text>
		<AutoTooltip></AutoTooltip>
	</Text>
	<combobox name='cbBuffProtectGroupMember' Template='EQ2.Combobox'>
		<x>375</x>
		<y>30</y>
		<Width>100</width>
		<Height>20</height>
		<AutoTooltip>The Group Member to Protect Buff</AutoTooltip>
		<Items></items>
		<OnLoad>
			This:AddItem[${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[BuffProtectGroupMember]}]
			This.ItemByValue[${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[BuffProtectGroupMember]}]:Select
		</OnLoad>
		<OnSelect>
			SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set[BuffProtectGroupMember,${This.SelectedItem.Text}]:Save</OnSelect>
		<OnLeftClick>
			declare tmpvar int

			This:ClearItems
			tmpvar:Set[1]
			do
			{
				if ${Me.Grouped}
				{
					if ${Me.Group[${tmpvar}].ToActor(exists)}
					{
						This:AddItem[${Me.Group[${tmpvar}].Name}:${Me.Group[${tmpvar}].ToActor.Type}]
					}
				}

			}
			while ${tmpvar:Inc}&lt;=5
		</OnLeftClick>
	</combobox>	
</ISUI>