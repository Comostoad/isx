<?xml version="1.0" encoding="UTF-8" ?>
<ISUI>
	
	<Text Name='lblInstructions'>
		<X>10</X>
		<Y>10</Y>
		<Width>450</Width>
		<Height>40</Height>
		<Alignment>Left</Alignment>
		<Wrap />
		<Text>Below are the strings available to be modified.  Changing the text will immediatley inject your values into the Bot.</Text>
	</Text>
	
		
	<Text Name='lblCOB'>
		<X>10</X>
		<Y>55</Y>
		<Width>110</Width>
		<Height>15</Height>
		<Alignment>Left</Alignment>
		<Text>COB Announce:</Text>
	</Text>
	<Textentry Name='txtCOB'>
		<X>115</X>
		<Y>55</Y>
		<Width>325</Width>
		<Height>15</Height>
		<MaxLength>200</MaxLength>
		<OnLoad>
			declare tText string
			tText:Set[${LavishSettings[EQ2Bot].FindSet[Character].FindSet[General Settings].FindSetting[CacophonyAnnounceText]}]
			
		
			if ${tText.Equal[NULL]} ||${tText.Length} &lt;=0
			{
				This:SetText[${Script[EQ2Bot].Variable[CacophonyAnnounceText]}]
				Script[EQ2Bot].Variable[CacophonyAnnounceText]:Set[${Script[EQ2Bot].Variable[CacophonyAnnounceText]}]
			}
			else
			{
				This:SetText[${LavishSettings[EQ2Bot].FindSet[Character].FindSet[General Settings].FindSetting[CacophonyAnnounceText]}]
				Script[EQ2Bot].Variable[CacophonyAnnounceText]:Set[${LavishSettings[EQ2Bot].FindSet[Character].FindSet[General Settings].FindSetting[CacophonyAnnounceText]}]
			}
			Script[EQ2Bot].Variable[CacophonyAnnounceText]:Set[${This.Text}]
			</OnLoad>
		<OnChange>
			LavishSettings[EQ2Bot].FindSet[Character].FindSet[General Settings]:AddSetting[CacophonyAnnounceText,${This.Text}]
			Script[EQ2Bot].Variable[CacophonyAnnounceText]:Set[${This.Text}]
			Script[EQ2Bot].VariableScope.EQ2Bot:Save_Settings
		</OnChange>
	</Textentry>
	
	<Text Name='lblJoustInTrigger'>
		<X>10</X>
		<Y>75</Y>
		<Width>110</Width>
		<Height>15</Height>
		<Alignment>Left</Alignment>
		<Text>Joust IN Trigger:</Text>
	</Text>
	<Textentry Name='txtJoustInTrigger'>
		<X>115</X>
		<Y>75</Y>
		<Width>325</Width>
		<Height>15</Height>
		<MaxLength>200</MaxLength>
		<OnLoad>
			
			declare tText string
			tText:Set[${LavishSettings[EQ2Bot].FindSet[Character].FindSet[General Settings].FindSetting[JoustInTrigger]}]


			if ${tText.Equal[NULL]} ||${tText.Length} &lt;=0
			{
				This:SetText[${Script[EQ2Bot].Variable[InTrigger]}]
				Script[EQ2Bot].Variable[InTrigger]:Set[${Script[EQ2Bot].Variable[InTrigger]}]
			}
			else
			{
				This:SetText[${LavishSettings[EQ2Bot].FindSet[Character].FindSet[General Settings].FindSetting[JoustInTrigger]}]
				Script[EQ2Bot].Variable[InTrigger]:Set[${LavishSettings[EQ2Bot].FindSet[Character].FindSet[General Settings].FindSetting[JoustInTrigger]}]
			}
			Script[EQ2Bot].Variable[InTrigger]:Set[${This.Text}]
			</OnLoad>
		<OnChange>
			LavishSettings[EQ2Bot].FindSet[Character].FindSet[General Settings]:AddSetting[JoustInTrigger,${This.Text}]
			Script[EQ2Bot].VariableScope.EQ2Bot:Save_Settings
			Script[EQ2Bot].Variable[InTrigger]:Set[${This.Text}]
		</OnChange>
	</Textentry>
	
	<Text Name='lblJoustOutTrigger'>
		<X>10</X>
		<Y>95</Y>
		<Width>110</Width>
		<Height>15</Height>
		<Alignment>Left</Alignment>
		<Text>Joust OUT Trigger:</Text>
	</Text>
	<Textentry Name='txtJoustOutTrigger'>
		<X>115</X>
		<Y>95</Y>
		<Width>325</Width>
		<Height>15</Height>
		<MaxLength>200</MaxLength>
		<OnLoad>
			declare tText string
			tText:Set[${LavishSettings[EQ2Bot].FindSet[Character].FindSet[General Settings].FindSetting[JoustOutTrigger]}]
			
			if ${tText.Equal[NULL]} ||${tText.Length} &lt;=0
			{
				This:SetText[${Script[EQ2Bot].Variable[OutTrigger]}]
				Script[EQ2Bot].Variable[OutTrigger]:Set[${Script[EQ2Bot].Variable[OutTrigger]}]
			}
			else
			{
				This:SetText[${LavishSettings[EQ2Bot].FindSet[Character].FindSet[General Settings].FindSetting[JoustOutTrigger]}]
				Script[EQ2Bot].Variable[OutTrigger]:Set[${LavishSettings[EQ2Bot].FindSet[Character].FindSet[General Settings].FindSetting[JoustOutTrigger]}]
			}
			Script[EQ2Bot].Variable[OutTrigger]:Set[${This.Text}]
		</OnLoad>
		<OnChange>
			LavishSettings[EQ2Bot].FindSet[Character].FindSet[General Settings]:AddSetting[JoustOutTrigger,${This.Text}]
			Script[EQ2Bot].VariableScope.EQ2Bot:Save_Settings
			Script[EQ2Bot].Variable[OutTrigger]:Set[${This.Text}]
		</OnChange>
	</Textentry>
	
	<Text Name='lblBDTrigger'>
		<X>10</X>
		<Y>115</Y>
		<Width>110</Width>
		<Height>15</Height>
		<Alignment>Left</Alignment>
		<Text>Bladedance Trigger:</Text>
	</Text>
	<Textentry Name='txtBDTrigger'>
		<X>115</X>
		<Y>115</Y>
		<Width>325</Width>
		<Height>15</Height>
		<MaxLength>200</MaxLength>
		<OnLoad>
			declare tText string
			tText:Set[${LavishSettings[EQ2Bot].FindSet[Character].FindSet[General Settings].FindSetting[BladedanceTrigger]}]
			
			if ${tText.Equal[NULL]} ||${tText.Length} &lt;=0
			{
				This:SetText[${Script[EQ2Bot].Variable[BDTrigger]}]
				Script[EQ2Bot].Variable[BDTrigger]:Set[${Script[EQ2Bot].Variable[BDTrigger]}]
			}
			else
			{
				This:SetText[${LavishSettings[EQ2Bot].FindSet[Character].FindSet[General Settings].FindSetting[BladedanceTrigger]}]
				Script[EQ2Bot].Variable[BDTrigger]:Set[${LavishSettings[EQ2Bot].FindSet[Character].FindSet[General Settings].FindSetting[BladedanceTrigger]}]
			}
			Script[EQ2Bot].Variable[BDTrigger]:Set[${This.Text}]
			</OnLoad>
		<OnChange>
			LavishSettings[EQ2Bot].FindSet[Character].FindSet[General Settings]:AddSetting[BladedanceTrigger,${This.Text}]
			Script[EQ2Bot].VariableScope.EQ2Bot:Save_Settings
			Script[EQ2Bot].Variable[BDTrigger]:Set[${This.Text}]
		</OnChange>
	</Textentry>
	
	<Text Name='lblBDAnnounce'>
		<X>10</X>
		<Y>135</Y>
		<Width>110</Width>
		<Height>15</Height>
		<Alignment>Left</Alignment>
		<Text>Bladedance Annouce:</Text>
	</Text>
	<Textentry Name='txtBDAnnounce'>
		<X>115</X>
		<Y>135</Y>
		<Width>325</Width>
		<Height>15</Height>
		<MaxLength>200</MaxLength>
		<OnLoad>
			declare tText string
			tText:Set[${LavishSettings[EQ2Bot].FindSet[Character].FindSet[General Settings].FindSetting[BladedanceAnnouceText]}]
			
			if ${tText.Equal[NULL]} ||${tText.Length} &lt;=0
			{
				This:SetText[${Script[EQ2Bot].Variable[BladeDanceAnnounceText]}]
				Script[EQ2Bot].Variable[BladeDanceAnnounceText]:Set[${Script[EQ2Bot].Variable[BladeDanceAnnounceText]}]
			}
			else
			{
				This:SetText[${LavishSettings[EQ2Bot].FindSet[Character].FindSet[General Settings].FindSetting[BladedanceAnnouceText]}]
				Script[EQ2Bot].Variable[BladeDanceAnnounceText]:Set[${LavishSettings[EQ2Bot].FindSet[Character].FindSet[General Settings].FindSetting[BladedanceAnnouceText]}]
			}
			Script[EQ2Bot].Variable[BladeDanceAnnounceText]:Set[${This.Text}]
			</OnLoad>
		<OnChange>
			LavishSettings[EQ2Bot].FindSet[Character].FindSet[General Settings]:AddSetting[BladedanceAnnouceText,${This.Text}]
			Script[EQ2Bot].VariableScope.EQ2Bot:Save_Settings
			Script[EQ2Bot].Variable[BladeDanceAnnounceText]:Set[${This.Text}]
			
		</OnChange>
	</Textentry>

	<Text Name='lblGravitas'>
		<X>10</X>
		<Y>155</Y>
		<Width>110</Width>
		<Height>15</Height>
		<Alignment>Left</Alignment>
		<Text>Gravitas Announce:</Text>
	</Text>
	<Textentry Name='txtGravitas'>
		<X>115</X>
		<Y>155</Y>
		<Width>325</Width>
		<Height>15</Height>
		<MaxLength>200</MaxLength>
		<OnLoad>
			declare tText string
			tText:Set[${LavishSettings[EQ2Bot].FindSet[Character].FindSet[General Settings].FindSetting[GravitasAnnounceText]}]
			
		
			if ${tText.Equal[NULL]} ||${tText.Length} &lt;=0
			{
				This:SetText[${Script[EQ2Bot].Variable[GravitasAnnounceText]}]
				Script[EQ2Bot].Variable[GravitasAnnounceText]:Set[${Script[EQ2Bot].Variable[GravitasAnnounceText]}]
			}
			else
			{
				This:SetText[${LavishSettings[EQ2Bot].FindSet[Character].FindSet[General Settings].FindSetting[GravitasAnnounceText]}]
				Script[EQ2Bot].Variable[GravitasAnnounceText]:Set[${LavishSettings[EQ2Bot].FindSet[Character].FindSet[General Settings].FindSetting[GravitasAnnounceText]}]
			}
			Script[EQ2Bot].Variable[GravitasAnnounceText]:Set[${This.Text}]
			</OnLoad>
		<OnChange>
			LavishSettings[EQ2Bot].FindSet[Character].FindSet[General Settings]:AddSetting[GravitasAnnounceText,${This.Text}]
			Script[EQ2Bot].Variable[GravitasAnnounceText]:Set[${This.Text}]
			Script[EQ2Bot].VariableScope.EQ2Bot:Save_Settings
		</OnChange>
	</Textentry>
	

</ISUI>
