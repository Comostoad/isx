<?xml version="1.0" encoding="UTF-8" ?>
<ISUI>
	<Commandcheckbox Name='OffenseMode' Template='EQ2.Commandcheckbox'>
		<X>5%</X>
		<Y>10</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Cast Offensive Spells</Text>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[OffenseMode]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Cast Offensive Spells",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[OffenseMode]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Cast Offensive Spells",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Cast Offensive Spells]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='Debuff Epics' Template='EQ2.Commandcheckbox'>
		<X>5%</X>
		<Y>30</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Debuff NPCs</Text>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[DebuffMode]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Cast Debuff Spells",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[DebuffMode]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Cast Debuff Spells",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Cast Debuff Spells]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='AoEMode' Template='EQ2.Commandcheckbox'>
		<X>5%</X>
		<Y>50</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Cast AoE Spells</Text>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[AoEMode]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Cast AoE Spells",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[AoEMode]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Cast AoE Spells",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Cast AoE Spells]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='CureMode' Template='EQ2.Commandcheckbox'>
		<X>5%</X>
		<Y>70</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Cast Cures</Text>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[CureMode]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Cast Cure Spells",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[CureMode]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Cast Cure Spells",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Cast Cure Spells]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='FocusedMode' Template='EQ2.Commandcheckbox'>
		<Visible>1</Visible>
		<X>5%</X>
		<Y>90</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Use Focused Healing:</Text>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[FocusedMode]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Focused Mode",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[FocusedMode]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Focused Mode",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Focused Mode]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='PreHealMode' Template='EQ2.Commandcheckbox'>
		<X>5%</X>
		<Y>110</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Cast PreHeal </Text>
		<AutoTooltip>Casts reactives out of combat</AutoTooltip>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[PreHealMode]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["PreHeal Mode",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[PreHealMode]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["PreHeal Mode",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[PreHeal Mode]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='KeepReactiveUp' Template='EQ2.Commandcheckbox'>
		<X>5%</X>
		<Y>130</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Keep Single Reactives on MT</Text>
		<AutoTooltip>keep single reactives always up on MT</AutoTooltip>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[KeepReactiveUp]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["KeepReactiveUp",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[KeepReactiveUp]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["KeepReactiveUp",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[KeepReactiveUp]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='KeepGroupReactiveUp' Template='EQ2.Commandcheckbox'>
		<X>5%</X>
		<Y>150</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Keep Group Reactives Up</Text>
		<AutoTooltip>keep group reactives always up</AutoTooltip>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[KeepGroupReactiveUp]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["KeepGroupReactiveUp",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[KeepGroupReactiveUp]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["KeepGroupReactiveUp",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[KeepGroupReactiveUp]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='PetMode' Template='EQ2.Commandcheckbox'>
		<Visible>1</Visible>
		<X>5%</X>
		<Y>170</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Use Pet</Text>
		<AutoTooltip>Use Pets</AutoTooltip>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[PetMode]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Use Pets",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[PetMode]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Use Pets",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Use Pets]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='CombatRez' Template='EQ2.Commandcheckbox'>
		<Visible>1</Visible>
		<X>5%</X>
		<Y>190</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Rez in Combat</Text>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[CombatRez]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Combat Rez",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[CombatRez]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Combat Rez",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Combat Rez]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='StartHO' Template='EQ2.Commandcheckbox'>
		<Visible>1</Visible>
		<X>5%</X>
		<Y>210</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Start HOs</Text>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[StartHO]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Start HOs",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[StartHO]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Start HOs",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Start HOs]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='MeleeMode' Template='EQ2.Commandcheckbox'>
		<Visible>1</Visible>
		<X>5%</X>
		<Y>230</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Use Melee AA's and Combat</Text>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[MeleeMode]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["MeleeMode",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[MeleeMode]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["MeleeMode",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[MeleeMode]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='BuffCourage' Template='EQ2.Commandcheckbox'>
		<X>5%</X>
		<Y>250</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Buff Group Courage</Text>
		<AutoTooltip>Buff the group Courage Spell line</AutoTooltip>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[BuffCourage]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["BuffCourage",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[BuffCourage]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["BuffCourage",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[BuffCourage]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='BuffSymbol' Template='EQ2.Commandcheckbox'>
		<X>5%</X>
		<Y>270</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Buff Group Symbol</Text>
		<AutoTooltip>Buff the group Courage Spell line</AutoTooltip>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[BuffSymbol]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["BuffSymbol",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[BuffSymbol]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["BuffSymbol",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[BuffSymbol]}</Data>
	</Commandcheckbox>
	<Commandcheckbox name='RaidHealMode' Template='EQ2.Commandcheckbox'>
		<X>200</X>
		<Y>10</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Raid Heal Enabled</Text>
		<AutoTooltip>Use Aggresive Raid Heal Strat</AutoTooltip>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[RaidHealMode]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["RaidHealMode",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[RaidHealMode]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["RaidHealMode",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[RaidHealMode]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='YaulpMode' Template='EQ2.Commandcheckbox'>
		<X>200</X>
		<Y>30</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Use Yaulp in Melee</Text>
		<AutoTooltip>Use Yaulp in Melee</AutoTooltip>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[YaulpMode]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["YaulpMode",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[YaulpMode]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["YaulpMode",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[YaulpMode]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='ccbShieldAllyMode' Template='EQ2.Commandcheckbox'>
		<Visible>1</Visible>
		<X>200</X>
		<Y>50</Y>
		<Width>80</Width>
		<Height>20</Height>
		<Text>Buff Shield Ally:</Text>
		<AutoTooltip>Group Member for Avoidance Buff</AutoTooltip>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[ShieldAllyMode]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["ShieldAllyMode",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[ShieldAllyMode]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["ShieldAllyMode",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[ShieldAllyMode]}</Data>
	</Commandcheckbox>
	<combobox name='cbBuffShieldAllyGroupMember' Template='EQ2.Combobox'>
		<x>350</x>
		<y>50</y>
		<Width>100</width>
		<Height>20</height>
		<AutoTooltip>The Group Member to Avoidance Buff</AutoTooltip>
		<Items></items>
		<OnLoad>
			This:AddItem[${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[BuffShieldAllyGroupMember]}]
			This.ItemByValue[${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[BuffShieldAllyGroupMember]}]:Select
		</OnLoad>
		<OnSelect>
			SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set[BuffShieldAllyGroupMember,${This.SelectedItem.Text}]:Save</OnSelect>
		<OnLeftClick>
			declare tmpvar int

			This:ClearItems
			tmpvar:Set[1]
			do
			{
				if ${Me.Grouped}
				{
					if ${Me.Group[${tmpvar}].ToActor(exists)}
					{
						This:AddItem[${Me.Group[${tmpvar}].Name}:${Me.Group[${tmpvar}].ToActor.Type}]
					}
					if (${Me.Group[${tmpvar}].Class.Equal[conjuror]} || ${Me.Group[${tmpvar}].Class.Equal[necromancer]})  &amp;&amp; ${Me.Group[${tmpvar}].ToActor.Pet(exists)}
					{
						This:AddItem[${Me.Group[${tmpvar}].ToActor.Pet}:${Me.Group[${tmpvar}].ToActor.Pet.Type}]
					}

				}

			}
			while ${tmpvar:Inc}&lt;=5
		</OnLeftClick>
	</combobox>
	<Commandcheckbox Name='ccbHolyShieldMode' Template='EQ2.Commandcheckbox'>
		<Visible>1</Visible>
		<X>200</X>
		<Y>70</Y>
		<Width>80</Width>
		<Height>20</Height>
		<Text>Buff Holy Shield Ally:</Text>
		<AutoTooltip>Group Member for AoE Avoidance</AutoTooltip>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[HolyShieldMode]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["HolyShieldMode",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[HolyShieldMode]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["HolyShieldMode",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[HolyShieldMode]}</Data>
	</Commandcheckbox>
	<combobox name='cbHolyShieldGroupMember' Template='EQ2.Combobox'>
		<x>350</x>
		<y>70</y>
		<Width>100</width>
		<Height>20</height>
		<AutoTooltip>The Group Member to AoE Avoid Buff</AutoTooltip>
		<Items></items>
		<OnLoad>
			This:AddItem[${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[HolyShieldGroupMember]}]
			This.ItemByValue[${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[HolyShieldGroupMember]}]:Select
		</OnLoad>
		<OnSelect>
			SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set[HolyShieldGroupMember,${This.SelectedItem.Text}]:Save</OnSelect>
		<OnLeftClick>
			declare tmpvar int

			This:ClearItems
			tmpvar:Set[1]
			do
			{
				if ${Me.Grouped}
				{
					if ${Me.Group[${tmpvar}].ToActor(exists)}
					{
						This:AddItem[${Me.Group[${tmpvar}].Name}:${Me.Group[${tmpvar}].ToActor.Type}]
					}
					if (${Me.Group[${tmpvar}].Class.Equal[conjuror]} || ${Me.Group[${tmpvar}].Class.Equal[necromancer]})  &amp;&amp; ${Me.Group[${tmpvar}].ToActor.Pet(exists)}
					{
						This:AddItem[${Me.Group[${tmpvar}].ToActor.Pet}:${Me.Group[${tmpvar}].ToActor.Pet.Type}]
					}

				}

			}
			while ${tmpvar:Inc}&lt;=5
		</OnLeftClick>
	</combobox>
	<Commandcheckbox Name='ccbManaCureMode' Template='EQ2.Commandcheckbox'>
		<Visible>1</Visible>
		<X>200</X>
		<Y>90</Y>
		<Width>80</Width>
		<Height>20</Height>
		<Text>Buff Mana Cure Ally:</Text>
		<AutoTooltip>Group Member for Mana Cure AA</AutoTooltip>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[ManaCureMode]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["ManaCureMode",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[ManaCureMode]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["ManaCureMode",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[ManaCureMode]}</Data>
	</Commandcheckbox>
	<combobox name='cbManaCureGroupMember' Template='EQ2.Combobox'>
		<x>350</x>
		<y>90</y>
		<Width>100</width>
		<Height>20</height>
		<AutoTooltip>The Group Member for Mana Cure AA</AutoTooltip>
		<Items></items>
		<OnLoad>
			This:AddItem[${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[ManaCureGroupMember]}]
			This.ItemByValue[${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[ManaCureGroupMember]}]:Select
		</OnLoad>
		<OnSelect>
			SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set[ManaCureGroupMember,${This.SelectedItem.Text}]:Save</OnSelect>
		<OnLeftClick>
			declare tmpvar int

			This:ClearItems
			tmpvar:Set[1]
			do
			{
				if ${Me.Grouped}
				{
					if ${Me.Group[${tmpvar}].ToActor(exists)}
					{
						This:AddItem[${Me.Group[${tmpvar}].Name}:${Me.Group[${tmpvar}].ToActor.Type}]
					}
					if (${Me.Group[${tmpvar}].Class.Equal[conjuror]} || ${Me.Group[${tmpvar}].Class.Equal[necromancer]})  &amp;&amp; ${Me.Group[${tmpvar}].ToActor.Pet(exists)}
					{
						This:AddItem[${Me.Group[${tmpvar}].ToActor.Pet}:${Me.Group[${tmpvar}].ToActor.Pet.Type}]
					}

				}

			}
			while ${tmpvar:Inc}&lt;=5
		</OnLeftClick>
	</combobox>
	<Text Name='lblBuffGloryGroupMember' Template='EQ2.text'>
		<X>240</X>
		<Y>110</Y>
		<Width>20%</Width>
		<Height>20</Height>
		<Alignment>Left</Alignment>
		<Text>Buff Glory Proc:</Text>
		<AutoTooltip></AutoTooltip>
	</Text>
	<combobox name='cbBuffGloryGroupMember' Template='EQ2.Combobox'>
		<x>375</x>
		<y>110</y>
		<Width>100</width>
		<Height>20</height>
		<AutoTooltip>The Group Member to Glory Proc Buff</AutoTooltip>
		<Items></items>
		<OnLoad>
			This:AddItem[${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[BuffGloryGroupMember]}]
			This.ItemByValue[${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[BuffGloryGroupMember]}]:Select
		</OnLoad>
		<OnSelect>
			SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set[BuffGloryGroupMember,${This.SelectedItem.Text}]:Save</OnSelect>
		<OnLeftClick>
			declare tmpvar int

			This:ClearItems
			tmpvar:Set[1]
			This:AddItem[${Me.Name}:${Me.ToActor.Type}]
			do
			{
				if ${Me.Grouped}
				{
					if ${Me.Group[${tmpvar}].ToActor(exists)}
					{
						This:AddItem[${Me.Group[${tmpvar}].Name}:${Me.Group[${tmpvar}].ToActor.Type}]
					}
					if (${Me.Group[${tmpvar}].Class.Equal[conjuror]} || ${Me.Group[${tmpvar}].Class.Equal[necromancer]})  &amp;&amp; ${Me.Group[${tmpvar}].ToActor.Pet(exists)}
					{
						This:AddItem[${Me.Group[${tmpvar}].ToActor.Pet}:${Me.Group[${tmpvar}].ToActor.Pet.Type}]
					}

				}

			}
			while ${tmpvar:Inc}&lt;=5
		</OnLeftClick>
	</combobox>
	<Text Name='lblBuffBennedictionGroupMember' Template='EQ2.text'>
		<X>240</X>
		<Y>130</Y>
		<Width>20%</Width>
		<Height>20</Height>
		<Alignment>Left</Alignment>
		<Text>Buff Bennediction on:</Text>
		<AutoTooltip></AutoTooltip>
	</Text>
	<combobox name='cbBuffBennedictionGroupMember' Template='EQ2.Combobox'>
		<x>375</x>
		<y>130</y>
		<Width>100</width>
		<Height>20</height>
		<AutoTooltip>The Group Member to Bennediction Buff</AutoTooltip>
		<Items></items>
		<OnLoad>
			This:AddItem[${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[BuffBennedictionGroupMember]}]
			This.ItemByValue[${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[BuffBennedictionGroupMember]}]:Select
		</OnLoad>
		<OnSelect>
			SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set[BuffBennedictionGroupMember,${This.SelectedItem.Text}]:Save</OnSelect>
		<OnLeftClick>
			declare tmpvar int

			This:ClearItems
			tmpvar:Set[1]
			This:AddItem[${Me.Name}:${Me.ToActor.Type}]
			do
			{
				if ${Me.Grouped}
				{
					if ${Me.Group[${tmpvar}].ToActor(exists)}
					{
						This:AddItem[${Me.Group[${tmpvar}].Name}:${Me.Group[${tmpvar}].ToActor.Type}]
					}
					if (${Me.Group[${tmpvar}].Class.Equal[conjuror]} || ${Me.Group[${tmpvar}].Class.Equal[necromancer]})  &amp;&amp; ${Me.Group[${tmpvar}].ToActor.Pet(exists)}
					{
						This:AddItem[${Me.Group[${tmpvar}].ToActor.Pet}:${Me.Group[${tmpvar}].ToActor.Pet.Type}]
					}

				}

			}
			while ${tmpvar:Inc}&lt;=5
		</OnLeftClick>
	</combobox>
	<Text Name='lblBuffPraetorateGroupMember' Template='EQ2.text'>
		<X>240</X>
		<Y>150</Y>
		<Width>20%</Width>
		<Height>20</Height>
		<Alignment>Left</Alignment>
		<Text>Buff Praetorate on:</Text>
		<AutoTooltip></AutoTooltip>
	</Text>
	<combobox name='cbBuffPraetorateGroupMember' Template='EQ2.Combobox'>
		<x>375</x>
		<y>150</y>
		<Width>100</width>
		<Height>20</height>
		<AutoTooltip>The Group Member to Praetorate Buff</AutoTooltip>
		<Items></items>
		<OnLoad>
			This:AddItem[${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[BuffPraetorateGroupMember]}]
			This.ItemByValue[${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[BuffPraetorateGroupMember]}]:Select
		</OnLoad>
		<OnSelect>
			SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set[BuffPraetorateGroupMember,${This.SelectedItem.Text}]:Save</OnSelect>
		<OnLeftClick>
			declare tmpvar int

			This:ClearItems
			tmpvar:Set[1]
			This:AddItem[${Me.Name}:${Me.ToActor.Type}]
			do
			{
				if ${Me.Grouped}
				{
					if ${Me.Group[${tmpvar}].ToActor(exists)}
					{
						This:AddItem[${Me.Group[${tmpvar}].Name}:${Me.Group[${tmpvar}].ToActor.Type}]
					}
					if (${Me.Group[${tmpvar}].Class.Equal[conjuror]} || ${Me.Group[${tmpvar}].Class.Equal[necromancer]})  &amp;&amp; ${Me.Group[${tmpvar}].ToActor.Pet(exists)}
					{
						This:AddItem[${Me.Group[${tmpvar}].ToActor.Pet}:${Me.Group[${tmpvar}].ToActor.Pet.Type}]
					}

				}

			}
			while ${tmpvar:Inc}&lt;=5
		</OnLeftClick>
	</combobox>
	<Commandbutton name='RefreshBuffRedoubt' Template='EQ2.Commandbutton'>
		<X>300</X>
		<Y>170</Y>
		<Width>20</Width>
		<Height>20</Height>
		<Text></Text>
		<AutoTooltip>Refresh</AutoTooltip>
		<OnLeftClick>
			declare tmpvar int
			declare tmpCollection collection:string

			if ${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffRedoubt].Keys}&gt;0
			{
				tmpvar:Set[1]

				do
				{
					tmpCollection:Set["${tmpvar}",${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffRedoubt].GetString[${tmpvar}]}]
				}
				while ${tmpvar:Inc}&lt;=${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffRedoubt].Keys}

			}

			tmpvar:Set[1]

			UIElement[lbBuffRedoubt@Class@EQ2Bot Tabs@EQ2 Bot]:ClearItems


			UIElement[lbBuffRedoubt@Class@EQ2Bot Tabs@EQ2 Bot]:AddItem[${Me.Name}:${Me.ToActor.Type}]

			if ${Me.Grouped}
			{

				tmpvar:Set[1]
				do
				{
						if ${Me.Group[${tmpvar}].ToActor(exists)}
						{
							UIElement[lbBuffRedoubt@Class@EQ2Bot Tabs@EQ2 Bot]:AddItem[${Me.Group[${tmpvar}].Name}:${Me.Group[${tmpvar}].ToActor.Type}]
						}
						if (${Me.Group[${tmpvar}].Class.Equal[conjuror]} || ${Me.Group[${tmpvar}].Class.Equal[necromancer]}) &amp;&amp; ${Me.Group[${tmpvar}].ToActor.Pet(exists)}
						{
							UIElement[lbBuffRedoubt@Class@EQ2Bot Tabs@EQ2 Bot]:AddItem[${Me.Group[${tmpvar}].ToActor.Pet}:${Me.Group[${tmpvar}].ToActor.Pet.Type},FF0000FF]
						}
				}
				while ${tmpvar:Inc}&lt;=5
			}


			tmpvar:Set[1]

			if ${tmpCollection.FirstKey(exists)}
			{
				do
				{

					UIElement[lbBuffRedoubt@Class@EQ2Bot Tabs@EQ2 Bot].ItemByText[${tmpCollection.CurrentValue}]:Select

				}
				while ${tmpCollection.NextKey(exists)}
			}
		</OnLeftClick>
	</Commandbutton>
	<Text Name='lblBuffRedoubt' Template='EQ2.text'>
		<X>325</X>
		<Y>170</Y>
		<Width>150</Width>
		<Height>20</Height>
		<Alignment>Left</Alignment>
		<Text>Buff Redoubt On:</Text>
		<AutoTooltip>Shift Left click to select group members to buff Redoubt on</AutoTooltip>
	</Text>
	<listbox name='lbBuffRedoubt' Template='EQ2.Listbox'>
		<x>325</x>
		<y>190</y>
		<width>150</width>
		<height>90</height>
		<SelectMultiple>1</SelectMultiple>
		<Items></items>
		<OnLoad>
			declare tmpvar int
			declare tmpCollection collection:string

			if ${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffRedoubt].Keys}&gt;0
			{
				tmpvar:Set[1]

				do
				{
					tmpCollection:Set["${tmpvar}",${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffRedoubt].GetString[${tmpvar}]}]
				}
				while ${tmpvar:Inc}&lt;=${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffRedoubt].Keys}

			}

			tmpvar:Set[1]

			UIElement[lbBuffRedoubt@Class@EQ2Bot Tabs@EQ2 Bot]:ClearItems

			UIElement[lbBuffRedoubt@Class@EQ2Bot Tabs@EQ2 Bot]:AddItem[${Me.Name}:${Me.ToActor.Type}]

			if ${Me.ToActor.Pet(exists)}
			{
				UIElement[lbBuffRedoubt@Class@EQ2Bot Tabs@EQ2 Bot]:AddItem[${Me.ToActor.Pet}:${Me.ToActor.Pet.Type}, FF0000FF]
			}

			if ${Me.Grouped}
			{

				tmpvar:Set[1]
				do
				{
						if ${Me.Group[${tmpvar}].ToActor(exists)}
						{
							UIElement[lbBuffRedoubt@Class@EQ2Bot Tabs@EQ2 Bot]:AddItem[${Me.Group[${tmpvar}].Name}:${Me.Group[${tmpvar}].ToActor.Type}]
						}
						if (${Me.Group[${tmpvar}].Class.Equal[conjuror]} || ${Me.Group[${tmpvar}].Class.Equal[necromancer]}) &amp;&amp; ${Me.Group[${tmpvar}].ToActor.Pet(exists)}
						{
							UIElement[lbBuffRedoubt@Class@EQ2Bot Tabs@EQ2 Bot]:AddItem[${Me.Group[${tmpvar}].ToActor.Pet}:${Me.Group[${tmpvar}].ToActor.Pet.Type},FF0000FF]
						}
				}
				while ${tmpvar:Inc}&lt;=5
			}

			tmpvar:Set[1]

			if ${tmpCollection.FirstKey(exists)}
			{
				do
				{

					UIElement[lbBuffRedoubt@Class@EQ2Bot Tabs@EQ2 Bot].ItemByText[${tmpCollection.CurrentValue}]:Select

				}
				while ${tmpCollection.NextKey(exists)}
			}
		</OnLoad>
		<OnSelect>
			declare tmpvar int
			SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffRedoubt]:Clear
			SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffRedoubt]:Save

			tmpvar:Set[1]
			if ${This.SelectedItems}&gt;0
			{
				do
				{
					SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffPower]:Set[${tmpvar},${This.SelectedItem[${tmpvar}].Text}]:Save
				}
				while ${tmpvar:Inc}&lt;=${This.SelectedItems}
			}
		</OnSelect>
		<OnDeselect>
			declare tmpvar int
			SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffRedoubt]:Clear
			SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffRedoubt]:Save

			tmpvar:Set[1]
			if ${This.SelectedItems}&gt;0
			{
				do
				{
					SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].Set[BuffRedoubt]:Set[${tmpvar},${This.SelectedItem[${tmpvar}].Text}]:Save
				}
				while ${tmpvar:Inc}&lt;=${This.SelectedItems}
			}
		</OnDeselect>
		<OnLeftClick></OnLeftClick>
	</listbox>
</ISUI>