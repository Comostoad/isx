<?xml version="1.0" encoding="UTF-8" ?>
<ISUI>
	<Commandcheckbox Name='OffenseMode' Template='EQ2.Commandcheckbox'>
		<X>5%</X>
		<Y>10</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Set up Offensive for group dps</Text>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[OffenseMode]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Cast Offensive Spells",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[OffenseMode]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Cast Offensive Spells",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Cast Offensive Spells]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='HurricaneMode' Template='EQ2.Commandcheckbox'>
		<X>5%</X>
		<Y>30</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Use Hurricane Buff</Text>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[HurricaneMode]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Use Hurricane",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[HurricaneMode]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Use Hurricane",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Use Hurricane]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='AoEMode' Template='EQ2.Commandcheckbox'>
		<X>5%</X>
		<Y>50</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Cast PBAoEs</Text>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[AoEMode]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Cast AoE Spells",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[AoEMode]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Cast AoE Spells",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Cast AoE Spells]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='SnareMode' Template='EQ2.Commandcheckbox'>
		<X>5%</X>
		<Y>70</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Keep Mobs Snared</Text>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[SnareMode]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Cast Snares",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[SnareMode]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Cast Snares",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Cast Snares]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='TankMode' Template='EQ2.Commandcheckbox'>
		<X>5%</X>
		<Y>90</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Try to be a group Tank</Text>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[TankMode]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Try to Tank",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[TankMode]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Try to Tank",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Try to Tank]}</Data>
	</Commandcheckbox>
	<Text Name='lblBuffHateGroupMember' Template='EQ2.text'>
		<X>5%</X>
		<Y>110</Y>
		<Width>20%</Width>
		<Height>20</Height>
		<Alignment>Left</Alignment>
		<Text>Buff Hate On:</Text>
		<AutoTooltip></AutoTooltip>
	</Text>
	<combobox name='cbBuffHateGroupMember' Template='EQ2.Combobox'>
		<x>15%</x>
		<y>110</y>
		<Width>100</width>
		<Height>20</height>
		<AutoTooltip>The Group Member to Hate Buff</AutoTooltip>
		<Items></items>
		<OnLoad>
			This:AddItem[${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[BuffHateGroupMember]}]
			This.ItemByValue[${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[BuffHateGroupMember]}]:Select
		</OnLoad>
		<OnSelect>
			SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set[BuffHateGroupMember,${This.SelectedItem.Text}]:Save</OnSelect>
		<OnLeftClick>
			declare tmpvar int

			This:ClearItems
			tmpvar:Set[1]
			This:AddItem[""]
			if ${Me.ToActor.Pet(exists)}
			{
				This:AddItem[${Me.ToActor.Pet.Name}:${Me.ToActor.Pet.Type}]
			}
			do
			{
				if ${Me.Grouped}
				{
					if ${Me.Group[${tmpvar}].ToActor(exists)}
					{
						This:AddItem[${Me.Group[${tmpvar}].Name}:${Me.Group[${tmpvar}].ToActor.Type}]
					}
					if (${Me.Group[${tmpvar}].Class.Equal[conjuror]} || ${Me.Group[${tmpvar}].Class.Equal[necromancer]})  &amp;&amp; ${Me.Group[${tmpvar}].ToActor.Pet(exists)}
					{
						This:AddItem[${Me.Group[${tmpvar}].ToActor.Pet}:${Me.Group[${tmpvar}].ToActor.Pet.Type}]
					}

				}

			}
			while ${tmpvar:Inc}&lt;=5
		</OnLeftClick>
	</combobox>

	<Commandcheckbox Name='BuffLunge' Template='EQ2.Commandcheckbox'>
		<X>5%</X>
		<Y>130</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Buff Lunge Reversal</Text>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[BuffLunge]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Buff Lunge Reversal",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[BuffLunge]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Buff Lunge Reversal",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Buff Lunge Reversal]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='MaintainPoison' Template='EQ2.Commandcheckbox'>
		<X>5%</X>
		<Y>150</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Maintains Poisons (Caustic, Enfeebling, Bliss) Edit Class File to Select others...</Text>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[MaintainPoison]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["MaintainPoison",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[MaintainPoison]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["MaintainPoison",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[MaintainPoison]}</Data>
	</Commandcheckbox>
	<Text Name='lblMainWeapon' Template='EQ2.text'>
		<X>5%</X>
		<Y>170</Y>
		<Width>20%</Width>
		<Height>20</Height>
		<Alignment>Left</Alignment>
		<Text>Main Hand:</Text>
		<AutoTooltip>Main Hand weapon to equip when not using an AA weapon</AutoTooltip>
	</Text>
	<combobox name='cbMainWeapon' Template='EQ2.Combobox'>
		<x>100</x>
		<y>170</y>
		<width>40%</width>
		<height>20</height>
		<OnLeftClick>
			declare Counter int
			Counter:Set[1]
			This:ClearItems
			Me:CreateCustomInventoryArray[nonbankonly]
			do
			{
				if ${Me.CustomInventory[${Counter}].Type.Equal[Weapon]}
				{
					This:AddItem[${Me.CustomInventory[${Counter}].Name}]
				}
			}
			while ${Counter:Inc}&lt;=${Me.CustomInventoryArraySize}
			Counter:Set[1]
			do
			{
				if ${Me.Equipment[${Counter}].Type.Equal[Weapon]}
				{
					This:AddItem[${Me.Equipment[${Counter}].Name}]
				}
			}
			while ${Counter:Inc}&lt;=22
		</OnLeftClick>
		<OnLoad>
			This:AddItem[${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[MainWeapon]}]
			This.ItemByValue[${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[MainWeapon]}]:Select
		</OnLoad>
		<OnSelect>
			Script[EQ2Bot].Variable[MainWeapon]:Set[${This.SelectedItem.Text}]
			SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set[MainWeapon,${This.SelectedItem.Text}]:Save
		</OnSelect>
	</combobox>
	<Text Name='lblOffHand' Template='EQ2.text'>
		<X>10</X>
		<Y>190</Y>
		<Width>20%</Width>
		<Height>20</Height>
		<Alignment>Left</Alignment>
		<Text>Off Hand:</Text>
		<AutoTooltip>Off hand item to equip when not using an AA off hand item</AutoTooltip>
	</Text>
	<combobox name='cbOffHand' Template='EQ2.Combobox'>
		<x>100</x>
		<y>190</y>
		<width>40%</width>
		<height>20</height>
		<AutoTooltip>Off hand item to equip when not using an AA off hand item</AutoTooltip>
		<OnLeftClick>
			declare Counter int
			Counter:Set[1]
			This:ClearItems
			Me:CreateCustomInventoryArray[nonbankonly]
			This:AddItem[""]
			do
			{
				if ${Me.CustomInventory[${Counter}].Type.Equal[Shield]} || ${Me.CustomInventory[${Counter}].Type.Equal[Weapon]}
				{
					This:AddItem["${Me.CustomInventory[${Counter}].Name}"]
				}
			}
			while ${Counter:Inc}&lt;=${Me.CustomInventoryArraySize}
			Counter:Set[1]
			do
			{
				if ${Me.Equipment[${Counter}].Type.Equal[Shield]} || ${Me.Equipment[${Counter}].Type.Equal[Weapon]}
				{
					This:AddItem["${Me.Equipment[${Counter}].Name}"]
				}
			}
			while ${Counter:Inc}&lt;=22
		</OnLeftClick>
		<OnLoad>
			This:AddItem["${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[OffHand]}"]
			This.ItemByValue[${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[OffHand]}]:Select
		</OnLoad>
		<OnSelect>
			Script[EQ2Bot].Variable[OffHand]:Set[${This.SelectedItem.Text}]
			SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set[OffHand,"${This.SelectedItem.Text}"]:Save
		</OnSelect>
	</combobox>
	<Text Name='lblDagger' Template='EQ2.text'>
		<X>5%</X>
		<Y>210</Y>
		<Width>20%</Width>
		<Height>20</Height>
		<Alignment>Left</Alignment>
		<Text>AA Dagger:</Text>
		<AutoTooltip>Weapon to use during Dagger required AA skills</AutoTooltip>
	</Text>
	<combobox name='cbDagger' Template='EQ2.Combobox'>
		<x>100</x>
		<y>210</y>
		<width>40%</width>
		<height>20</height>
		<OnLeftClick>
			declare Counter int
			Counter:Set[1]
			This:ClearItems
			Me:CreateCustomInventoryArray[nonbankonly]
			do
			{
				if ${Me.CustomInventory[${Counter}].SubType.Equal[Dagger]}
				{
					This:AddItem[${Me.CustomInventory[${Counter}].Name}]
				}
			}
			while ${Counter:Inc}&lt;=${Me.CustomInventoryArraySize}
			Counter:Set[1]
			do
			{
				if ${Me.Equipment[${Counter}].SubType.Equal[Dagger]}
				{
					This:AddItem[${Me.Equipment[${Counter}].Name}]
				}
			}
			while ${Counter:Inc}&lt;=22
		</OnLeftClick>
		<OnLoad>
			This:AddItem[${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Dagger]}]
			This.ItemByValue[${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Dagger]}]:Select
		</OnLoad>
		<OnSelect>
			Script[EQ2Bot].Variable[WeaponDagger]:Set[${This.SelectedItem.Text}]
			SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set[Dagger,${This.SelectedItem.Text}]:Save
		</OnSelect>
	</combobox>
	<Text Name='lblSword' Template='EQ2.text'>
		<X>5%</X>
		<Y>230</Y>
		<Width>20%</Width>
		<Height>20</Height>
		<Alignment>Left</Alignment>
		<Text>AA Sword:</Text>
		<AutoTooltip>Weapon to use during Sword required AA skills</AutoTooltip>
	</Text>
	<combobox name='cbSword' Template='EQ2.Combobox'>
		<x>100</x>
		<y>230</y>
		<width>30%</width>
		<height>20</height>
		<OnLeftClick>
			declare Counter int
			Counter:Set[1]
			This:ClearItems
			Me:CreateCustomInventoryArray[nonbankonly]
			do
			{
				if ${Me.CustomInventory[${Counter}].SubType.Equal[Sword]}
				{
					This:AddItem[${Me.CustomInventory[${Counter}].Name}]
				}
			}
			while ${Counter:Inc}&lt;=${Me.CustomInventoryArraySize}
			Counter:Set[1]
			do
			{
				if ${Me.Equipment[${Counter}].SubType.Equal[Sword]}
				{
					This:AddItem[${Me.Equipment[${Counter}].Name}]
				}
			}
			while ${Counter:Inc}&lt;=22
		</OnLeftClick>
		<OnLoad>
			This:AddItem[${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Sword]}]
			This.ItemByValue[${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Sword]}]:Select
		</OnLoad>
		<OnSelect>
			Script[EQ2Bot].Variable[WeaponSword]:Set[${This.SelectedItem.Text}]
			SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set[Sword,${This.SelectedItem.Text}]:Save
		</OnSelect>
	</combobox>
	<Text Name='lblRapier' Template='EQ2.text'>
		<X>5%</X>
		<Y>250</Y>
		<Width>20%</Width>
		<Height>20</Height>
		<Alignment>Left</Alignment>
		<Text>AA Rapier:</Text>
		<AutoTooltip>Weapon to use during Rapier required AA skills</AutoTooltip>
	</Text>
	<combobox name='cbRapier' Template='EQ2.Combobox'>
		<x>100</x>
		<y>250</y>
		<width>30%</width>
		<height>20</height>
		<OnLeftClick>
			declare Counter int
			Counter:Set[1]
			This:ClearItems
			Me:CreateCustomInventoryArray[nonbankonly]
			do
			{
				if ${Me.CustomInventory[${Counter}].SubType.Equal[Rapier]}
				{
					This:AddItem[${Me.CustomInventory[${Counter}].Name}]
				}
			}
			while ${Counter:Inc}&lt;=${Me.CustomInventoryArraySize}
			Counter:Set[1]
			do
			{
				if ${Me.Equipment[${Counter}].SubType.Equal[Rapier]}
				{
					This:AddItem[${Me.Equipment[${Counter}].Name}]
				}
			}
			while ${Counter:Inc}&lt;=22
		</OnLeftClick>
		<OnLoad>
			This:AddItem[${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Rapier]}]
			This.ItemByValue[${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Rapier]}]:Select
		</OnLoad>
		<OnSelect>
			Script[EQ2Bot].Variable[WeaponRapier]:Set[${This.SelectedItem.Text}]
			SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set[Rapier,${This.SelectedItem.Text}]:Save
		</OnSelect>
	</combobox>
	<Commandcheckbox Name='StartHO' Template='EQ2.Commandcheckbox'>
		<Visible>1</Visible>
		<X>375</X>
		<Y>100</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Innitiate HO's</Text>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[StartHO]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Start HOs",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[StartHO]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Start HOs",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Start HOs]}</Data>
	</Commandcheckbox>
</ISUI>