<?xml version="1.0" encoding="UTF-8"?>
<ISUI>
	<template name='My.window.TitleBar'>
    		<Border>1</Border>
		<x>3</x>
    		<BorderColor>FF3300FF</BorderColor>
    		<Width>r6</Width>
		<Height>26</Height>
		<Texture Template='EQ2.window.TitleBar.Texture' />
		<Children>
			<Text Name='Title' template='EQ2.window.TitleBar.title' />
			<Button Name='Minimize' template='EQ2.window.TitleBar.Minimize'>
			</Button>
			<Button Name='Maximize' template='EQ2.window.TitleBar.Maximize'>
			</Button>
			<commandbutton name='Custom Close Button' Template='EQ2.Window.TitleBar.Close'>
				<Command>Script[goharvest]:End</Command>
			</commandbutton>
		</Children>
	</template>
	<template name='My.window'>
		<Border>1</Border>
		<Resizable>0</Resizable>
		<CloseButton />
		<MinimizeButton />
		<MaximizeButton />
		<TitleBar template='My.window.TitleBar' />
 		<OffsetTitleBarHeight />
		<Client template='EQ2.window.Client' />
		<StorePosition>1</StorePosition>
	</template>
	<!-- Main Window -->
	<Window Name='GoHarvest' template='My.window'>
	<X>5%</X>
	<Y>10%</Y>
	<Width>200</Width>
	<Height>300</Height>
	<Client Template='EQ2.Window.Client'>
		<Y>20</Y>
	</Client>
	<StorePosition>1</StorePosition>
	<Title>GoHarvest</Title>
	<TitleBar Template='EQ2.Window.TitleBar'>
		<X>0</X>
		<Y>0</Y>
		<Width>100%</Width>
		<Height>20</Height>
		<Children>
			<Text Name='Title' Template='EQ2.Window.TitleBar.Title' />
			<Button Name='Minimize' Template='EQ2.Window.TitleBar.Minimize'>
				<X>r35</X>
				<Width>14</Width>
				<Height>14</Height>
			</Button>
			<commandbutton name='Custom Close Button' Template='EQ2.Window.TitleBar.Close'>
				<X>r17</X>
				<Width>14</Width>
				<Height>14</Height>
				<Command>Script[goharvest]:End</Command>
			</commandbutton>
		</Children>
	</TitleBar>
	<Children>
		<Tabcontrol Name='GUITabs' Template='EQ2.Tabcontrol'>
			<X>1%</X>
			<Y>1%</Y>
			<Height>98%</Height>
			<Width>98%</Width>
			<Tabs>
				<Tab Name='Harvest'>
					<Text name='GoHarvest Options' Template='EQ2.text'>
						<X>5%</X>
						<Y>10</Y>
						<Width>80%</Width>
						<Height>20</Height>
						<Alignment>Left</Alignment>
						<Font>
							<Color>FFFFFFE5</Color>
						</Font>
						<Text>GoHarvest Options:</Text>
					</Text>
					<Text Name='AreaText' Template='EQ2.Text'>
						<X>25</X>
						<Y>30</Y>
						<Width>150</Width> 
						<Height>15</Height>
						<Text>Area to Scan :</Text>
					</Text>

					<Textentry Name='ScanArea' Template='EQ2.Textentry'>
						<X>130</X>
						<Y>30</Y>
						<Width>40</Width> 
						<Height>15</Height>
						<MaxLength>4</MaxLength>
						<OnLoad>
							UIElement[ScanArea@Harvest@GUITabs@GoHarvest]:SetText[150]
						</OnLoad>
					</Textentry>
					<checkbox Name='Ore' Template='EQ2.checkbox'>
						<X>5%</X>
						<Y>50</Y>
						<Width>20%</Width>
						<Height>20</Height>
						<Text>Ore</Text>
						<AutoTooltip>
							Harvest Metal Nodes.
						</AutoTooltip>
						<OnLoad>
							if ${Script[goharvest].VariableScope.HarvestNode[1]}
							{
								UIElement[Ore@Harvest@GUITabs@GoHarvest]:SetChecked
							}
							else
							{
								UIElement[Ore@Harvest@GUITabs@GoHarvest]:UnsetChecked
							}
						</OnLoad>
						<OnLeftClick>
							if ${UIElement[Ore@Harvest@GUITabs@GoHarvest].Checked}
							{
								Script[goharvest].VariableScope.HarvestNode[1]:Set[TRUE]
							}
							else
							{
								Script[goharvest].VariableScope.HarvestNode[1]:Set[FALSE]
							}
						</OnLeftClick>
					</checkbox>
					<checkbox Name='Gems' Template='EQ2.checkbox'>
						<X>5%</X>
						<Y>70</Y>
						<Width>20%</Width>
						<Height>20</Height>
						<Text>Gems</Text>
						<AutoTooltip>
							Harvest Gem Nodes.
						</AutoTooltip>
						<OnLoad>
							if ${Script[goharvest].VariableScope.HarvestNode[2]}
							{
								UIElement[Gems@Harvest@GUITabs@GoHarvest]:SetChecked
							}
							else
							{
								UIElement[Gems@Harvest@GUITabs@GoHarvest]:UnsetChecked
							}
						</OnLoad>
						<OnLeftClick>
							if ${UIElement[Gems@Harvest@GUITabs@GoHarvest].Checked}
							{
								Script[goharvest].VariableScope.HarvestNode[2]:Set[TRUE]
							}
							else
							{
								Script[goharvest].VariableScope.HarvestNode[2]:Set[FALSE]
							}
						</OnLeftClick>
					</checkbox>
					<checkbox Name='Wood' Template='EQ2.checkbox'>
						<X>5%</X>
						<Y>90</Y>
						<Width>20%</Width>
						<Height>20</Height>
						<Text>Wood</Text>
						<AutoTooltip>
							Harvest Wood Nodes.
						</AutoTooltip>
						<OnLoad>
							if ${Script[goharvest].VariableScope.HarvestNode[3]}
							{
								UIElement[Wood@Harvest@GUITabs@GoHarvest]:SetChecked
							}
							else
							{
								UIElement[Wood@Harvest@GUITabs@GoHarvest]:UnsetChecked
							}
						</OnLoad>
						<OnLeftClick>
							if ${UIElement[Wood@Harvest@GUITabs@GoHarvest].Checked}
							{
								Script[goharvest].VariableScope.HarvestNode[3]:Set[TRUE]
							}
							else
							{
								Script[goharvest].VariableScope.HarvestNode[3]:Set[FALSE]
							}
						</OnLeftClick>
					</checkbox>
					<checkbox Name='Root' Template='EQ2.checkbox'>
						<X>5%</X>
						<Y>110</Y>
						<Width>20%</Width>
						<Height>20</Height>
						<Text>Root</Text>
						<AutoTooltip>
							Harvest Root Nodes.
						</AutoTooltip>
						<OnLoad>
							if ${Script[goharvest].VariableScope.HarvestNode[4]}
							{
								UIElement[Root@Harvest@GUITabs@GoHarvest]:SetChecked
							}
							else
							{
								UIElement[Root@Harvest@GUITabs@GoHarvest]:UnsetChecked
							}
						</OnLoad>
						<OnLeftClick>
							if ${UIElement[Root@Harvest@GUITabs@GoHarvest].Checked}
							{
								Script[goharvest].VariableScope.HarvestNode[4]:Set[TRUE]
							}
							else
							{
								Script[goharvest].VariableScope.HarvestNode[4]:Set[FALSE]
							}
						</OnLeftClick>
					</checkbox>
					<checkbox Name='Den' Template='EQ2.checkbox'>
						<X>5%</X>
						<Y>130</Y>
						<Width>20%</Width>
						<Height>20</Height>
						<Text>Den</Text>
						<AutoTooltip>
							Harvest Dens.
						</AutoTooltip>
						<OnLoad>
							if ${Script[goharvest].VariableScope.HarvestNode[5]}
							{
								UIElement[Den@Harvest@GUITabs@GoHarvest]:SetChecked
							}
							else
							{
								UIElement[Den@Harvest@GUITabs@GoHarvest]:UnsetChecked
							}
						</OnLoad>
						<OnLeftClick>
							if ${UIElement[Den@Harvest@GUITabs@GoHarvest].Checked}
							{
								Script[goharvest].VariableScope.HarvestNode[5]:Set[TRUE]
							}
							else
							{
								Script[goharvest].VariableScope.HarvestNode[5]:Set[FALSE]
							}
						</OnLeftClick>
					</checkbox>
					<checkbox Name='Plant' Template='EQ2.checkbox'>
						<X>5%</X>
						<Y>150</Y>
						<Width>20%</Width>
						<Height>20</Height>
						<Text>Plants</Text>
						<AutoTooltip>
							Harvest Plants.
						</AutoTooltip>
						<OnLoad>
							if ${Script[goharvest].VariableScope.HarvestNode[6]}
							{
								UIElement[Plant@Harvest@GUITabs@GoHarvest]:SetChecked
							}
							else
							{
								UIElement[Plant@Harvest@GUITabs@GoHarvest]:UnsetChecked
							}
						</OnLoad>
						<OnLeftClick>
							if ${UIElement[Plant@Harvest@GUITabs@GoHarvest].Checked}
							{
								Script[goharvest].VariableScope.HarvestNode[6]:Set[TRUE]
							}
							else
							{
								Script[goharvest].VariableScope.HarvestNode[6]:Set[FALSE]
							}
						</OnLeftClick>
					</checkbox>
					<checkbox Name='Fish' Template='EQ2.checkbox'>
						<X>5%</X>
						<Y>170</Y>
						<Width>20%</Width>
						<Height>20</Height>
						<Text>Fish</Text>
						<AutoTooltip>
							Harvest Fish.
						</AutoTooltip>
						<OnLoad>
							if ${Script[goharvest].VariableScope.HarvestNode[7]}
							{
								UIElement[Fish@Harvest@GUITabs@GoHarvest]:SetChecked
							}
							else
							{
								UIElement[Fish@Harvest@GUITabs@GoHarvest]:UnsetChecked
							}
						</OnLoad>
						<OnLeftClick>
							if ${UIElement[Fish@Harvest@GUITabs@GoHarvest].Checked}
							{
								Script[goharvest].VariableScope.HarvestNode[7]:Set[TRUE]
							}
							else
							{
								Script[goharvest].VariableScope.HarvestNode[7]:Set[FALSE]
							}
						</OnLeftClick>
					</checkbox>
					<checkbox Name='Shinies' Template='EQ2.checkbox'>
						<X>5%</X>
						<Y>190</Y>
						<Width>20%</Width>
						<Height>20</Height>
						<Text>?</Text>
						<AutoTooltip>
							Harvest Shinies.
						</AutoTooltip>
						<OnLoad>
							if ${Script[goharvest].VariableScope.HarvestNode[8]}
							{
								UIElement[Shinies@Harvest@GUITabs@GoHarvest]:SetChecked
							}
							else
							{
								UIElement[Shinies@Harvest@GUITabs@GoHarvest]:UnsetChecked
							}
						</OnLoad>
						<OnLeftClick>
							if ${UIElement[Shinies@Harvest@GUITabs@GoHarvest].Checked}
							{
								Script[goharvest].VariableScope.HarvestNode[8]:Set[TRUE]
							}
							else
							{
								Script[goharvest].VariableScope.HarvestNode[8]:Set[FALSE]
							}
						</OnLeftClick>
					</checkbox>
					<checkbox Name='Pages' Template='EQ2.checkbox'>
						<X>5%</X>
						<Y>210</Y>
						<Width>20%</Width>
						<Height>20</Height>
						<Text>!</Text>
						<AutoTooltip>
							Harvest !'s.
						</AutoTooltip>
						<OnLoad>
							if ${Script[goharvest].VariableScope.HarvestNode[9]}
							{
								UIElement[Pages@Harvest@GUITabs@GoHarvest]:SetChecked
							}
							else
							{
								UIElement[Pages@Harvest@GUITabs@GoHarvest]:UnsetChecked
							}
						</OnLoad>
						<OnLeftClick>
							if ${UIElement[Pages@Harvest@GUITabs@GoHarvest].Checked}
							{
								Script[goharvest].VariableScope.HarvestNode[9]:Set[TRUE]
							}
							else
							{
								Script[goharvest].VariableScope.HarvestNode[9]:Set[FALSE]
							}
						</OnLeftClick>
					</checkbox>
					<Commandbutton name='Avoid' Template='EQ2.Commandbutton'> 
						<X>45%</X> 
						<Y>30%</Y> 
						<Width>45%</Width> 
						<Height>25</Height>
						<Text>Mark Avoid</Text>
						<OnLeftClick>
							if ${Script[goharvest].VariableScope.Mapping}
							{
								Echo Stopping mapping
								Script[goharvest].VariableScope.Mapping:Set[FALSE]
								UIElement[Avoid@Harvest@GUITabs@GoHarvest]:SetText[Mark Avoid]
							}
							else
							{
								Echo Mapping
								Script[goharvest].VariableScope.Mapping:Set[TRUE]
								UIElement[Avoid@Harvest@GUITabs@GoHarvest]:SetText[Stop Marking]
							}
						</OnLeftClick>
						<AutoTooltip>
							Mark area 2 x 2 as avoid
						</AutoTooltip>
					</Commandbutton>
					<Commandbutton name='Start Harvesting' Template='EQ2.Commandbutton'> 
						<X>20%</X> 
						<Y>90%</Y> 
						<Width>25%</Width> 
						<Height>25</Height>
						<Text>Start</Text>
						<OnLeftClick>
							if !${Script[goharvest].VariableScope.pauseharvest}
							{
								UIElement[Start Harvesting@Harvest@GUITabs@GoHarvest]:SetText[Start]
								Script[goharvest].VariableScope.pauseharvest:Set[TRUE]
							}
							else
							{
								UIElement[Start Harvesting@Harvest@GUITabs@GoHarvest]:SetText[Stop]
								Script[goharvest].VariableScope.pauseharvest:Set[FALSE]
							}
						</OnLeftClick>
						<AutoTooltip>
							Start or pause GoHarvest
						</AutoTooltip>
					</Commandbutton>
					<Commandbutton name='Exit GoHarvest' Template='EQ2.Commandbutton'> 
						<X>60%</X> 
						<Y>90%</Y> 
						<Width>25%</Width> 
						<Height>25</Height>
						<Text>Quit</Text>
						<OnLeftClick>
							if !${Script[goharvest].VariableScope.Exitgoharvest}
							{
								UIElement[Start Harvesting@Harvest@GUITabs@GoHarvest]:SetText[Closing]
								UIElement[Exit GoHarvest]:SetText[Closing]
								Script[goharvest].VariableScope.pauseharvest:Set[TRUE]
								Script[goharvest]:End
							}
						</OnLeftClick>
						<AutoTooltip>
							Stop Harvesting and Quit
							</AutoTooltip>
					</Commandbutton>
				</Tab>
			</Tabs>
		</Tabcontrol>
	</Children>
	</Window>
</ISUI>
