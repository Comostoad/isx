<?xml version="1.0" encoding="UTF-8" ?>
<ISUI>
	<Commandcheckbox Name='OffenseMode' Template='EQ2.Commandcheckbox'>
		<X>5%</X>
		<Y>10</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Use CAs and Nukes</Text>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[OffenseMode]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Cast Offensive Spells",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[OffenseMode]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Cast Offensive Spells",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Cast Offensive Spells]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='DebuffMode' Template='EQ2.Commandcheckbox'>
		<X>5%</X>
		<Y>30</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Use Encounter Debuffs</Text>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[DebuffMode]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Cast Debuff Spells",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[DebuffMode]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Cast Debuff Spells",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Cast Debuff Spells]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='AoEMode' Template='EQ2.Commandcheckbox'>
		<X>5%</X>
		<Y>50</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Cast AoEs</Text>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[AoEMode]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Cast AoE Spells",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[AoEMode]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Cast AoE Spells",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Cast AoE Spells]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='RangedAttackMode' Template='EQ2.Commandcheckbox'>
		<X>5%</X>
		<Y>90</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Use Ranged Attacks Only</Text>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[RangedAttackMode]:Set[TRUE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Use Ranged Attacks Only",TRUE]:Save
			}
			else
			{
				Script[EQ2Bot].Variable[RangedAttackMode]:Set[FALSE]
				SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set["Use Ranged Attacks Only",FALSE]:Save
			}
		</OnLeftClick>
		<Data>${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[Use Ranged Attacks Only]}</Data>
	</Commandcheckbox>
	<Text Name='lblMainWeapon' Template='EQ2.text'>
		<X>5%</X>
		<Y>130</Y>
		<Width>20%</Width>
		<Height>20</Height>
		<Alignment>Left</Alignment>
		<Text>Main Hand:</Text>
		<AutoTooltip>Main Hand weapon to equip when not using an AA weapon</AutoTooltip>
	</Text>
	<combobox name='cbMainWeapon' Template='EQ2.Combobox'>
		<x>150</x>
		<y>130</y>
		<width>30%</width>
		<height>20</height>
		<AutoTooltip>Main Hand weapon to equip when not using an AA weapon</AutoTooltip>
		<OnLeftClick>
			declare Counter int
			Counter:Set[1]
			This:ClearItems
			Me:CreateCustomInventoryArray[nonbankonly]
			do
			{
				if ${Me.CustomInventory[${Counter}].Type.Equal[Weapon]}
				{
					This:AddItem[${Me.CustomInventory[${Counter}].Name}]
				}
			}
			while ${Counter:Inc}&lt;=${Me.CustomInventoryArraySize}
			Counter:Set[1]
			do
			{
				if ${Me.Equipment[${Counter}].Type.Equal[Weapon]}
				{
					This:AddItem[${Me.Equipment[${Counter}].Name}]
				}
			}
			while ${Counter:Inc}&lt;=22
		</OnLeftClick>
		<OnLoad>
			This:AddItem[${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[MainWeapon]}]
			This.ItemByValue[${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[MainWeapon]}]:Select
		</OnLoad>
		<OnSelect>
			Script[EQ2Bot].Variable[MainWeapon]:Set[${This.SelectedItem.Text}]
			SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set[MainWeapon,${This.SelectedItem.Text}]:Save
		</OnSelect>
	</combobox>
	<Text Name='lblOffHand' Template='EQ2.text'>
		<X>5%</X>
		<Y>150</Y>
		<Width>20%</Width>
		<Height>20</Height>
		<Alignment>Left</Alignment>
		<Text>Off Hand:</Text>
		<AutoTooltip>Off hand item to equip when not using an AA off hand item</AutoTooltip>
	</Text>
	<combobox name='cbOffHand' Template='EQ2.Combobox'>
		<x>150</x>
		<y>150</y>
		<width>30%</width>
		<height>20</height>
		<AutoTooltip>Off hand item to equip when not using an AA off hand item</AutoTooltip>
		<OnLeftClick>
			declare Counter int
			Counter:Set[1]
			This:ClearItems
			Me:CreateCustomInventoryArray[nonbankonly]
			do
			{
				if ${Me.CustomInventory[${Counter}].Type.Equal[Shield]} || ${Me.CustomInventory[${Counter}].Type.Equal[Symbol]}
				{
					This:AddItem[${Me.CustomInventory[${Counter}].Name}]
				}
			}
			while ${Counter:Inc}&lt;=${Me.CustomInventoryArraySize}
			Counter:Set[1]
			do
			{
				if ${Me.Equipment[${Counter}].Type.Equal[Shield]} || ${Me.Equipment[${Counter}].Type.Equal[Symbol]}
				{
					This:AddItem[${Me.Equipment[${Counter}].Name}]
				}
			}
			while ${Counter:Inc}&lt;=22
		</OnLeftClick>
		<OnLoad>
			This:AddItem[${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[OffHand]}]
			This.ItemByValue[${SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}].GetString[OffHand]}]:Select
		</OnLoad>
		<OnSelect>
			Script[EQ2Bot].Variable[OffHand]:Set[${This.SelectedItem.Text}]
			SettingXML[Scripts/EQ2Bot/Character Config/${Me.Name}.xml].Set[${Me.SubClass}]:Set[OffHand,${This.SelectedItem.Text}]:Save
		</OnSelect>
	</combobox>
</ISUI>