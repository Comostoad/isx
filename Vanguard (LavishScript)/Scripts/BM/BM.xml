<?xml version="1.0" encoding="UTF-8"?>
<ISUI><!-- Main UI Window -->

	<!-- Font -->
	<Template Name="VG.Font">
		<Name>Tahoma</Name>
		<Size>14</Size>
		<Color>FF100000</Color>
	</Template>
	<Template Name="VG.BoldFont" Template="VG.Font">
		<Bold />
	</Template>

	<!-- Text -->
	<template name="VG.Text.Font" Template="VG.Font" />
	<template name="VG.Text">
		<Font Template="VG.Text.Font" />
		<Wrap>0</Wrap>
		<Alignment>Left</Alignment>
		<VerticalAlignment>Top</VerticalAlignment>
	</template>
	<template name="VG.BoldText">
		<Font Template="VG.BoldFont" />
		<Wrap>0</Wrap>
		<Alignment>Left</Alignment>
		<VerticalAlignment>Top</VerticalAlignment>
	</template>

	<!-- Green CheckBox -->
	<Template Name="VG.GreenCheckbox">
		<Font Template="VG.Checkbox.Font" />
		<Texture Template="VG.Checkbox.Texture" />
		<TextureHover Template="VG.Checkbox.TextureHover" />
		<TexturePressed Template="VG.Checkbox.TexturePressed" />
		<TextureChecked Template="VG.Checkbox.TextureChecked" />
		<TextureCheckedHover Template="VG.Checkbox.TextureCheckedHover" />
		<TextureCheckedPressed Template="VG.Checkbox.TextureCheckedPressed" />
	</Template>
	
	<!-- Grey CommandBox -->
	<Template Name="VG.GreyCommandButton">
		<Font Template="vg.button.Font" />
		<Texture Template="vg.button.Texture" />
		<TextureHover Template="vg.button.TextureHover" />
		<TexturePressed Template="vg.button.TexturePressed" />
	</Template>


	
	<!-- Window -->
	<Window Name="BM" Template="VG.Window">
		<StorePosition>1</StorePosition>
		<X>100</X>
		<Y>100</Y>
		<Width>310</Width>
		<Height>200</Height>
		<Client Template="VG.Window.Client"/>
		<Title>    BM - Tank=${Script[BM].Variable[Tank]}, Dist=${Pawn[${Script[BM].Variable[Tank]}].Distance.Int}</Title>
		<TitleBar Template="VG.Window.TitleBar">
			<X>0</X>
			<Y>0</Y>
			<Width>99%</Width>
			<Height>18</Height>
			<Children>
				<Text Name="Title" Template="VG.Window.TitleBar.Title"/>
				<Button Name="Minimize" Template="VG.Window.TitleBar.Minimize">
					<X>1</X>
					<Width>16</Width>
					<Height>16</Height>
				</Button>
				<CommandButton Name="Custom Quit Button" Template="VG.Window.TitleBar.Close">
					<X>r17</X>
					<Width>16</Width>
					<Height>16</Height>
					<OnLeftClick>
						Script[BM].Variable[isRunning]:Set[FALSE]
						endscript BM 
					</OnLeftClick>
				</CommandButton>
			</Children>
		</TitleBar>
		<Children>
			<TabControl Name="BMTabs" Template="VG.Tabcontrol">
				<X>5</X>
				<Y>5</Y>
				<Font>
					<Name>Times New Roman</Name>
					<Size>14</Size>
				</Font>
				<OnSelect/>
				<TabHeight>20</TabHeight>
				<TabBorder>3</TabBorder>
				<Height>81%</Height>
				<Width>97%</Width>
				<Tabs>
					<Tab Name="Main">
						<Text Name="MainText" Template="VG.BoldText">
							<X>3%</X>
							<Y>7%</Y>
							<Width>200</Width>
							<Height>20</Height>
							<Alignment>Left</Alignment>
							<Text>TOGGLES:</Text>
						</Text>
						<checkbox Name="DoBuffs" Template="VG.GreenCheckbox">
							<visible>1</visible>
							<X>3%</X>
							<Y>20%</Y>
							<Width>15</Width>
							<Height>15</Height>
							<Text>Buffs</Text>
							<OnLoad>
								if ${Script[BM].VariableScope.doBuffs}
								{
									This:SetChecked
								}
							</OnLoad>
							<OnLeftClick>
								Script[BM].VariableScope.doBuffs:Set[${This.Checked}]
							</OnLeftClick>
						</checkbox>
						<checkbox Name="DoDots" Template="VG.GreenCheckbox">
							<visible>1</visible>
							<X>35%</X>
							<Y>20%</Y>
							<Width>15</Width>
							<Height>15</Height>
							<Text>Dots</Text>
							<OnLoad>
								if ${Script[BM].VariableScope.doDots}
								{
									This:SetChecked
								}
							</OnLoad>
							<OnLeftClick>
								Script[BM].VariableScope.doDots:Set[${This.Checked}]
							</OnLeftClick>
						</checkbox>
						<checkbox Name="DoFace" Template="VG.GreenCheckbox">
							<visible>1</visible>
							<X>3%</X>
							<Y>32%</Y>
							<Width>15</Width>
							<Height>15</Height>
							<Text>Face</Text>
							<OnLoad>
								if ${Script[BM].VariableScope.doFace}
								{
									This:SetChecked
								}
							</OnLoad>
							<OnLeftClick>
								Script[BM].VariableScope.doFace:Set[${This.Checked}]
							</OnLeftClick>
						</checkbox>
						<checkbox Name="DoLoot" Template="VG.GreenCheckbox">
							<visible>1</visible>
							<X>35%</X>
							<Y>32%</Y>
							<Width>15</Width>
							<Height>15</Height>
							<Text>Loot</Text>
							<OnLoad>
								if ${Script[BM].VariableScope.doLoot}
								{
									This:SetChecked
								}
							</OnLoad>
							<OnLeftClick>
								UIElement[DoLoot@Harvest@BMTabs@BM]:ToggleChecked
								Script[BM].VariableScope.doLoot:Set[${This.Checked}]
							</OnLeftClick>
						</checkbox>
						<checkbox Name="DoEcho" Template="VG.GreenCheckbox">
							<visible>1</visible>
							<X>3%</X>
							<Y>44.5%</Y>
							<Width>15</Width>
							<Height>15</Height>
							<Text>Echo/Debug</Text>
							<OnLoad>
								if ${Script[BM].VariableScope.doEcho}
								{
									This:SetChecked
								}
							</OnLoad>
							<OnLeftClick>
								Script[BM].VariableScope.doEcho:Set[${This.Checked}]
							</OnLeftClick>
						</checkbox>
						<checkbox Name="DoEchoTime" Template="VG.GreenCheckbox">
							<visible>1</visible>
							<X>35%</X>
							<Y>44.5%</Y>
							<Width>15</Width>
							<Height>15</Height>
							<Text>Echo Time</Text>
							<OnLoad>
								if ${Script[BM].VariableScope.doEchoTIME}
								{
									This:SetChecked
								}
							</OnLoad>
							<OnLeftClick>
								Script[BM].VariableScope.doEchoTIME:Set[${This.Checked}]
							</OnLeftClick>
						</checkbox>
						<checkbox Name="DoEchoFurious" Template="VG.GreenCheckbox">
							<visible>1</visible>
							<X>65%</X>
							<Y>44.5%</Y>
							<Width>15</Width>
							<Height>15</Height>
							<Text>Echo Furious</Text>
							<OnLoad>
								if ${Script[BM].VariableScope.EchoFurious}
								{
									This:SetChecked
								}
							</OnLoad>
							<OnLeftClick>
								Script[BM].VariableScope.EchoFurious:Set[${This.Checked}]
							</OnLeftClick>
						</checkbox>
						<checkbox Name="DoArcane" Template="VG.GreenCheckbox">
							<visible>1</visible>
							<X>3%</X>
							<Y>57%</Y>
							<Width>15</Width>
							<Height>15</Height>
							<Text>Arcane</Text>
							<OnLoad>
								if ${Script[BM].VariableScope.doArcane}
								{
									This:SetChecked
								}
							</OnLoad>
							<OnLeftClick>
								Script[BM].VariableScope.doArcane:Set[${This.Checked}]
							</OnLeftClick>
						</checkbox>
						<checkbox Name="DoPhysical" Template="VG.GreenCheckbox">
							<visible>1</visible>
							<X>35%</X>
							<Y>57%</Y>
							<Width>15</Width>
							<Height>15</Height>
							<Text>Physical</Text>
							<OnLoad>
								if ${Script[BM].VariableScope.doPhysical}
								{
									This:SetChecked
								}
							</OnLoad>
							<OnLeftClick>
								Script[BM].VariableScope.doPhysical:Set[${This.Checked}]
							</OnLeftClick>
						</checkbox>
						<Text Name="StatusText" Template="VG.BoldText">
							<visible>1</visible>
							<X>.5%</X>
							<Y>76%</Y>
							<Width>275</Width>
							<Height>20</Height>
							<Text> STATUS: ${Script[BM].Variable[Status]}</Text>
						</Text>
						<Text Name="ImmuneText" Template="VG.BoldText">
							<visible>1</visible>
							<X>.5%</X>
							<Y>88%</Y>
							<Width>275</Width>
							<Height>20</Height>
							<Text> IMMUNITY: ${Script[BM].Variable[Immunity]}</Text>
						</Text>
					</Tab>
					<Tab Name="Follow">
						<Text Name="FollowText" Template="VG.BoldText">
							<X>55%</X>
							<Y>10%</Y>
							<Width>200</Width>
							<Height>20</Height>
							<Alignment>Left</Alignment>
							<Text>STOP    WALK    RUN</Text>
						</Text>
						<Text Name="FollowText1" Template="VG.BoldText">
							<X>3%</X>
							<Y>20%</Y>
							<Width>200</Width>
							<Height>20</Height>
							<Alignment>Left</Alignment>
							<Text>NOT IN COMBAT:</Text>
						</Text>
						<checkbox Name="DoFollow" Template="VG.GreenCheckbox">
							<visible>1</visible>
							<X>3%</X>
							<Y>34%</Y>
							<Width>15</Width>
							<Height>15</Height>
							<Text>Follow ${Script[BM].Variable[Tank]}</Text>
							<OnLoad>
								if ${Script[BM].VariableScope.doFollow}
								{
									This:SetChecked
								}
							</OnLoad>
							<OnLeftClick>
								Script[BM].VariableScope.doFollow:Set[${This.Checked}]
								if ${Script[BM].VariableScope.doFollow}
 
								{
									if ${Script[AutoFollow](exists)}
										endscript AutoFollow
								}
							</OnLeftClick>
							<AutoTooltip>Select to follow your Tank outside of Combat.</AutoTooltip>
						</checkbox>
						<Textentry Name="F1" Template="VG.TextEntry">
							<X>55%</X>
							<Y>31%</Y>
							<Width>10%</Width>
							<Height>18</Height>
							<Color>FFDDBB00</Color>
							<OnLoad>
								This:SetText[${Script[BM].VariableScope.FS1}]
							</OnLoad>
							<OnChange>
								if ${This.Text.Length}>0
								{
									Script[BM].VariableScope.FS1:Set[${Math.Calc[${This.Text}].Int}]
								}
							</OnChange>
						</Textentry>
						<Textentry Name="F2" Template="VG.TextEntry">
							<X>72%</X>
							<Y>31%</Y>
							<Width>10%</Width>
							<Height>18</Height>
							<Color>FFDDBB00</Color>
							<OnLoad>
								This:SetText[${Script[BM].VariableScope.FW1}]
							</OnLoad>
							<OnChange>
								if ${This.Text.Length}>0
								{
									Script[BM].VariableScope.FW1:Set[${Math.Calc[${This.Text}].Int}]
								}
							</OnChange>
						</Textentry>
						<Textentry Name="F3" Template="VG.TextEntry">
							<X>88%</X>
							<Y>31%</Y>
							<Width>10%</Width>
							<Height>18</Height>
							<Color>FFDDBB00</Color>
							<OnLoad>
								This:SetText[${Script[BM].VariableScope.FR1}]
							</OnLoad>
							<OnChange>
								if ${This.Text.Length}>0
								{
									Script[BM].VariableScope.FR1:Set[${Math.Calc[${This.Text}].Int}]
								}
							</OnChange>
						</Textentry>
						<Text Name="FollowText2" Template="VG.BoldText">
							<X>3%</X>
							<Y>58%</Y>
							<Width>200</Width>
							<Height>20</Height>
							<Alignment>Left</Alignment>
							<Text>IN COMBAT:</Text>
						</Text>
						<checkbox Name="DoMoveCloser2" Template="VG.GreenCheckbox">
							<visible>1</visible>
							<X>3%</X>
							<Y>70%</Y>
							<Width>15</Width>
							<Height>15</Height>
							<Text>Move to ${Script[BM].Variable[Tank]}</Text>
							<OnLoad>
								if ${Script[BM].VariableScope.doMoveTank}
								{
									This:SetChecked
								}
							</OnLoad>
							<OnLeftClick>
								Script[BM].VariableScope.doMoveTank:Set[${This.Checked}]
								if ${Script[BM].VariableScope.doMoveTank}
 
								{
									if ${Script[AutoFollow](exists)}
										endscript AutoFollow
								}
							</OnLeftClick>
							<AutoTooltip>Select to move closer to your target when in Combat.</AutoTooltip>
						</checkbox>
						<Textentry Name="F1a" Template="VG.TextEntry">
							<X>55%</X>
							<Y>68%</Y>
							<Width>10%</Width>
							<Height>18</Height>
							<Color>FFDDBB00</Color>
							<OnLoad>
								This:SetText[${Script[BM].VariableScope.FS2}]
							</OnLoad>
							<OnChange>
								if ${This.Text.Length}>0
								{
									Script[BM].VariableScope.FS2:Set[${Math.Calc[${This.Text}].Int}]
								}
							</OnChange>
						</Textentry>
						<Textentry Name="F2a" Template="VG.TextEntry">
							<X>72%</X>
							<Y>68%</Y>
							<Width>10%</Width>
							<Height>18</Height>
							<Color>FFDDBB00</Color>
							<OnLoad>
								This:SetText[${Script[BM].VariableScope.FW2}]
							</OnLoad>
							<OnChange>
								if ${This.Text.Length}>0
								{
									Script[BM].VariableScope.FW2:Set[${Math.Calc[${This.Text}].Int}]
								}
							</OnChange>
						</Textentry>
						<Textentry Name="F3a" Template="VG.TextEntry">
							<X>88%</X>
							<Y>68%</Y>
							<Width>10%</Width>
							<Height>18</Height>
							<Color>FFDDBB00</Color>
							<OnLoad>
								This:SetText[${Script[BM].VariableScope.FR2}]
							</OnLoad>
							<OnChange>
								if ${This.Text.Length}>0
								{
									Script[BM].VariableScope.FR2:Set[${Math.Calc[${This.Text}].Int}]
								}
							</OnChange>
						</Textentry>
						<checkbox Name="DoMoveCloser3" Template="VG.GreenCheckbox">
							<visible>1</visible>
							<X>3%</X>
							<Y>85%</Y>
							<Width>15</Width>
							<Height>15</Height>
							<Text>Move Closer to Target</Text>
							<OnLoad>
								if ${Script[BM].VariableScope.doMoveTarget}
								{
									This:SetChecked
								}
							</OnLoad>
							<OnLeftClick>
								Script[BM].VariableScope.doMoveTarget:Set[${This.Checked}]
								if ${Script[BM].VariableScope.doMoveTarget}
 
								{
									if ${Script[AutoFollow](exists)}
										endscript AutoFollow
								}
							</OnLeftClick>
							<AutoTooltip>Select to move closer to your target when in Combat.</AutoTooltip>
						</checkbox>
						<Textentry Name="F1b" Template="VG.TextEntry">
							<X>55%</X>
							<Y>83%</Y>
							<Width>10%</Width>
							<Height>18</Height>
							<Color>FFDDBB00</Color>
							<OnLoad>
								This:SetText[${Script[BM].VariableScope.FS3}]
							</OnLoad>
							<OnChange>
								if ${This.Text.Length}>0
								{
									Script[BM].VariableScope.FS3:Set[${Math.Calc[${This.Text}].Int}]
								}
							</OnChange>
						</Textentry>
						<Textentry Name="F2b" Template="VG.TextEntry">
							<X>72%</X>
							<Y>83%</Y>
							<Width>10%</Width>
							<Height>18</Height>
							<Color>FFDDBB00</Color>
							<OnLoad>
								This:SetText[${Script[BM].VariableScope.FW3}]
							</OnLoad>
							<OnChange>
								if ${This.Text.Length}>0
								{
									Script[BM].VariableScope.FW3:Set[${Math.Calc[${This.Text}].Int}]
								}
							</OnChange>
						</Textentry>
						<Textentry Name="F3b" Template="VG.TextEntry">
							<X>88%</X>
							<Y>83%</Y>
							<Width>10%</Width>
							<Height>18</Height>
							<Color>FFDDBB00</Color>
							<OnLoad>
								This:SetText[${Script[BM].VariableScope.FR3}]
							</OnLoad>
							<OnChange>
								if ${This.Text.Length}>0
								{
									Script[BM].VariableScope.FR3:Set[${Math.Calc[${This.Text}].Int}]
								}
							</OnChange>
						</Textentry>
					</Tab>
					<Tab Name="Harvest">
						<Text Name="HarvestText" Template="VG.BoldText">
							<X>3%</X>
							<Y>7%</Y>
							<Width>200</Width>
							<Height>20</Height>
							<Alignment>Left</Alignment>
							<Text>TOGGLES:</Text>
						</Text>
						<checkbox Name="DoLoot" Template="VG.GreenCheckbox">
							<visible>1</visible>
							<X>3%</X>
							<Y>20%</Y>
							<Width>15</Width>
							<Height>15</Height>
							<Text>Loot</Text>
							<OnLoad>
								if ${Script[BM].VariableScope.doLoot}
								{
									This:SetChecked
								}
							</OnLoad>
							<OnLeftClick>
								UIElement[DoLoot@Main@BMTabs@BM]:ToggleChecked
								Script[BM].VariableScope.doLoot:Set[${This.Checked}]
							</OnLeftClick>
						</checkbox>

						<checkbox Name="DoAutoHarvest" Template="VG.GreenCheckbox">
							<visible>1</visible>
							<X>32%</X>
							<Y>20%</Y>
							<Width>15</Width>
							<Height>15</Height>
							<Text>AutoHarvest</Text>
							<OnLoad>
								if ${Script[BM].VariableScope.doHarvest}
								{
									This:SetChecked
								}
							</OnLoad>
							<OnLeftClick>
								Script[BM].VariableScope.doHarvest:Set[${This.Checked}]
							</OnLeftClick>
							<AutoTooltip>Click on a resource and it will harvest it</AutoTooltip>
						</checkbox>
						<checkbox Name="DoSkin" Template="VG.GreenCheckbox">
							<visible>1</visible>
							<X>67%</X>
							<Y>20%</Y>
							<Width>15</Width>
							<Height>15</Height>
							<Text>Skin</Text>
							<OnLoad>
								if ${Script[BM].VariableScope.doSkin}
								{
									This:SetChecked
								}
							</OnLoad>
							<OnLeftClick>
								Script[BM].VariableScope.doSkin:Set[${This.Checked}]
							</OnLeftClick>
							<AutoTooltip>Scan the area for a corpse to Skin</AutoTooltip>
						</checkbox>
						<Text Name="HarvestRangeText" Template="VG.BoldText">
							<X>3%</X>
							<Y>40%</Y>
							<Width>200</Width>
							<Height>20</Height>
							<Alignment>Left</Alignment>
							<Text>Range to search for corpses:</Text>
						</Text>
						<Textentry Name="H1" Template="VG.TextEntry">
							<X>67%</X>
							<Y>38%</Y>
							<Width>10%</Width>
							<Height>18</Height>
							<Color>FFDDBB00</Color>
							<OnLoad>
								This:SetText[${Script[BM].VariableScope.HarvestRange}]
							</OnLoad>
							<OnChange>
								if ${This.Text.Length}>0
								{
									Script[BM].VariableScope.HarvestRange:Set[${Math.Calc[${This.Text}].Int}]
								}
							</OnChange>
						</Textentry>
						
					
					</Tab>
					
					<Tab Name="Class">
						<Text Name="ClassText" Template="VG.BoldText">
							<X>3%</X>
							<Y>7%</Y>
							<Width>200</Width>
							<Height>20</Height>
							<Alignment>Left</Alignment>
							<Text>TOGGLES:</Text>
						</Text>
						<checkbox Name="DoHOT" Template="VG.GreenCheckbox">
							<visible>1</visible>
							<X>3%</X>
							<Y>20%</Y>
							<Width>15</Width>
							<Height>15</Height>
							<Text>HOTs</Text>
							<OnLoad>
								if ${Script[BM].VariableScope.doHOT}
								{
									This:SetChecked
								}
							</OnLoad>
							<OnLeftClick>
								Script[BM].VariableScope.doHOT:Set[${This.Checked}]
							</OnLeftClick>
						</checkbox>
						<checkbox Name="DoHealgroup" Template="VG.GreenCheckbox">
							<visible>1</visible>
							<X>35%</X>
							<Y>20%</Y>
							<Width>15</Width>
							<Height>15</Height>
							<Text>Heal Group Only</Text>
							<OnLoad>
								if ${Script[BM].VariableScope.GroupHeal}
								{
									This:SetChecked
								}
							</OnLoad>
							<OnLeftClick>
								Script[BM].VariableScope.GroupHeal:Set[${This.Checked}]
							</OnLeftClick>
							<AutoTooltip>Must edit BM and put names of  those you want to heal only</AutoTooltip>
						</checkbox>
						<checkbox Name="DoSymbiotes" Template="VG.GreenCheckbox">
							<visible>1</visible>
							<X>3%</X>
							<Y>32%</Y>
							<Width>15</Width>
							<Height>15</Height>
							<Text>Symbiotes</Text>
							<OnLoad>
								if ${Script[BM].VariableScope.doSymbiotes}
								{
									This:SetChecked
								}
							</OnLoad>
							<OnLeftClick>
								Script[BM].VariableScope.doSymbiotes:Set[${This.Checked}]
							</OnLeftClick>
						</checkbox>
						<checkbox Name="DoDisEnchant" Template="VG.GreenCheckbox">
							<visible>1</visible>
							<X>35%</X>
							<Y>32%</Y>
							<Width>15</Width>
							<Height>15</Height>
							<Text>DisEnchant</Text>
							<OnLoad>
								if ${Script[BM].VariableScope.doDisEnchant}
								{
									This:SetChecked
								}
							</OnLoad>
							<OnLeftClick>
								Script[BM].VariableScope.doDisEnchant:Set[${This.Checked}]
							</OnLeftClick>
						</checkbox>
					</Tab>
					<Tab name='About'>
						<Text Name='About Line 1'>
							<X>0</X>
							<Y>15%</Y>
							<Width>100%</Width>
							<Height>80%</Height>
							<Alignment>Center</Alignment>
							<Font Template="VG.Text.Font">
								<Name>terminal</Name>
								<Size>16</Size>
							</Font>
							<Text>BM v${Script[BM].Variable[Version]}</Text>
						</Text>
						<Text Name='About Line 2'>
							<X>0</X>
							<Y>35%</Y>
							<Width>100%</Width>
							<Height>15</Height>
							<Alignment>Center</Alignment>
							<Font Template="VG.Text.Font">
								<Name>terminal</Name>
								<Size>12</Size>
							</Font>
							<Text>by Zandros</Text>
						</Text>
						<Text Name='About Line 3'>
							<X>0</X>
							<Y>50%</Y>
							<Width>100%</Width>
							<Height>15</Height>
							<Alignment>Center</Alignment>
							<Font Template="VG.Text.Font">
								<Name>terminal</Name>
								<Size>11</Size>
							</Font>
							<Text>Special thanks to all you programmers</Text>
						</Text>
						<Text Name='About Line 4'>
							<X>0</X>
							<Y>57%</Y>
							<Width>100%</Width>
							<Height>15</Height>
							<Alignment>Center</Alignment>
							<Font Template="VG.Text.Font">
								<Name>terminal</Name>
								<Size>11</Size>
							</Font>
							<Text>that shared your ideas and talents!</Text>
						</Text>
						<Text Name='About Line 5'>
							<X>0</X>
							<Y>75%</Y>
							<Width>100%</Width>
							<Height>15</Height>
							<Alignment>Center</Alignment>
							<Font Template="VG.Text.Font">
								<Name>terminal</Name>
								<Size>9</Size>
							</Font>
							<Text>Currently for:</Text>
						</Text>
						<Text Name='About Line 6'>
							<X>0</X>
							<Y>82%</Y>
							<Width>100%</Width>
							<Height>15</Height>
							<Alignment>Center</Alignment>
							<Font Template="VG.Text.Font">
								<Name>terminal</Name>
								<Size>9</Size>
							</Font>
							<Text>Blood Mages</Text>
						</Text>
					</Tab>
				</Tabs>
			</TabControl>
			<Commandbutton Name="Run Button" Template="VG.GreyCommandButton">
				<visible>1</visible>
				<X>3%</X>
				<Y>86%</Y>
				<Width>80</Width>
				<Height>25</Height>
				<Text>Paused</Text>
				<OnLeftClick>
					if ${Script[BM].Variable[isPaused]}
					{
						This:SetText[Running]
						Script[BM].Variable[isPaused]:Set[FALSE]
					}
					elseif !${Script[BM].Variable[isPaused]}
					{
						This:SetText[Paused]
						Script[BM].Variable[isPaused]:Set[TRUE]
					}
				</OnLeftClick>
			</Commandbutton>
			<commandbutton name="ButtonHUD" Template="VG.GreyCommandButton">
				<visible>1</visible>
				<X>47%</X>
				<Y>87%</Y>
				<Width>35</Width>
				<Height>20</Height>
				<Text>SET</Text>
				<OnLeftClick>
					if !${Me.DTarget.ID(exists)}
					{
						Pawn[me]:Target
					}
					Script[BM].Variable[Tank]:Set[${Me.DTarget.Name}]
					Script[BM].Variable[TankID]:Set[${Me.DTarget.ID}]
					Script[BM].Variable[doCheckForMembers]:Set[TRUE]
				</OnLeftClick>
			</commandbutton>
			<Commandbutton Name="Quit Button" Template="VG.GreyCommandButton">
				<visible>1</visible>
				<X>75%</X>
				<Y>86%</Y>
				<Width>65</Width>
				<Height>25</Height>
				<Text>Quit</Text>
				<OnLeftClick>
					Script[BM].Variable[isRunning]:Set[FALSE]
					endscript BM 
				</OnLeftClick>
			</Commandbutton>
		</Children>
	</Window>
</ISUI>
