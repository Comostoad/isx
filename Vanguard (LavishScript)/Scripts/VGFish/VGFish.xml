<?xml version="1.0" encoding="UTF-8"?>
	<ISUI>
		<Window Name='VGFish' Template='VG.Window'>
			<StorePosition>1</StorePosition>
			<X>14</X>
			<Y>226</Y>
			<Height>80</Height>
			<Width>160</Width>
			<Client Template="VG.Window.Client" />
			<Title>   VGFish - Fishing Assist Bot</Title>
			<TitleBar Template="VG.Window.TitleBar">
				<X>0</X>
				<Y>0</Y>
				<Width>97%</Width>
				<Height>18</Height>
				<Children>
					<Text Name="Title" Template="VG.Window.TitleBar.Title" />
					<Button Name="Minimize" Template="VG.Window.TitleBar.Minimize">
						<X>1</X>
						<Width>12</Width>
						<Height>12</Height>
					</Button>
					<CommandButton Name="Quit" Template="VG.Window.TitleBar.Close">
						<X>r17</X>
						<Width>14</Width>
						<Height>14</Height>
						<OnLeftClick>
							FishEnd
						</OnLeftClick>
					</CommandButton>
				</Children>
			</TitleBar>
			<Children>
				<TabControl Name='FishTabs' Template='VG.TabControl'>
					<X>2</X>
					<Y>2</Y>
					<Font>
						<Name>Times New Roman</Name>
						<Size>12</Size>
					</font>
					<TabHeight>13</TabHeight>
					<TabBorder>2</TabBorder>
					<Height>96%</Height>
					<Width>96%</Width>
					<OnSelect>
						switch ${This.SelectedTab}
						{
							Case Main
								UIElement[VGFish]:SetWidth[160]
								UIElement[VGFish]:SetHeight[80]
								break
							Case Combo
								UIElement[VGFish]:SetWidth[340]
								UIElement[VGFish]:SetHeight[300]
								break
							Case Options
								UIElement[VGFish]:SetWidth[340]
								UIElement[VGFish]:SetHeight[300]
								break
							Case Logs
								UIElement[VGFish]:SetWidth[420]
								UIElement[VGFish]:SetHeight[600]
								break
							Case Debug
								UIElement[VGFish]:SetWidth[340]
								UIElement[VGFish]:SetHeight[300]
								break
							Case About
								UIElement[VGFish]:SetWidth[340]
								UIElement[VGFish]:SetHeight[300]
								break
						}
					</OnSelect>
					<Tabs>
						<Tab Name='Main'>
							<Text Name='Target' Template="VG.Text">
								<X>10%</X>
								<Y>10%</Y>
								<Width>85%</Width>
								<Height>14</Height>
								<Alignment>Left</Alignment>
								<Font Template="VG.Text.Font">
									<Size>11</Size>
									<Color>FF005500</Color>
								</Font>
								<Text>Target: ${Me.Target.Name}</text>
							</Text>
							<Text Name='Combo' Template="VG.Text">
								<X>8%</X>
								<Y>35%</Y>
								<Width>85%</Width>
								<Height>14</Height>
								<Alignment>Left</Alignment>
								<Font Template="VG.Text.Font">
									<Size>11</Size>
									<Color>FFAA0000</Color>
								</Font>
								<Text>Combo: ${Script[VGFish].VariableScope.Combo}</Text>
							</Text>
							<Commandbutton Name='Run Button' Template='VG.GreenCommandButton'>
								<visible>1</visible>
								<X>30%</X>
								<Y>60%</Y>
								<Width>60</Width>
								<Height>15</Height>
								<Text>Paused</Text>
								<OnLeftClick>
									if ${Script[VGFish].Variable[Paused]}
									{
										This:SetText[Assiting]
										Script[VGFish].Variable[Paused]:Set[FALSE]
									}
									elseif !${Script[VGFish].Variable[Paused]}
									{
										This:SetText[Paused]
										Script[VGFish].Variable[Paused]:Set[TRUE]
									}
								</OnLeftClick>
							</Commandbutton>
						</Tab>
						<Tab Name='Combo'>
							<listbox Name="FishListBox" Template="VG.ListBox">
								<X>5%</X>
								<Y>3%</Y>
								<Width>90%</Width>
								<Height>50%</Height>
								<AutoSort>TRUE</AutoSort>
								<Sort>Text</Sort>
								<SelectMultiple>0</SelectMultiple>
								<OnRightClick>
									RemoveFishFromList
								</OnRightClick>
								<OnSelect>
									UpdateInput
								</OnSelect>
								<OnDeselect>
								</OnDeselect>
							</listbox>
						<CommandButton Name="AddFishButton" Template="VG.GreenCommandButton">
							<X>70%</X>
							<Y>55%</Y>
							<Height>18</Height>
							<Width>80</Width>
							<Text>Add Fish</Text>
							<OnLeftClick>
								AddFishToList
							</OnLeftClick>
						</CommandButton>
						<CommandButton Name="ClearFishList" Template="VG.RedCommandButton">
							<X>70%</X>
							<Y>89%</Y>
							<Height>18</Height>
							<Width>80</Width>
							<text>Clear List</Text>
							<OnLeftClick>
								ClearFishList
							</OnLeftClick>
						</CommandButton>
						<checkbox Name='ComboSetA' Template='VG.GreenCheckbox'>
							<visible>1</visible>
							<X>3%</X>
							<Y>62%</Y>
							<Width>15</Width>
							<Height>20</Height>
							<Text>Combo Set A</Text>
							<Color>FFDDBB00</Color>
							<OnLoad>
								if ${Script[VGFish].VariableScope.ComboSetA}
								{
									UIElement[ComboSetA@combo@FishTabs@VGFish]:SetChecked
									UIElement[ComboSetB@combo@FishTabs@VGFish]:UnsetChecked
									UIElement[ComboSetC@combo@FishTabs@VGFish]:UnsetChecked
									UIElement[ComboSetD@combo@FishTabs@VGFish]:UnsetChecked
									Script[VGFish].VariableScope.ComboSetA:Set[TRUE]
									Script[VGFish].VariableScope.ComboSetB:Set[FALSE]
									Script[VGFish].VariableScope.ComboSetC:Set[FALSE]
									Script[VGFish].VariableScope.ComboSetD:Set[FALSE]
								}
							</OnLoad>
							<OnLeftClick>
									UIElement[ComboSetA@combo@FishTabs@VGFish]:SetChecked
									UIElement[ComboSetB@combo@FishTabs@VGFish]:UnsetChecked
									UIElement[ComboSetC@combo@FishTabs@VGFish]:UnsetChecked
									UIElement[ComboSetD@combo@FishTabs@VGFish]:UnsetChecked
									Script[VGFish].VariableScope.ComboSetA:Set[TRUE]
									Script[VGFish].VariableScope.ComboSetB:Set[FALSE]
									Script[VGFish].VariableScope.ComboSetC:Set[FALSE]
									Script[VGFish].VariableScope.ComboSetD:Set[FALSE]
									Script[VGFish].VariableScope.ComboPh1:Set[u]
									Script[VGFish].VariableScope.ComboPh2:Set[r]
									Script[VGFish].VariableScope.ComboPh3:Set[d]
									Script[VGFish].VariableScope.ComboPh4:Set[l]
									PopulateFishList
							</OnLeftClick>
						</checkbox>
						<Text Name='FishNameText' Template='VG.BoldText'>
							<visible>1</visible>
							<X>40%</X>
							<Y>63%</Y>
							<Width>140</Width>
							<Height>20</Height>
							<Text>Fish Name:</Text>
						</Text>
						<Textentry Name="FishName" Template="VG.TextEntry">
							<X>63%</X>
							<Y>62%</Y>
							<Width>35%</Width>
							<Height>18</Height>
							<Color>FFDDBB00</Color>
							<OnLoad>
								This:SetText[${Script[VGFish].VariableScope.FishName}]
							</OnLoad>
							<OnChange>
								Script[VGFish].VariableScope.FishName:Set[${This.Text}]
							</OnChange>
						</Textentry>
						<checkbox Name='ComboSetB' Template='VG.GreenCheckbox'>
							<visible>1</visible>
							<X>3%</X>
							<Y>69%</Y>
							<Width>15</Width>
							<Height>20</Height>
							<Text>Combo Set B</Text>
							<Color>FFDDBB00</Color>
							<OnLoad>
								if ${Script[VGFish].VariableScope.ComboSetB}
								{
									UIElement[ComboSetA@combo@FishTabs@VGFish]:UnsetChecked
									UIElement[ComboSetB@combo@FishTabs@VGFish]:SetChecked
									UIElement[ComboSetC@combo@FishTabs@VGFish]:UnsetChecked
									UIElement[ComboSetD@combo@FishTabs@VGFish]:UnsetChecked
									Script[VGFish].VariableScope.ComboSetA:Set[FALSE]
									Script[VGFish].VariableScope.ComboSetB:Set[TRUE]
									Script[VGFish].VariableScope.ComboSetC:Set[FALSE]
									Script[VGFish].VariableScope.ComboSetD:Set[FALSE]
								}
							</OnLoad>
							<OnLeftClick>
									UIElement[ComboSetA@combo@FishTabs@VGFish]:UnsetChecked
									UIElement[ComboSetB@combo@FishTabs@VGFish]:SetChecked
									UIElement[ComboSetC@combo@FishTabs@VGFish]:UnsetChecked
									UIElement[ComboSetD@combo@FishTabs@VGFish]:UnsetChecked
									Script[VGFish].VariableScope.ComboSetA:Set[FALSE]
									Script[VGFish].VariableScope.ComboSetB:Set[TRUE]
									Script[VGFish].VariableScope.ComboSetC:Set[FALSE]
									Script[VGFish].VariableScope.ComboSetD:Set[FALSE]
									Script[VGFish].VariableScope.ComboPh1:Set[r]
									Script[VGFish].VariableScope.ComboPh2:Set[d]
									Script[VGFish].VariableScope.ComboPh3:Set[l]
									Script[VGFish].VariableScope.ComboPh4:Set[u]
									PopulateFishList
							</OnLeftClick>
						</checkbox>
						<Text Name='Combo1Text' Template='VG.BoldText'>
							<visible>1</visible>
							<X>40%</X>
							<Y>69%</Y>
							<Width>140</Width>
							<Height>20</Height>
							<Text>Combo #1:</Text>
						</Text>
						<Textentry Name="Combo1" Template="VG.TextEntry">
							<X>63%</X>
							<Y>68%</Y>
							<Width>10%</Width>
							<Height>18</Height>
							<Color>FFDDBB00</Color>
							<OnLoad>
								This:SetText[${Script[VGFish].VariableScope.Combo1}]
							</OnLoad>
							<OnChange>
								if ${This.Text.Equal[u]} || ${This.Text.Equal[d]} || ${This.Text.Equal[l]} || ${This.Text.Equal[r]} || ${This.Text.Equal[x]}
								{
									Script[VGFish].VariableScope.Combo1:Set[${This.Text}]
								}
								else
								{
									Script[VGFish].VariableScope.Combo1:Set[]
									This:SetText[${Script[VGFish].VariableScope.Combo1}]
								}
							</OnChange>
						</Textentry>
						<checkbox Name='ComboSetC' Template='VG.GreenCheckbox'>
							<visible>1</visible>
							<X>3%</X>
							<Y>76%</Y>
							<Width>15</Width>
							<Height>20</Height>
							<Text>Combo Set C</Text>
							<Color>FFDDBB00</Color>
							<OnLoad>
								if ${Script[VGFish].VariableScope.ComboSetC}
								{
									UIElement[ComboSetA@combo@FishTabs@VGFish]:UnsetChecked
									UIElement[ComboSetB@combo@FishTabs@VGFish]:UnsetChecked
									UIElement[ComboSetC@combo@FishTabs@VGFish]:SetChecked
									UIElement[ComboSetD@combo@FishTabs@VGFish]:UnsetChecked
									Script[VGFish].VariableScope.ComboSetA:Set[FALSE]
									Script[VGFish].VariableScope.ComboSetB:Set[FALSE]
									Script[VGFish].VariableScope.ComboSetC:Set[TRUE]
									Script[VGFish].VariableScope.ComboSetD:Set[FALSE]
								}
							</OnLoad>
							<OnLeftClick>
									UIElement[ComboSetA@combo@FishTabs@VGFish]:UnsetChecked
									UIElement[ComboSetB@combo@FishTabs@VGFish]:UnsetChecked
									UIElement[ComboSetC@combo@FishTabs@VGFish]:SetChecked
									UIElement[ComboSetD@combo@FishTabs@VGFish]:UnsetChecked
									Script[VGFish].VariableScope.ComboSetA:Set[FALSE]
									Script[VGFish].VariableScope.ComboSetB:Set[FALSE]
									Script[VGFish].VariableScope.ComboSetC:Set[TRUE]
									Script[VGFish].VariableScope.ComboSetD:Set[FALSE]
									Script[VGFish].VariableScope.ComboPh1:Set[d]
									Script[VGFish].VariableScope.ComboPh2:Set[l]
									Script[VGFish].VariableScope.ComboPh3:Set[u]
									Script[VGFish].VariableScope.ComboPh4:Set[r]
									PopulateFishList
							</OnLeftClick>
						</checkbox>
						<Text Name='Combo2Text' Template='VG.BoldText'>
							<visible>1</visible>
							<X>40%</X>
							<Y>76%</Y>
							<Width>140</Width>
							<Height>20</Height>
							<Text>Combo #2:</Text>
						</Text>
						<Textentry Name="Combo2" Template="VG.TextEntry">
							<X>63%</X>
							<Y>75%</Y>
							<Width>10%</Width>
							<Height>18</Height>
							<Color>FFDDBB00</Color>
							<OnLoad>
								This:SetText[${Script[VGFish].VariableScope.Combo2}]
							</OnLoad>
							<OnChange>
								if ${This.Text.Equal[u]} || ${This.Text.Equal[d]} || ${This.Text.Equal[l]} || ${This.Text.Equal[r]} || ${This.Text.Equal[x]}
								{
									Script[VGFish].VariableScope.Combo2:Set[${This.Text}]
								}
								else
								{
									Script[VGFish].VariableScope.Combo2:Set[]
									This:SetText[${Script[VGFish].VariableScope.Combo2}]
								}
							</OnChange>
						</Textentry>
						<checkbox Name='ComboSetD' Template='VG.GreenCheckbox'>
							<visible>1</visible>
							<X>3%</X>
							<Y>83%</Y>
							<Width>15</Width>
							<Height>20</Height>
							<Text>Combo Set D</Text>
							<Color>FFDDBB00</Color>
							<OnLoad>
								if ${Script[VGFish].VariableScope.ComboSetD}
								{
									UIElement[ComboSetA@combo@FishTabs@VGFish]:UnsetChecked
									UIElement[ComboSetB@combo@FishTabs@VGFish]:UnsetChecked
									UIElement[ComboSetC@combo@FishTabs@VGFish]:UnsetChecked
									UIElement[ComboSetD@combo@FishTabs@VGFish]:SetChecked
									Script[VGFish].VariableScope.ComboSetA:Set[FALSE]
									Script[VGFish].VariableScope.ComboSetB:Set[FALSE]
									Script[VGFish].VariableScope.ComboSetC:Set[FALSE]
									Script[VGFish].VariableScope.ComboSetD:Set[TRUE]
								}
							</OnLoad>
							<OnLeftClick>
									UIElement[ComboSetA@combo@FishTabs@VGFish]:UnsetChecked
									UIElement[ComboSetB@combo@FishTabs@VGFish]:UnsetChecked
									UIElement[ComboSetC@combo@FishTabs@VGFish]:UnsetChecked
									UIElement[ComboSetD@combo@FishTabs@VGFish]:SetChecked
									Script[VGFish].VariableScope.ComboSetA:Set[FALSE]
									Script[VGFish].VariableScope.ComboSetB:Set[FALSE]
									Script[VGFish].VariableScope.ComboSetC:Set[FALSE]
									Script[VGFish].VariableScope.ComboSetD:Set[TRUE]
									Script[VGFish].VariableScope.ComboPh1:Set[l]
									Script[VGFish].VariableScope.ComboPh2:Set[u]
									Script[VGFish].VariableScope.ComboPh3:Set[r]
									Script[VGFish].VariableScope.ComboPh4:Set[d]
									PopulateFishList
							</OnLeftClick>
						</checkbox>
						<Text Name='Combo3Text' Template='VG.BoldText'>
							<visible>1</visible>
							<X>40%</X>
							<Y>83%</Y>
							<Width>140</Width>
							<Height>20</Height>
							<Text>Combo #3:</Text>
						</Text>
						<Textentry Name="Combo3" Template="VG.TextEntry">
							<X>63%</X>
							<Y>82%</Y>
							<Width>10%</Width>
							<Height>18</Height>
							<Color>FFDDBB00</Color>
							<OnLoad>
								This:SetText[${Script[VGFish].VariableScope.Combo3}]
							</OnLoad>
							<OnChange>
								if ${This.Text.Equal[u]} || ${This.Text.Equal[d]} || ${This.Text.Equal[l]} || ${This.Text.Equal[r]} || ${This.Text.Equal[x]}
								{
									Script[VGFish].VariableScope.Combo3:Set[${This.Text}]
								}
								else
								{
									Script[VGFish].VariableScope.Combo3:Set[]
									This:SetText[${Script[VGFish].VariableScope.Combo3}]
								}
							</OnChange>
						</Textentry>
						<Text Name='Combo4Text' Template='VG.BoldText'>
							<visible>1</visible>
							<X>40%</X>
							<Y>90%</Y>
							<Width>140</Width>
							<Height>20</Height>
							<Text>Combo #4:</Text>
						</Text>
						<Textentry Name="Combo4" Template="VG.TextEntry">
							<X>63%</X>
							<Y>89%</Y>
							<Width>10%</Width>
							<Height>18</Height>
							<Color>FFDDBB00</Color>
							<OnLoad>
								This:SetText[${Script[VGFish].VariableScope.Combo4}]
							</OnLoad>
							<OnChange>
								if ${This.Text.Equal[u]} || ${This.Text.Equal[d]} || ${This.Text.Equal[l]} || ${This.Text.Equal[r]} || ${This.Text.Equal[x]}
								{
									Script[VGFish].VariableScope.Combo4:Set[${This.Text}]
								}
								else
								{
									Script[VGFish].VariableScope.Combo4:Set[]
									This:SetText[${Script[VGFish].VariableScope.Combo4}]
								}
							</OnChange>
						</Textentry>
					</Tab>
					<Tab Name='Options'>
						<checkbox Name='chkDoCastLine' Template='VG.GreenCheckbox'>
							<visible>1</visible>
							<X>5%</X>
							<Y>3%</Y>
							<Width>15</Width>
							<Height>20</Height>
							<Color>FFDDBB00</Color>
							<Text>Cast Line</Text>
							<Color>FFDDBB00</Color>
							<OnLoad>
								if ${Script[VGFish].VariableScope.DoCastLine}
								{
									This:SetChecked
								}
							</OnLoad>
							<OnLeftClick>
								Script[VGFish].VariableScope.DoCastLine:Set[${This.Checked}]
							</OnLeftClick>
						</checkbox>
						<checkbox Name='chkDoShortenCast' Template='VG.GreenCheckbox'>
							<visible>1</visible>
							<X>10%</X>
							<Y>13%</Y>
							<Width>15</Width>
							<Height>20</Height>
							<Text>Recast Time by total seconds</Text>
							<Color>FFDDBB00</Color>
							<OnLoad>
								if ${Script[VGFish].VariableScope.DoShortenCast}
								{
									This:SetChecked
								}
							</OnLoad>
							<OnLeftClick>
								Script[VGFish].VariableScope.DoShortenCast:Set[${This.Checked}]
							</OnLeftClick>
						</checkbox>
						<Text Name='ShortenCastDelayText' Template='VG.BoldText'>
							<visible>0</visible>
							<X>77%</X>
							<Y>13%</Y>
							<Width>140</Width>
							<Height>20</Height>
							<Text>Delay</Text>
							<Color>FFDDBB00</Color>
						</Text>
						<Textentry Name="ShortenCastDelay" Template="VG.TextEntry">
							<X>65%</X>
							<Y>13%</Y>
							<Width>10%</Width>
							<Height>18</Height>
							<Color>FFDDBB00</Color>
							<OnLoad>
								This:SetText[${Script[VGFish].VariableScope.ShortenCastDelay}]
							</OnLoad>
							<OnChange>
								if ${This.Text.Length}>0
								{
									Script[VGFish].VariableScope.ShortenCastDelay:Set[${Math.Calc[${This.Text}].Int}]
								}
							</OnChange>
						</Textentry>

						<checkbox Name='chkDoTrollLine' Template='VG.GreenCheckbox'>
							<visible>1</visible>
							<X>10%</X>
							<Y>23%</Y>
							<Width>15</Width>
							<Height>20</Height>
							<Text>Troll Line</Text>
							<Color>FFDDBB00</Color>
							<OnLoad>
								if ${Script[VGFish].VariableScope.DoTrollLine}
								{
									This:SetChecked
								}
							</OnLoad>
							<OnLeftClick>
								Script[VGFish].VariableScope.DoTrollLine:Set[${This.Checked}]
							</OnLeftClick>
						</checkbox>
						<Text Name='TrollLineTimesText' Template='VG.BoldText'>
							<visible>1</visible>
							<X>46%</X>
							<Y>23%</Y>
							<Width>140</Width>
							<Height>20</Height>
							<Text>Times</Text>
							<Color>FFDDBB00</Color>
						</Text>
						<Textentry Name="TrollLineTimes" Template="VG.TextEntry">
							<X>35%</X>
							<Y>23%</Y>
							<Width>10%</Width>
							<Height>18</Height>
							<Color>FFDDBB00</Color>
							<OnLoad>
								This:SetText[${Script[VGFish].VariableScope.TrollLineTimes}]
							</OnLoad>
							<OnChange>
								if ${This.Text.Length}>0
								{
									Script[VGFish].VariableScope.TrollLineTimes:Set[${Math.Calc[${This.Text}].Int}]
								}
							</OnChange>
						</Textentry>
						<Text Name='TrollLineWaitTimeText' Template='VG.BoldText'>
							<visible>1</visible>
							<X>76%</X>
							<Y>23%</Y>
							<Width>140</Width>
							<Height>20</Height>
							<Text>Wait Secs</Text>
							<Color>FFDDBB00</Color>
						</Text>
						<Textentry Name="TrollLineWaitTime" Template="VG.TextEntry">
							<X>65%</X>
							<Y>23%</Y>
							<Width>10%</Width>
							<Height>18</Height>
							<Color>FFDDBB00</Color>
							<OnLoad>
								This:SetText[${Script[VGFish].VariableScope.TrollLineWaitTime}]
							</OnLoad>
							<OnChange>
								if ${This.Text.Length}>0
								{
									Script[VGFish].VariableScope.TrollLineWaitTime:Set[${Math.Calc[${This.Text}].Int}]
								}
							</OnChange>
						</Textentry>
						<Text Name='ReleaseTxt' Template="VG.BoldText">
							<visible>1</visible>
							<X>4%</X>
							<Y>36%</Y>
							<Width>240</Width>
							<Height>18</Height>
							<Color>FFDDBB00</Color>
							<Text>Select what to release:</text>
						</Text>
						<checkbox Name='chkDoReleaseNone' Template='VG.GreenCheckbox'>
							<visible>1</visible>
							<X>10%</X>
							<Y>43%</Y>
							<Width>15</Width>
							<Height>20</Height>
							<Text>Nothing</Text>
							<Color>FFDDBB00</Color>
							<OnLoad>
								if ${Script[VGFish].VariableScope.DoReleaseNone}
								{
									UIElement[chkDoReleaseNone@options@FishTabs@VGFish]:SetChecked
									UIElement[chkDoReleaseUnknown@options@FishTabs@VGFish]:UnsetChecked
									UIElement[chkDoReleaseKnown@options@FishTabs@VGFish]:UnsetChecked
									Script[VGFish].VariableScope.DoReleaseNone:Set[TRUE]
									Script[VGFish].VariableScope.DoReleaseUnknown:Set[FALSE]
									Script[VGFish].VariableScope.DoReleaseKnown:Set[FALSE]
								}
							</OnLoad>
							<OnLeftClick>
									UIElement[chkDoReleaseNone@options@FishTabs@VGFish]:SetChecked
									UIElement[chkDoReleaseUnknown@options@FishTabs@VGFish]:UnsetChecked
									UIElement[chkDoReleaseKnown@options@FishTabs@VGFish]:UnsetChecked
									Script[VGFish].VariableScope.DoReleaseNone:Set[TRUE]
									Script[VGFish].VariableScope.DoReleaseUnknown:Set[FALSE]
									Script[VGFish].VariableScope.DoReleaseKnown:Set[FALSE]
							</OnLeftClick>
						</checkbox>
						<checkbox Name='chkDoReleaseUnknown' Template='VG.GreenCheckbox'>
							<visible>1</visible>
							<X>35%</X>
							<Y>43%</Y>
							<Width>15</Width>
							<Height>20</Height>
							<Text>Unknown</Text>
							<Color>FFDDBB00</Color>
							<OnLoad>
								if ${Script[VGFish].VariableScope.DoReleaseUnknown}
								{
									UIElement[chkDoReleaseNone@options@FishTabs@VGFish]:UnsetChecked
									UIElement[chkDoReleaseUnknown@options@FishTabs@VGFish]:SetChecked
									UIElement[chkDoReleaseKnown@options@FishTabs@VGFish]:UnsetChecked
									Script[VGFish].VariableScope.DoReleaseNone:Set[FALSE]
									Script[VGFish].VariableScope.DoReleaseUnknown:Set[TRUE]
									Script[VGFish].VariableScope.DoReleaseKnown:Set[FALSE]
								}
							</OnLoad>
							<OnLeftClick>
									UIElement[chkDoReleaseNone@options@FishTabs@VGFish]:UnsetChecked
									UIElement[chkDoReleaseUnknown@options@FishTabs@VGFish]:SetChecked
									UIElement[chkDoReleaseKnown@options@FishTabs@VGFish]:UnsetChecked
									Script[VGFish].VariableScope.DoReleaseNone:Set[FALSE]
									Script[VGFish].VariableScope.DoReleaseUnknown:Set[TRUE]
									Script[VGFish].VariableScope.DoReleaseKnown:Set[FALSE]
							</OnLeftClick>
						</checkbox>
						<checkbox Name='chkDoReleaseKnown' Template='VG.GreenCheckbox'>
							<visible>1</visible>
							<X>65%</X>
							<Y>43%</Y>
							<Width>15</Width>
							<Height>20</Height>
							<Text>Fish</Text>
							<Color>FFDDBB00</Color>
							<OnLoad>
								if ${Script[VGFish].VariableScope.DoReleaseKnown}
								{
									UIElement[chkDoReleaseNone@options@FishTabs@VGFish]:UnsetChecked
									UIElement[chkDoReleaseUnknown@options@FishTabs@VGFish]:UnsetChecked
									UIElement[chkDoReleaseKnown@options@FishTabs@VGFish]:SetChecked
									Script[VGFish].VariableScope.DoReleaseNone:Set[FALSE]
									Script[VGFish].VariableScope.DoReleaseUnknown:Set[FALSE]
									Script[VGFish].VariableScope.DoReleaseKnown:Set[TRUE]
								}
							</OnLoad>
							<OnLeftClick>
									UIElement[chkDoReleaseNone@options@FishTabs@VGFish]:UnsetChecked
									UIElement[chkDoReleaseUnknown@options@FishTabs@VGFish]:UnsetChecked
									UIElement[chkDoReleaseKnown@options@FishTabs@VGFish]:SetChecked
									Script[VGFish].VariableScope.DoReleaseNone:Set[FALSE]
									Script[VGFish].VariableScope.DoReleaseUnknown:Set[FALSE]
									Script[VGFish].VariableScope.DoReleaseKnown:Set[TRUE]
							</OnLeftClick>
						</checkbox>
						<checkbox Name='chkDoAutoBait' Template='VG.GreenCheckbox'>
							<visible>1</visible>
							<X>4%</X>
							<Y>53%</Y>
							<Width>15</Width>
							<Height>20</Height>
							<Text>Auto Bait</Text>
							<Color>FFDDBB00</Color>
							<OnLoad>
								if ${Script[VGFish].VariableScope.DoAutoBait}
								{
									This:SetChecked
								}
							</OnLoad>
							<OnLeftClick>
								Script[VGFish].VariableScope.DoAutoBait:Set[${This.Checked}]
							</OnLeftClick>
						</checkbox>
						<ComboBox Name="BaitComboBox" Template="VG.ComboBox">
							<X>30%</X>
							<Y>53%</Y>
							<Width>65%</Width>
							<Height>19</Height>
							<Color>FFDDBB00</Color>
							<OnLoad>
								This:AddItem[NONE]
							</OnLoad>
							<OnSelect>
								Script[VGFish].VariableScope.Bait:Set[${This.SelectedItem.Text}]
							</OnSelect>
						</ComboBox>
						<checkbox Name='chkDoFishingPole' Template='VG.GreenCheckbox'>
							<visible>1</visible>
							<X>4%</X>
							<Y>63%</Y>
							<Width>15</Width>
							<Height>20</Height>
							<Text>Equip Pole</Text>
							<Color>FFDDBB00</Color>
							<OnLoad>
								if ${Script[VGFish].VariableScope.DoFishingPole}
								{
									This:SetChecked
								}
							</OnLoad>
							<OnLeftClick>
								Script[VGFish].VariableScope.DoFishingPole:Set[${This.Checked}]
							</OnLeftClick>
						</checkbox>
						<ComboBox Name="FishingPoleComboBox" Template="VG.ComboBox">
							<X>30%</X>
							<Y>63%</Y>
							<Width>65%</Width>
							<Height>19</Height>
							<Color>FFDDBB00</Color>
							<OnLoad>
								This:AddItem[NONE]
							</OnLoad>
							<OnSelect>
								Script[VGFish].VariableScope.FishingPole:Set[${This.SelectedItem.Text}]
							</OnSelect>
						</ComboBox>
						<checkbox Name='chkDoTriggerDistance' Template='VG.GreenCheckbox'>
							<visible>1</visible>
							<X>4%</X>
							<Y>73%</Y>
							<Width>15</Width>
							<Height>20</Height>
							<Text>Overide Detect Fish Move Distance by</Text>
							<Color>FFDDBB00</Color>
							<OnLoad>
								if ${Script[VGFish].VariableScope.DoTriggerDistance}
								{
									This:SetChecked
								}
							</OnLoad>
							<OnLeftClick>
								Script[VGFish].VariableScope.DoTriggerDistance:Set[${This.Checked}]
							</OnLeftClick>
						</checkbox>
						<Textentry Name="TriggerDistanceOveride" Template="VG.TextEntry">
							<visible>1</visible>
							<X>77%</X>
							<Y>73%</Y>
							<Width>10%</Width>
							<Height>18</Height>
							<Color>FFDDBB00</Color>
							<OnLoad>
								This:SetText[${Script[VGFish].VariableScope.TriggerDistanceOveride}]
							</OnLoad>
							<OnChange>
								if ${This.Text.Length}>0
								{
									Script[VGFish].VariableScope.TriggerDistanceOveride:Set[${Math.Calc[${This.Text}].Int}]
								}
							</OnChange>
						</Textentry>
						<checkbox Name='chkDoFindFish' Template='VG.GreenCheckbox'>
							<visible>1</visible>
							<X>4%</X>
							<Y>83%</Y>
							<Width>15</Width>
							<Height>20</Height>
							<Color>FFDDBB00</Color>
							<Text>Search and face the nearest Fish</Text>
							<Color>FFDDBB00</Color>
							<OnLoad>
								if ${Script[VGFish].VariableScope.DoFindFish}
								{
									This:SetChecked
								}
							</OnLoad>
							<OnLeftClick>
								Script[VGFish].VariableScope.DoFindFish:Set[${This.Checked}]
							</OnLeftClick>
						</checkbox>
						<checkbox Name='chkDoFishHeading' Template='VG.GreenCheckbox'>
							<visible>1</visible>
							<X>4%</X>
							<Y>93%</Y>
							<Width>15</Width>
							<Height>20</Height>
							<Color>FFDDBB00</Color>
							<Text>Prefer Fish Heading over Fish Movement</Text>
							<Color>FFDDBB00</Color>
							<OnLoad>
								if ${Script[VGFish].VariableScope.DoFishHeading}
								{
									This:SetChecked
								}
							</OnLoad>
							<OnLeftClick>
								Script[VGFish].VariableScope.DoFishHeading:Set[${This.Checked}]
							</OnLeftClick>
						</checkbox>
					</Tab>
					<Tab Name='Logs'>
						<checkbox Name='chkDoDebug' Template='VG.GreenCheckbox'>
							<visible>1</visible>
							<X>8%</X>
							<Y>4%</Y>
							<Width>15</Width>
							<Height>20</Height>
							<Text>Debug</Text>
							<Color>FFDDBB00</Color>
							<OnLoad>
								if ${Script[VGFish].VariableScope.DoDebug}
								{
									This:SetChecked
								}
							</OnLoad>
							<OnLeftClick>
								Script[VGFish].VariableScope.DoDebug:Set[${This.Checked}]
							</OnLeftClick>
						</checkbox>
						<checkbox Name='chkDoLogFishMovement' Template='VG.GreenCheckbox'>
							<visible>1</visible>
							<X>8%</X>
							<Y>8%</Y>
							<Width>15</Width>
							<Height>20</Height>
							<Text>Log Fish Movements</Text>
							<Color>FFDDBB00</Color>
							<OnLoad>
								if ${Script[VGFish].VariableScope.DoLogFishMovement}
								{
									This:SetChecked
								}
							</OnLoad>
							<OnLeftClick>
								Script[VGFish].VariableScope.DoLogFishMovement:Set[${This.Checked}]
							</OnLeftClick>
						</checkbox>
						<Button Name="ClearLog" Template="VG.RedButton">
							<X>65%</X>
							<Y>3%</Y>
							<Width>90</Width>
							<Height>19</Height>
							<Text>Clear Log</Text>
							<Color>FFDDBB00</Color>
							<Alignment>Center</Alignment>
							<OnLeftClick>
								clearlog
							</OnLeftClick>
						</Button>
						<Button Name="SaveLog" Template="VG.RedButton">
							<X>65%</X>
							<Y>8%</Y>
							<Width>90</Width>
							<Height>19</Height>
							<Text>Save Log</Text>
							<Alignment>Center</Alignment>
							<Color>FFDDBB00</Color>
							<OnLeftClick>
								savelog
							</OnLeftClick>
						</Button>
						<Listbox Name="DebugListBox" Template="VG.ListBox">
							<X>5%</X>
							<Y>13%</Y>
							<Width>90%</Width>
							<Height>85%</Height>
							<Sort>None</Sort>
							<OnLoad>
							</OnLoad>
							<OnRightClick>
							</OnRightClick>
						</Listbox>
					</Tab>
					<Tab Name='Debug'>
						<Text Name='Target' Template="VG.Text">
							<X>10%</X>
							<Y>10%</Y>
							<Width>85%</Width>
							<Height>14</Height>
							<Alignment>Left</Alignment>
							<Text>Target: ${Me.Target.Name}</text>
						</Text>
						<Text Name='Distance' Template="VG.Text">
							<X>10%</X>
							<Y>20%</Y>
							<Width>85%</Width>
							<Height>14</Height>
							<Alignment>Left</Alignment>
							<Text>Target Distance: ${Me.Target.Distance}</text>
						</Text>
						<Text Name='TargetHeading' Template="VG.Text">
							<X>10%</X>
							<Y>30%</Y>
							<Width>85%</Width>
							<Height>14</Height>
							<Alignment>Left</Alignment>
							<Text>Target Heading (facing): ${Me.Target.Heading}</text>
						</Text>
						<Text Name='TargetX' Template="VG.Text">
							<X>10%</X>
							<Y>40%</Y>
							<Width>85%</Width>
							<Height>14</Height>
							<Alignment>Left</Alignment>
							<Text>TargetX: ${Me.Target.X}</text>
						</Text>
						<Text Name='TargetY' Template="VG.Text">
							<X>10%</X>
							<Y>50%</Y>
							<Width>85%</Width>
							<Height>14</Height>
							<Alignment>Left</Alignment>
							<Text>TargetY: ${Me.Target.Y}</text>
						</Text>
						<Text Name='MeHeading' Template="VG.Text">
							<X>10%</X>
							<Y>70%</Y>
							<Width>85%</Width>
							<Height>14</Height>
							<Alignment>Left</Alignment>
							<Text>Me Heading(facing): ${Me.Heading}</text>
						</Text>
						<Text Name='MeHeadingTo' Template="VG.Text">
							<X>10%</X>
							<Y>80%</Y>
							<Width>85%</Width>
							<Height>14</Height>
							<Alignment>Left</Alignment>
							<Text>Me HeadingTo(angle to face target): ${Me.Target.HeadingTo}</text>
						</Text>
					</Tab>
					<Tab Name='About'>
						<Text Name='About Title' Template='VG.Text'>
							<X>0</X>
							<Y>12%</Y>
							<Width>100%</Width>
							<Height>20</Height>
							<Alignment>Center</Alignment>
							<Font Template="VG.Window.TitleBar.Title.Font">
								<Name>terminal</Name>
								<Size>18</Size>
								<Bold />
							</Font>
							<Text>VGFish</Text>
						</Text>
						<Text Name='About By' Template='VG.Text'>
							<X>0</X>
							<Y>22%</Y>
							<Width>100%</Width>
							<Height>20</Height>
							<Alignment>Center</Alignment>
							<Font Template="VG.Window.TitleBar.Title.Font">
								<Size>15</Size>
							</Font>
							<Text>by Zandros</Text>
						</Text>
						<Text Name='About Ver' Template='VG.Text'>
							<X>0</X>
							<Y>32%</Y>
							<Width>100%</Width>
							<Height>20</Height>
							<Alignment>Center</Alignment>
							<Font Template="VG.Window.TitleBar.Title.Font">
								<Size>15</Size>
							</Font>
							<Text>Version 2.0</Text>
						</Text>
						<Text Name='About1'>
							<X>0</X>
							<Y>50%</Y>
							<Width>100%</Width>
							<Height>20</Height>
							<Alignment>Center</Alignment>
							<Font>
								<Name>terminal</Name>
								<Size>14</Size>
								<Color>FF008040</Color>
							</Font>
							<Text>Special thanks to</Text>
						</Text>
						<Text Name='About2'>
							<X>0</X>
							<Y>60%</Y>
							<Width>100%</Width>
							<Height>20</Height>
							<Alignment>Center</Alignment>
							<Font>
								<Name>terminal</Name>
								<Size>14</Size>
								<Color>FF000040</Color>
							</Font>
							<Text>MMOAddict, Sckary, and BackseatScripter</Text>
						</Text>
					</Tab>
				</Tabs>
			</TabControl>
		</Children>
	</Window>
</ISUI>
