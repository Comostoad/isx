<?xml version="1.0" encoding="UTF-8"?>
<ISUI><!-- Main UI Window -->

	<!-- Font -->
	<Template Name="VG.Font">
		<Name>Tahoma</Name>
		<Size>14</Size>
		<Color>FF100000</Color>
	</Template>
	<Template Name="VG.BoldFont" Template="VG.Font">
		<Bold />
	</Template>

	<!-- Text -->
	<template name="VG.Text.Font" Template="VG.Font" />
	<template name="VG.Text">
		<Font Template="VG.Text.Font" />
		<Wrap>0</Wrap>
		<Alignment>Left</Alignment>
		<VerticalAlignment>Top</VerticalAlignment>
	</template>
	<template name="VG.BoldText">
		<Font Template="VG.BoldFont" />
		<Wrap>0</Wrap>
		<Alignment>Left</Alignment>
		<VerticalAlignment>Top</VerticalAlignment>
	</template>

	<!-- Green CheckBox -->
	<Template Name="VG.GreenCheckbox">
		<Font Template="VG.Checkbox.Font" />
		<Texture Template="VG.Checkbox.Texture" />
		<TextureHover Template="VG.Checkbox.TextureHover" />
		<TexturePressed Template="VG.Checkbox.TexturePressed" />
		<TextureChecked Template="VG.Checkbox.TextureChecked" />
		<TextureCheckedHover Template="VG.Checkbox.TextureCheckedHover" />
		<TextureCheckedPressed Template="VG.Checkbox.TextureCheckedPressed" />
	</Template>
	
	<!-- Grey CommandBox -->
	<Template Name="VG.GreyCommandButton">
		<Font Template="vg.button.Font" />
		<Texture Template="vg.button.Texture" />
		<TextureHover Template="vg.button.TextureHover" />
		<TexturePressed Template="vg.button.TexturePressed" />
	</Template>
	
	<!-- Window Name: (VG-BM) -->
	<Window Name="VG-BM" Template="VG.Window">
		<!-- Basic Window Information -->
		<StorePosition>1</StorePosition>
		<X>100</X>
		<Y>100</Y>
		<Width>370</Width>
		<Height>300</Height>
		<Title>VG-BM</Title>
		<TitleBar Template="VG.Window.TitleBar">
			<X>0</X>
			<Y>0</Y>
			<Width>99%</Width>
			<Height>18</Height>
			<Children>
				<!-- Centered -->
				<Text Name="Title" Template="VG.Window.TitleBar.Title">
					<X>18</X>
					<Alignment>Center</Alignment>
				</Text>
				<!-- Minimize -->
				<Button Name="Minimize" Template="VG.Window.TitleBar.Minimize">
					<X>1</X>
					<Width>16</Width>
					<Height>16</Height>
				</Button>
				<!-- Close -->
				<CommandButton Name="Custom Quit Button" Template="VG.Window.TitleBar.Close">
					<X>r17</X>
					<Width>16</Width>
					<Height>16</Height>
					<OnLeftClick>
						Script[VG-BM].Variable[isRunning]:Set[FALSE]
						endscript VG-BM 
					</OnLeftClick>
				</CommandButton>
			</Children>
		</TitleBar>
		<!-- Nothing fancy for Window Client -->
		<Client Template="VG.Window.Client" />
<!--		
		<Client Template="VG.Window.Client">
			<Y>18</Y>
			<Height>r18</Height>
			<Texture Template="VG.TabControl.FrameTexture" />
		</Client>

-->		
		<Children>
			<!-- Tab: (Tabs) -->
			<TabControl Name="Tabs" Template="VG.Tabcontrol">
				<X>5</X>
				<Y>5</Y>
				<Font>
					<Name>Times New Roman</Name>
					<Size>14</Size>
				</Font>
				<OnSelect>
				</OnSelect>
				<TabHeight>20</TabHeight>
				<TabBorder>3</TabBorder>
				<Height>72%</Height>
				<Width>97%</Width>
				<Tabs>

					<!-- Tab Name: (Main) -->
					<Tab Name="Main">
						<Text Name="Text-Toggles" Template="VG.BoldText">
							<X>3%</X>
							<Y>6%</Y>
							<Width>200</Width>
							<Height>20</Height>
							<Alignment>Left</Alignment>
							<Text>TOGGLES:</Text>
						</Text>

						<checkbox Name="doLifeTaps" Template="VG.GreenCheckbox">
							<visible>1</visible>
							<X>3%</X>
							<Y>14%</Y>
							<Width>15</Width>
							<Height>15</Height>
							<Text>LIFETAPS</Text>
							<OnLoad>
								if ${Script[VG-BM].VariableScope.doLifeTaps}
								{
									This:SetChecked
								}
							</OnLoad>
							<OnLeftClick>
								Script[VG-BM].VariableScope.doLifeTaps:Set[${This.Checked}]
							</OnLeftClick>
						</checkbox>
						<checkbox Name="doDots" Template="VG.GreenCheckbox">
							<visible>1</visible>
							<X>3%</X>
							<Y>23%</Y>
							<Width>15</Width>
							<Height>15</Height>
							<Text>DOTS</Text>
							<OnLoad>
								if ${Script[VG-BM].VariableScope.doDots}
								{
									This:SetChecked
								}
							</OnLoad>
							<OnLeftClick>
								Script[VG-BM].VariableScope.doDots:Set[${This.Checked}]
							</OnLeftClick>
						</checkbox>
						<checkbox Name="doAE" Template="VG.GreenCheckbox">
							<visible>1</visible>
							<X>3%</X>
							<Y>32%</Y>
							<Width>15</Width>
							<Height>15</Height>
							<Text>AE</Text>
							<OnLoad>
								if ${Script[VG-BM].VariableScope.doAE}
								{
									This:SetChecked
								}
							</OnLoad>
							<OnLeftClick>
								Script[VG-BM].VariableScope.doAE:Set[${This.Checked}]
							</OnLeftClick>
						</checkbox>
						
						<checkbox Name="doVitalHeals" Template="VG.GreenCheckbox">
							<visible>1</visible>
							<X>30%</X>
							<Y>14%</Y>
							<Width>15</Width>
							<Height>15</Height>
							<Text>VITAL HEALS</Text>
							<OnLoad>
								if ${Script[VG-BM].VariableScope.doVitalHeals}
								{
									This:SetChecked
								}
							</OnLoad>
							<OnLeftClick>
								Script[VG-BM].VariableScope.doVitalHeals:Set[${This.Checked}]
							</OnLeftClick>
						</checkbox>
						<checkbox Name="doHealGroupOnly" Template="VG.GreenCheckbox">
							<visible>1</visible>
							<X>30%</X>
							<Y>23%</Y>
							<Width>15</Width>
							<Height>15</Height>
							<Text>Heal Group Only</Text>
							<OnLoad>
								if ${Script[VG-BM].VariableScope.doHealGroupOnly}
								{
									This:SetChecked
								}
							</OnLoad>
							<OnLeftClick>
								Script[VG-BM].VariableScope.doHealGroupOnly:Set[${This.Checked}]
							</OnLeftClick>
						</checkbox>
						<checkbox Name="doEnchantments" Template="VG.GreenCheckbox">
							<visible>1</visible>
							<X>30%</X>
							<Y>32%</Y>
							<Width>15</Width>
							<Height>15</Height>
							<Text>Enchantments</Text>
							<OnLoad>
								if ${Script[VG-BM].VariableScope.doEnchantments}
								{
									This:SetChecked
								}
							</OnLoad>
							<OnLeftClick>
								Script[VG-BM].VariableScope.doEnchantments:Set[${This.Checked}]
							</OnLeftClick>
						</checkbox>

						<checkbox Name="doFaceSlow" Template="VG.GreenCheckbox">
							<visible>1</visible>
							<X>65%</X>
							<Y>14%</Y>
							<Width>15</Width>
							<Height>15</Height>
							<Text>Face Slow</Text>
							<OnLoad>
								if ${Script[VG-BM].VariableScope.doFaceSlow}
								{
									This:SetChecked
								}
							</OnLoad>
							<OnLeftClick>
								Script[VG-BM].VariableScope.doFaceSlow:Set[${This.Checked}]
							</OnLeftClick>
						</checkbox>
						<checkbox Name="doLootAll" Template="VG.GreenCheckbox">
							<visible>1</visible>
							<X>65%</X>
							<Y>23%</Y>
							<Width>15</Width>
							<Height>15</Height>
							<Text>Loot All</Text>
							<OnLoad>
								if ${Script[VG-BM].VariableScope.doLootAll}
								{
									This:SetChecked
								}
							</OnLoad>
							<OnLeftClick>
								Script[VG-BM].VariableScope.doLootAll:Set[${This.Checked}]
							</OnLeftClick>
						</checkbox>
						<checkbox Name="doFullThrottle" Template="VG.GreenCheckbox">
							<visible>1</visible>
							<X>65%</X>
							<Y>32%</Y>
							<Width>15</Width>
							<Height>15</Height>
							<Text>Full Throttle</Text>
							<AutoTooltip>Do not pause for 2 seconds</AutoTooltip>
							<OnLoad>
								if ${Script[VG-BM].VariableScope.doFullThrottle}
								{
									This:SetChecked
								}
							</OnLoad>
							<OnLeftClick>
								Script[VG-BM].VariableScope.doFullThrottle:Set[${This.Checked}]
							</OnLeftClick>
						</checkbox>
						<checkbox Name="DoSprint" Template="VG.GreenCheckbox">
							<visible>1</visible>
							<X>65%</X>
							<Y>41%</Y>
							<Width>15</Width>
							<Height>15</Height>
							<Text>Sprint</Text>
							<OnLoad>
								if ${Me.IsSprinting}
								{
									This:SetChecked
								}
							</OnLoad>
							<OnLeftClick>
								if ${Me.IsSprinting}
								{
									Me:Sprint
								}
								else
								{
									Me:Sprint[100]
								}
							</OnLeftClick>
						</checkbox>

						<Text Name="Text-UseAbility" Template="VG.BoldText">
							<X>3%</X>
							<Y>45%</Y>
							<Width>200</Width>
							<Height>20</Height>
							<Alignment>Left</Alignment>
							<Text>USE ABILITIES:</Text>
						</Text>

						<checkbox Name='doArcane' Template='VG.GreenCheckbox'>
							<visible>1</visible>
							<X>3%</X>
							<Y>53%</Y>
							<Width>15</Width>
							<Height>15</Height>
							<Text>Arcane</Text>
							<OnLoad>
								if ${Script[VG-BM].VariableScope.doArcane}
								{
									This:SetChecked
								}
							</OnLoad>
							<OnLeftClick>
								Script[VG-BM].VariableScope.doArcane:Set[${This.Checked}]
							</OnLeftClick>
						</checkbox>
						<checkbox Name='doPhysical' Template='VG.GreenCheckbox'>
							<visible>1</visible>
							<X>30%</X>
							<Y>53%</Y>
							<Width>15</Width>
							<Height>15</Height>
							<Text>Physical</Text>
							<OnLoad>
								if ${Script[VG-BM].VariableScope.doPhysical}
								{
									This:SetChecked
								}
							</OnLoad>
							<OnLeftClick>
								Script[VG-BM].VariableScope.doPhysical:Set[${This.Checked}]
							</OnLeftClick>
						</checkbox>

						<Commandbutton Name="Button-Set Tank" Template="VG.GreenCommandButton">
							<visible>1</visible>
							<X>10%</X>
							<Y>65%</Y>
							<Width>80%</Width>
							<Height>25</Height>
							<Text>Assist:  </Text>
                            <Onload>
								if ${Me.DTarget(exists)}
								{
									Script[VG-BM].Variable[Tank]:Set[${Me.DTarget.Name}]
									This:SetText[Assist:  ${Me.DTarget.Name}]
								}
								else
								{
									Script[VG-BM].Variable[Tank]:Set[${Me.FName}]
									This:SetText[Assist:  ${Me.FName}]
								}
                            </Onload>
							<OnLeftClick>
								if ${Me.DTarget(exists)}
								{
									Script[VG-BM].Variable[Tank]:Set[${Me.DTarget.Name}]
									This:SetText[Assist:  ${Me.DTarget.Name}]
								}
								else
								{
									Script[VG-BM].Variable[Tank]:Set[${Me.FName}]
									This:SetText[Assist:  ${Me.FName}]
								}
							</OnLeftClick>
						</Commandbutton>
						
						
						<Text Name="Combat Form Text" Template="VG.BoldText">
							<X>3%</X>
							<Y>81%</Y>
							<Width>200</Width>
							<Height>20</Height>
							<Alignment>Left</Alignment>
							<Text>COMBAT FORM:</Text>
						</Text>
						<ComboBox name="Combat Form" template="VG.ComboBox">
							<visible>1</visible>
							<X>3%</X>
							<Y>88%</Y>
							<Width>45%</Width>
							<Height>18</Height>
							<Sort>None</Sort>
							<Items>
								<Item value='1'>1    Unfocused</Item>
								<Item value='2'>2    Sanguine Focus</Item>
								<Item value='3' default='3' >3    Focus of Gelenia</Item>
							</Items>
							<OnSelect>
								if ${This.Selection}==1
								{
									Script[VG-BM].Variable[CombatForm]:Set[Unfocused]
								}
								if ${This.Selection}==2
								{
									Script[VG-BM].Variable[CombatForm]:Set[Unfocused]
									if ${Me.Form[Sanguine Focus](exists)}
									{
										Script[VG-BM].Variable[CombatForm]:Set[Sanguine Focus]
									}
								}
								if ${This.Selection}==3
								{
									Script[VG-BM].Variable[CombatForm]:Set[Unfocused]
									if ${Me.Form[Focus of Gelenia](exists)}
									{
										Script[VG-BM].Variable[CombatForm]:Set[Focus of Gelenia]
									}
								}
							</OnSelect>
						</ComboBox>
						
						<Text Name="Non-Combat Form Text" Template="VG.BoldText">
							<X>55%</X>
							<Y>81%</Y>
							<Width>200</Width>
							<Height>20</Height>
							<Alignment>Left</Alignment>
							<Text>OUT OF COMBAT FORM:</Text>
						</Text>
						<ComboBox name="Non-Combat Form" template="VG.ComboBox">
							<visible>1</visible>
							<X>55%</X>
							<Y>88%</Y>
							<Width>45%</Width>
							<Height>18</Height>
							<Sort>None</Sort>
							<Items>
								<Item value='1'>1    Unfocused</Item>
								<Item value='2' default='2'>2    Sanguine Focus</Item>
								<Item value='3'>3    Focus of Gelenia</Item>
							</Items>
							<OnSelect>
								if ${This.Selection}==1
								{
									Script[VG-BM].Variable[NonCombatForm]:Set[Unfocused]
								}
								if ${This.Selection}==2
								{
									Script[VG-BM].Variable[NonCombatForm]:Set[Unfocused]
									if ${Me.Form[Sanguine Focus](exists)}
									{
										Script[VG-BM].Variable[NonCombatForm]:Set[Sanguine Focus]
									}
								}
								if ${This.Selection}==3
								{
									Script[VG-BM].Variable[NonCombatForm]:Set[Unfocused]
									if ${Me.Form[Focus of Gelenia](exists)}
									{
										Script[VG-BM].Variable[NonCombatForm]:Set[Focus of Gelenia]
									}
								}
							</OnSelect>
						</ComboBox>
						
					</Tab>
					
					<!-- Tab Name: (Attack) -->
					<Tab name='Attack'>
						<Text Name="Text-LifeTaps" Template="VG.BoldText">
							<X>3%</X>
							<Y>6%</Y>
							<Width>200</Width>
							<Height>20</Height>
							<Alignment>Left</Alignment>
							<Text>LIFETAPS:</Text>
						</Text>
						<checkbox Name="doDespoil" Template="VG.GreenCheckbox">
							<visible>1</visible>
							<X>3%</X>
							<Y>14%</Y>
							<Width>15</Width>
							<Height>15</Height>
							<Text>Despoil</Text>
							<OnLoad>
								if ${Script[VG-BM].VariableScope.doDespoil}
								{
									This:SetChecked
								}
							</OnLoad>
							<OnLeftClick>
								Script[VG-BM].VariableScope.doDespoil:Set[${This.Checked}]
							</OnLeftClick>
						</checkbox>
						<checkbox Name="doEntwiningVein" Template="VG.GreenCheckbox">
							<visible>1</visible>
							<X>3%</X>
							<Y>23%</Y>
							<Width>15</Width>
							<Height>15</Height>
							<Text>Entwining Vein</Text>
							<OnLoad>
								if ${Script[VG-BM].VariableScope.doEntwiningVein}
								{
									This:SetChecked
								}
							</OnLoad>
							<OnLeftClick>
								Script[VG-BM].VariableScope.doEntwiningVein:Set[${This.Checked}]
							</OnLeftClick>
						</checkbox>
						<checkbox Name="doBloodthinner" Template="VG.GreenCheckbox">
							<visible>1</visible>
							<X>3%</X>
							<Y>32%</Y>
							<Width>15</Width>
							<Height>15</Height>
							<Text>Bloodthinner</Text>
							<OnLoad>
								if ${Script[VG-BM].VariableScope.doBloodthinner}
								{
									This:SetChecked
								}
							</OnLoad>
							<OnLeftClick>
								Script[VG-BM].VariableScope.doBloodthinner:Set[${This.Checked}]
							</OnLeftClick>
						</checkbox>
						
						<Text Name="Text-Dots" Template="VG.BoldText">
							<X>3%</X>
							<Y>45%</Y>
							<Width>99%</Width>
							<Height>20</Height>
							<Alignment>Left</Alignment>
							<Text>DOTS:</Text>
						</Text>
						<checkbox Name="doBurstingCyst" Template="VG.GreenCheckbox">
							<visible>1</visible>
							<X>3%</X>
							<Y>53%</Y>
							<Width>15</Width>
							<Height>15</Height>
							<Text>Bursting Cyst</Text>
							<OnLoad>
								if ${Script[VG-BM].VariableScope.doBurstingCyst}
								{
									This:SetChecked
								}
							</OnLoad>
							<OnLeftClick>
								Script[VG-BM].VariableScope.doBurstingCyst:Set[${This.Checked}]
							</OnLeftClick>
						</checkbox>
						<checkbox Name="doUnionOfBlood" Template="VG.GreenCheckbox">
							<visible>1</visible>
							<X>3%</X>
							<Y>62%</Y>
							<Width>15</Width>
							<Height>15</Height>
							<Text>Union of Blood</Text>
							<OnLoad>
								if ${Script[VG-BM].VariableScope.doUnionOfBlood}
								{
									This:SetChecked
								}
							</OnLoad>
							<OnLeftClick>
								Script[VG-BM].VariableScope.doUnionOfBlood:Set[${This.Checked}]
							</OnLeftClick>
						</checkbox>
						<checkbox Name="doExplodingCyst" Template="VG.GreenCheckbox">
							<visible>1</visible>
							<X>3%</X>
							<Y>71%</Y>
							<Width>15</Width>
							<Height>15</Height>
							<Text>Exploding Cyst</Text>
							<OnLoad>
								if ${Script[VG-BM].VariableScope.doExplodingCyst}
								{
									This:SetChecked
								}
							</OnLoad>
							<OnLeftClick>
								Script[VG-BM].VariableScope.doExplodingCyst:Set[${This.Checked}]
							</OnLeftClick>
						</checkbox>
						<checkbox Name="doBloodLettingRitual" Template="VG.GreenCheckbox">
							<visible>1</visible>
							<X>3%</X>
							<Y>80%</Y>
							<Width>15</Width>
							<Height>15</Height>
							<Text>Blood Letting Ritual</Text>
							<OnLoad>
								if ${Script[VG-BM].VariableScope.doBloodLettingRitual}
								{
									This:SetChecked
								}
							</OnLoad>
							<OnLeftClick>
								Script[VG-BM].VariableScope.doBloodLettingRitual:Set[${This.Checked}]
							</OnLeftClick>
						</checkbox>
						
						<Text Name="Text-Crits" Template="VG.BoldText">
							<X>55%</X>
							<Y>6%</Y>
							<Width>200</Width>
							<Height>20</Height>
							<Alignment>Left</Alignment>
							<Text>CRITS:</Text>
						</Text>
						<checkbox Name="doFleshRend" Template="VG.GreenCheckbox">  
							<visible>0</visible>
							<X>55%</X>
							<Y>14%</Y>
							<Width>15</Width>
							<Height>15</Height>
							<Text>Flesh Rend</Text>
							<OnLoad>
								if ${Script[VG-BM].VariableScope.doFleshRend}
								{
									This:SetChecked
								}
							</OnLoad>
							<OnLeftClick>
								Script[VG-BM].VariableScope.doFleshRend:Set[${This.Checked}]
							</OnLeftClick>
						</checkbox>
						<checkbox Name="doBloodSpray" Template="VG.GreenCheckbox">
							<visible>0</visible>
							<X>55%</X>
							<Y>14%</Y>
							<Width>15</Width>
							<Height>15</Height>
							<Text>Blood Spray</Text>
							<OnLoad>
								if ${Script[VG-BM].VariableScope.doBloodSpray}
								{
									This:SetChecked
								}
							</OnLoad>
							<OnLeftClick>
								Script[VG-BM].VariableScope.doBloodSpray:Set[${This.Checked}]
							</OnLeftClick>
						</checkbox>
						<checkbox Name="doBloodTribute" Template="VG.GreenCheckbox">
							<visible>1</visible>
							<X>55%</X>
							<Y>23%</Y>
							<Width>15</Width>
							<Height>15</Height>
							<Text>Blood Tribute</Text>
							<OnLoad>
								if ${Script[VG-BM].VariableScope.doBloodTribute}
								{
									This:SetChecked
								}
							</OnLoad>
							<OnLeftClick>
								Script[VG-BM].VariableScope.doBloodTribute:Set[${This.Checked}]
							</OnLeftClick>
						</checkbox>
						<checkbox Name="doExsanguinate" Template="VG.GreenCheckbox">
							<visible>1</visible>
							<X>55%</X>
							<Y>32%</Y>
							<Width>15</Width>
							<Height>15</Height>
							<Text>Exsanguinate</Text>
							<OnLoad>
								if ${Script[VG-BM].VariableScope.doExsanguinate}
								{
									This:SetChecked
								}
							</OnLoad>
							<OnLeftClick>
								Script[VG-BM].VariableScope.doExsanguinate:Set[${This.Checked}]
							</OnLeftClick>
						</checkbox>
						
						<Text Name="Text-Finisher" Template="VG.BoldText">
							<X>55%</X>
							<Y>45%</Y>
							<Width>99%</Width>
							<Height>20</Height>
							<Alignment>Left</Alignment>
							<Text>FINISHER:</Text>
						</Text>
						<checkbox Name="doScarletRitual" Template="VG.GreenCheckbox">
							<visible>1</visible>
							<X>55%</X>
							<Y>53%</Y>
							<Width>15</Width>
							<Height>15</Height>
							<Text>Scarlet Ritual</Text>
							<OnLoad>
								if ${Script[VG-BM].VariableScope.doScarletRitual}
								{
									This:SetChecked
								}
							</OnLoad>
							<OnLeftClick>
								Script[VG-BM].VariableScope.doScarletRitual:Set[${This.Checked}]
							</OnLeftClick>
						</checkbox>
						
						<Text Name="Text-AE" Template="VG.BoldText">
							<X>55%</X>
							<Y>65%</Y>
							<Width>99%</Width>
							<Height>20</Height>
							<Alignment>Left</Alignment>
							<Text>AE:</Text>
						</Text>
						<checkbox Name="doSeveringRitual" Template="VG.GreenCheckbox">
							<visible>1</visible>
							<X>55%</X>
							<Y>73%</Y>
							<Width>15</Width>
							<Height>15</Height>
							<Text>Severing Ritual</Text>
							<OnLoad>
								if ${Script[VG-BM].VariableScope.doSeveringRitual}
								{
									This:SetChecked
								}
							</OnLoad>
							<OnLeftClick>
								Script[VG-BM].VariableScope.doSeveringRitual:Set[${This.Checked}]
							</OnLeftClick>
						</checkbox>						
						
						<Text Name="Text-Attack" Template="VG.BoldText">
							<X>55%</X>
							<Y>84%</Y>
							<Width>99%</Width>
							<Height>20</Height>
							<Alignment>Left</Alignment>
							<Text>START ATTACKING:</Text>
						</Text>
						<Text name='AttackRationSliderValue' Template='VG.BoldText'>
							<visible>1</visible>
							<X>82%</X>
							<Y>84%</Y>
							<Width>50</Width>
							<Height>15</Height>
							<Alignment>Right</Alignment>
							<OnRender>
								This:SetText[${Script[VG-BM].Variable[StartAttack]}]
							</OnRender>
						</Text>
						<Slider name='AttackSlider' Template='VG.Slider'>
							<visible>1</visible>
							<X>54%</X>
							<Y>91%</Y>
							<Width>43%</Width>
							<Height>15</Height>
							<Range>100</Range>
							<Alignment>Center</Alignment>
							<OnLoad>
								This:SetValue[${Script[VG-BM].Variable[StartAttack]}]
							</OnLoad>
							<OnChange>
								Script[VG-BM].Variable[StartAttack]:Set[${Math.Calc[${This.Value}].Int}]
							</OnChange>
						</Slider>

					</Tab>

					<!-- Tab Name: (Misc) -->
					<Tab Name="Misc">
						<checkbox Name='doFollow' Template='VG.GreenCheckbox'>
							<visible>1</visible>
							<X>3%</X>
							<Y>7%</Y>
							<Width>15</Width>
							<Height>15</Height>
							<Text> </Text>
							<OnLoad>
								if ${Script[VG-BM].VariableScope.doFollow}
								{
									This:SetChecked
								}
							</OnLoad>
							<OnLeftClick>
								Script[VG-BM].VariableScope.doFollow:Set[${This.Checked}]
							</OnLeftClick>
						</checkbox>
						<Commandbutton Name='Set Follow' Template='VG.GreenCommandButton'>
							<visible>1</visible>
							<X>10%</X>
							<Y>6%</Y>
							<Text>Set</Text>
							<Width>40</Width> 
							<Height>18</Height>
							<OnLeftClick>
								Script[VG-BM].Variable[FollowName]:Set[${Me.DTarget.Name}]
								Script[VG-BM].Variable[FollowID]:Set[${Me.DTarget.ID}]
							</OnLeftClick>
						</Commandbutton>
						<Text Name="Follow Name" Template="VG.BoldText">
							<visible>1</visible>
							<X>25%</X>
							<Y>7%</Y>
							<Width>85%</Width>
							<Height>25</Height>
							<Text> </Text>
						</Text>

						<checkbox Name='doPushHate' Template='VG.GreenCheckbox'>
							<visible>0</visible>
							<X>3%</X>
							<Y>17%</Y>
							<Width>15</Width>
							<Height>15</Height>
							<Text> </Text>
							<OnLoad>
								if ${Script[VG-BM].VariableScope.doPushHate}
								{
									This:SetChecked
								}
							</OnLoad>
							<OnLeftClick>
								Script[VG-BM].VariableScope.doPushHate:Set[${This.Checked}]
								UIElement[doPushHate@Main@Tabs@VG-BM]:ToggleChecked
							</OnLeftClick>
						</checkbox>
						<Commandbutton Name='Set PushHateTo' Template='VG.GreenCommandButton'>
							<visible>0</visible>
							<X>10%</X>
							<Y>16%</Y>
							<Text>Set</Text>
							<Width>40</Width> 
							<Height>18</Height>
							<OnLeftClick>
								Script[VG-BM].Variable[PushHateTo]:Set[${Me.DTarget.Name}]
							</OnLeftClick>
						</Commandbutton>
						<Text Name="PushHateTo Name" Template="VG.BoldText">
							<visible>0</visible>
							<X>25%</X>
							<Y>17%</Y>
							<Width>85%</Width>
							<Height>25</Height>
							<Text> </Text>
						</Text>

						<checkbox Name='doRemoveHate' Template='VG.GreenCheckbox'>
							<visible>0</visible>
							<X>3%</X>
							<Y>27%</Y>
							<Width>15</Width>
							<Height>15</Height>
							<Text> </Text>
							<OnLoad>
								if ${Script[VG-BM].VariableScope.doRemoveHate}
								{
									This:SetChecked
								}
							</OnLoad>
							<OnLeftClick>
								Script[VG-BM].VariableScope.doRemoveHate:Set[${This.Checked}]
								UIElement[doRemoveHate@Main@Tabs@VG-BM]:ToggleChecked
							</OnLeftClick>
						</checkbox>
						<Commandbutton Name='Set RemoveHateFrom' Template='VG.GreenCommandButton'>
							<visible>0</visible>
							<X>10%</X>
							<Y>26%</Y>
							<Text>Set</Text>
							<Width>40</Width> 
							<Height>18</Height>
							<OnLeftClick>
								Script[VG-BM].Variable[RemoveHateFrom]:Set[${Me.DTarget.Name}]
							</OnLeftClick>
						</Commandbutton>
						<Text Name="RemoveHateFrom Name" Template="VG.BoldText">
							<visible>0</visible>
							<X>25%</X>
							<Y>27%</Y>
							<Width>85%</Width>
							<Height>25</Height>
							<Text> </Text>
						</Text>
						
						<Text Name="Chat monitor" Template="VG.BoldText">
							<X>3%</X>
							<Y>51%</Y>
							<Width>200</Width>
							<Height>22</Height>
							<Alignment>Left</Alignment>
							<Text>CHAT MONITOR:</Text>
						</Text>
						<Text Name="Start Following" Template="VG.Text">
							<X>3%</X>
							<Y>61%</Y>
							<Width>30%</Width>
							<Height>25</Height>
							<Text>Start Following:</Text>
						</Text>
						<Textentry Name='StartFollowText' Template='VG.TextEntry'>
							<X>35%</X>
							<Y>60%</Y>
							<Width>64%</Width>
							<Height>18</Height>
							<Border>0</Border>
							<OnLoad>
								This:SetText[${Script[VG-BM].VariableScope.StartFollowText}]
							</OnLoad>
							<OnChange>
								if ${This.Text.Length} > 0
								{
									Script[VG-BM].VariableScope.StartFollowText:Set[${This.Text}]
								}
							</OnChange>
						</Textentry>

						<Text Name="Stop Following" Template="VG.Text">
							<X>3%</X>
							<Y>71%</Y>
							<Width>30%</Width>
							<Height>25</Height>
							<Text>Stop Following:</Text>
						</Text>
						<Textentry Name='StopFollowText' Template='VG.TextEntry'>
							<X>35%</X>
							<Y>70%</Y>
							<Width>64%</Width>
							<Height>18</Height>
							<Border>0</Border>
							<OnLoad>
								This:SetText[${Script[VG-BM].VariableScope.StopFollowText}]
							</OnLoad>
							<OnChange>
								if ${This.Text.Length} > 0
								{
									Script[VG-BM].VariableScope.StopFollowText:Set[${This.Text}]
								}
							</OnChange>
						</Textentry>

						<Text Name="Kill Levitation" Template="VG.Text">
							<X>3%</X>
							<Y>81%</Y>
							<Width>30%</Width>
							<Height>25</Height>
							<Text>Kill Levitation:</Text>
						</Text>
						<Textentry Name='KillLevitationText' Template='VG.TextEntry'>
							<X>35%</X>
							<Y>80%</Y>
							<Width>64%</Width>
							<Height>18</Height>
							<Border>0</Border>
							<OnLoad>
								This:SetText[${Script[VG-BM].VariableScope.KillLevitationText}]
							</OnLoad>
							<OnChange>
								if ${This.Text.Length} > 0
								{
									Script[VG-BM].VariableScope.KillLevitationText:Set[${This.Text}]
								}
							</OnChange>
						</Textentry>
						
						<Text Name="Buff Everyone" Template="VG.Text">
							<X>3%</X>
							<Y>91%</Y>
							<Width>30%</Width>
							<Height>25</Height>
							<Text>Buff Everyone:</Text>
						</Text>
						<Textentry Name='BuffEveryoneText' Template='VG.TextEntry'>
							<X>35%</X>
							<Y>90%</Y>
							<Width>64%</Width>
							<Height>18</Height>
							<Border>0</Border>
							<OnLoad>
								This:SetText[${Script[VG-BM].VariableScope.BuffEveryoneText}]
							</OnLoad>
							<OnChange>
								if ${This.Text.Length} > 0
								{
									Script[VG-BM].VariableScope.BuffEveryoneText:Set[${This.Text}]
								}
							</OnChange>
						</Textentry>
						

<!--
						<Text Name="Manage Regen" Template="VG.BoldText">
							<X>3%</X>
							<Y>45%</Y>
							<Width>200</Width>
							<Height>20</Height>
							<Alignment>Left</Alignment>
							<Text>MANAGE REGEN:</Text>
						</Text>
						<ComboBox name="Regen Dot" template="VG.ComboBox">
							<visible>1</visible>
							<X>3%</X>
							<Y>52%</Y>
							<Width>95%</Width>
							<Height>18</Height>
							<Sort>None</Sort>
							<Items>
								<Item value='1' default='1'>1    Compression Sphere</Item>
								<Item value='2'>2    Psychic Schism</Item>
								<Item value='3'>3    None</Item>
							</Items>
							<OnSelect>
								if ${This.Selection}==1
								{
									Script[VG-BM].Variable[RegenDot]:Set[None]
									if ${Me.Ability[Compression Sphere I](exists)}
									{
										Script[VG-BM].Variable[RegenDot]:Set[Compression Sphere I]
									}
									if ${Me.Ability[Compression Sphere II](exists)}
									{
										Script[VG-BM].Variable[RegenDot]:Set[Compression Sphere II]
									}
									if ${Me.Ability[Compression Sphere III](exists)}
									{
										Script[VG-BM].Variable[RegenDot]:Set[Compression Sphere III]
									}
									if ${Me.Ability[Compression Sphere IV](exists)}
									{
										Script[VG-BM].Variable[RegenDot]:Set[Compression Sphere IV]
									}
									if ${Me.Ability[Compression Sphere V](exists)}
									{
										Script[VG-BM].Variable[RegenDot]:Set[Compression Sphere V]
									}
									if ${Me.Ability[Compression Sphere VI](exists)}
									{
										Script[VG-BM].Variable[RegenDot]:Set[Compression Sphere VI]
									}
									if ${Me.Ability[Compression Sphere VII](exists)}
									{
										Script[VG-BM].Variable[RegenDot]:Set[Compression Sphere VII]
									}
									if ${Me.Ability[Compression Sphere VIII](exists)}
									{
										Script[VG-BM].Variable[RegenDot]:Set[Compression Sphere VIII]
									}
									if ${Me.Ability[Compression Sphere IX](exists)}
									{
										Script[VG-BM].Variable[RegenDot]:Set[Compression Sphere IX]
									}
								}
								if ${This.Selection}==2
								{
									Script[VG-BM].Variable[RegenDot]:Set[None]
									if ${Me.Ability[Psychic Schism I](exists)}
									{
										Script[VG-BM].Variable[RegenDot]:Set[Psychic Schism I]
									}
									if ${Me.Ability[Psychic Schism II](exists)}
									{
										Script[VG-BM].Variable[RegenDot]:Set[Psychic Schism II]
									}
									if ${Me.Ability[Psychic Schism III](exists)}
									{
										Script[VG-BM].Variable[RegenDot]:Set[Psychic Schism III]
									}
									if ${Me.Ability[Psychic Schism IV](exists)}
									{
										Script[VG-BM].Variable[RegenDot]:Set[Psychic Schism IV]
									}
								}
								if ${This.Selection}==3
								{
									Script[VG-BM].Variable[RegenDot]:Set[None]
								}
							</OnSelect>
						</ComboBox>
-->
					</Tab>


					<!-- Tab Name: (Stats) -->
					<Tab name='Stats'>
						<Text Name="DPS" Template="VG.BoldText">
							<X>3%</X>
							<Y>5%</Y>
							<Width>46%</Width>
							<Height>20</Height>
							<Alignment>Left</Alignment>
							<Text>a</Text>
						</Text>
						<Text Name="TotalDamage" Template="VG.BoldText">
							<X>50%</X>
							<Y>5%</Y>
							<Width>48%</Width>
							<Height>20</Height>
							<Alignment>Left</Alignment>
							<Text>a</Text>
						</Text>

						<Text Name="CRIT" Template="VG.BoldText">
							<X>3%</X>
							<Y>13%</Y>
							<Width>50%</Width>
							<Height>20</Height>
							<Alignment>Left</Alignment>
							<Text>b</Text>
						</Text>
						<Text Name="EPIC" Template="VG.BoldText">
							<X>50%</X>
							<Y>13%</Y>
							<Width>49%</Width>
							<Height>20</Height>
							<Alignment>Left</Alignment>
							<Text>b</Text>
						</Text>

						<Text Name="tdDespoil" Template="VG.BoldText">
							<visible>0</visible>
							<X>3%</X>
							<Y>27%</Y>
							<Width>49.5%</Width>
							<Height>20</Height>
							<Alignment>Left</Alignment>
							<Text>a</Text>
						</Text>
						<Text Name="tdLifetaps" Template="VG.BoldText">
							<visible>1</visible>
							<X>3%</X>
							<Y>27%</Y>
							<Width>49.5%</Width>
							<Height>20</Height>
							<Alignment>Left</Alignment>
							<Text>b</Text>
						</Text>
						<Text Name="tdBloodthinner" Template="VG.BoldText">
							<visible>0</visible>
							<X>3%</X>
							<Y>43%</Y>
							<Width>49.5%</Width>
							<Height>20</Height>
							<Alignment>Left</Alignment>
							<Text>c</Text>
						</Text>

						<Text Name="tdBurstingCyst" Template="VG.BoldText">
							<X>3%</X>
							<Y>43%</Y>
							<Width>74%</Width>
							<Height>20</Height>
							<Alignment>Left</Alignment>
							<Text>d</Text>
						</Text>
						<Text Name="tdUnionOfBlood" Template="VG.BoldText">
							<X>3%</X>
							<Y>51%</Y>
							<Width>74%</Width>
							<Height>20</Height>
							<Alignment>Left</Alignment>
							<Text>e</Text>
						</Text>
						<Text Name="tdExplodingCyst" Template="VG.BoldText">
							<X>3%</X>
							<Y>59%</Y>
							<Width>74%</Width>
							<Height>20</Height>
							<Alignment>Left</Alignment>
							<Text>f</Text>
						</Text>
						<Text Name="tdBloodLettingRitual" Template="VG.BoldText">
							<X>3%</X>
							<Y>66%</Y>
							<Width>74%</Width>
							<Height>20</Height>
							<Alignment>Left</Alignment>
							<Text>g</Text>
						</Text>

						<Text Name="tdFleshRend" Template="VG.BoldText">
							<X>55%</X>
							<Y>27%</Y>
							<Width>44.5%</Width>
							<Height>20</Height>
							<Alignment>Left</Alignment>
							<Text>h</Text>
						</Text>
						<Text Name="tdBloodSpray" Template="VG.BoldText">
							<X>55%</X>
							<Y>35%</Y>
							<Width>44.5%</Width>
							<Height>20</Height>
							<Alignment>Left</Alignment>
							<Text>i</Text>
						</Text>
						<Text Name="tdBloodTribute" Template="VG.BoldText">
							<X>55%</X>
							<Y>43%</Y>
							<Width>44.5%</Width>
							<Height>20</Height>
							<Alignment>Left</Alignment>
							<Text>j</Text>
						</Text>
						<Text Name="tdExsanguinate" Template="VG.BoldText">
							<X>55%</X>
							<Y>51%</Y>
							<Width>49.5%</Width>
							<Height>20</Height>
							<Alignment>Left</Alignment>
							<Text>k</Text>
						</Text>
						
						<Text Name="tdScarletRitual" Template="VG.BoldText">
							<X>55%</X>
							<Y>65%</Y>
							<Width>49.5%</Width>
							<Height>20</Height>
							<Alignment>Left</Alignment>
							<Text>l</Text>
						</Text>
						<Text Name="tdSeveringRitual" Template="VG.BoldText">
							<X>55%</X>
							<Y>81%</Y>
							<Width>49.5%</Width>
							<Height>20</Height>
							<Alignment>Left</Alignment>
							<Text>m</Text>
						</Text>
						
						<Text Name="TotalTime" Template="VG.BoldText">
							<X>3%</X>
							<Y>92%</Y>
							<Width>96%</Width>
							<Height>20</Height>
							<Alignment>Left</Alignment>
							<Text>n</Text>
						</Text>

					</Tab>

					
					
					<!-- Tab Name: (About) -->
					<Tab name='About'>
						<Text Name='About Line 1'>
							<X>0</X>
							<Y>12%</Y>
							<Width>100%</Width>
							<Height>80%</Height>
							<Alignment>Center</Alignment>
							<Font Template="VG.Text.Font">
								<Name>terminal</Name>
								<Size>16</Size>
							</Font>
							<Text>Tool for Blood Mages v1.0</Text>
						</Text>
						<Text Name='About Line 2'>
							<X>0</X>
							<Y>33%</Y>
							<Width>100%</Width>
							<Height>15</Height>
							<Alignment>Center</Alignment>
							<Font Template="VG.Text.Font">
								<Name>terminal</Name>
								<Size>14</Size>
							</Font>
							<Text>by Zandros</Text>
						</Text>
						<Text Name='About Line 3'>
							<X>0</X>
							<Y>50%</Y>
							<Width>100%</Width>
							<Height>15</Height>
							<Alignment>Center</Alignment>
							<Font Template="VG.Text.Font">
								<Name>terminal</Name>
								<Size>12</Size>
							</Font>
							<Text>Special thanks to all you programmers</Text>
						</Text>
						<Text Name='About Line 4'>
							<X>0</X>
							<Y>57%</Y>
							<Width>100%</Width>
							<Height>15</Height>
							<Alignment>Center</Alignment>
							<Font Template="VG.Text.Font">
								<Name>terminal</Name>
								<Size>12</Size>
							</Font>
							<Text>that shared your ideas and talents!</Text>
						</Text>
					</Tab>
				</Tabs>
			</TabControl>


			<!-- Outside the tab: (Tabs) -->
			
			
			<Text Name="Text-Status" Template="VG.BoldText">
				<visible>1</visible>
				<X>2%</X>
				<Y>75%</Y>
				<Width>98%</Width>
				<Height>20</Height>
				<Font Template="VG.Text.Font">
					<Color>FFDDBB00</Color>
				</Font>
			<!--	<Text> Current Action:  ${Script[VG-BM].Variable[CurrentAction]}</Text>  -->
				<Text></Text>
			</Text>
			<Text Name="Text-Immune" Template="VG.BoldText">
				<visible>1</visible>
				<X>2%</X>
				<Y>80%</Y>
				<Width>275</Width>
				<Height>20</Height>
				<Font Template="VG.Text.Font">
					<Color>FFDDBB00</Color>
				</Font>
			<!--	<Text> Target's Immunity:  ${Script[VG-BM].Variable[TargetImmunity]}</Text>  -->
				<Text></Text>
			</Text>
			<Text Name="Text-TOT" Template="VG.BoldText">
				<visible>1</visible>
				<X>2%</X>
				<Y>85%</Y>
				<Width>275</Width>
				<Height>20</Height>
				<Font Template="VG.Text.Font">
					<Color>FFDDBB00</Color>
				</Font>
			<!--	<Text> Target's Target:  ${Script[VG-BM].Variable[TargetsTarget]}</Text>  -->
				<Text></Text>
			</Text>
			<Commandbutton Name="Run Button" Template="VG.GreyCommandButton">
				<visible>1</visible>
				<X>3%</X>
				<Y>90.5%</Y>
				<Width>40%</Width>
				<Height>23</Height>
				<Text>This script is PAUSED</Text>
				<OnLeftClick>
					if ${Script[VG-BM].Variable[isPaused]}
					{
						Script[VG-BM].Variable[isPaused]:Set[FALSE]
						This:SetText[This script is RUNNING]
					}
					elseif !${Script[VG-BM].Variable[isPaused]}
					{
						Script[VG-BM].Variable[isPaused]:Set[TRUE]
						This:SetText[This script is Paused]
					}
				</OnLeftClick>
			</Commandbutton>
			<Commandbutton Name="FindGroupMembers" Template="VG.GreyCommandButton">
				<visible>1</visible>
				<X>45%</X>
				<Y>90.5%</Y>
				<Width>25%</Width>
				<Height>23</Height>
				<Text> Update Group</Text>
				<OnLeftClick>
					Script[VG-BM].Variable[doCheckForMembers]:Set[TRUE]
				</OnLeftClick>
			</Commandbutton>
			<Commandbutton Name="BuffArea" Template="VG.GreyCommandButton">
				<visible>1</visible>
				<X>72%</X>
				<Y>90.5%</Y>
				<Width>25%</Width>
				<Height>23</Height>
				<Text>Buff Area</Text>
				<OnLeftClick>
					Script[VG-BM]:QueueCommand[call ScanAreaToBuff]
				</OnLeftClick>
			</Commandbutton>
		</Children>
	</Window>
</ISUI>
