<?xml version="1.0" encoding="UTF-8"?>
<ISUI><!-- Main UI Window -->

	<!-- Font -->
	<Template Name="VG.Font">
		<Name>Tahoma</Name>
		<Size>13</Size>
		<Color>FF100000</Color>
	</Template>
	<Template Name="VG.BoldFont" Template="VG.Font">
		<Bold />
	</Template>

	<!-- Text -->
	<template name="VG.Text.Font" Template="VG.Font" />
	<template name="VG.Text">
		<Font Template="VG.Text.Font" />
		<Wrap>0</Wrap>
		<Alignment>Left</Alignment>
		<VerticalAlignment>Top</VerticalAlignment>
	</template>
	<template name="VG.BoldText">
		<Font Template="VG.BoldFont" />
		<Wrap>0</Wrap>
		<Alignment>Left</Alignment>
		<VerticalAlignment>Top</VerticalAlignment>
	</template>

	<!-- Green CheckBox -->
	<Template Name="VG.GreenCheckbox">
		<Font Template="VG.Checkbox.Font" />
		<Texture Template="VG.Checkbox.Texture" />
		<TextureHover Template="VG.Checkbox.TextureHover" />
		<TexturePressed Template="VG.Checkbox.TexturePressed" />
		<TextureChecked Template="VG.Checkbox.TextureChecked" />
		<TextureCheckedHover Template="VG.Checkbox.TextureCheckedHover" />
		<TextureCheckedPressed Template="VG.Checkbox.TextureCheckedPressed" />
	</Template>
	
	<!-- Grey CommandBox -->
	<Template Name="VG.GreyCommandButton">
		<Font Template="vg.button.Font" />
		<Texture Template="vg.button.Texture" />
		<TextureHover Template="vg.button.TextureHover" />
		<TexturePressed Template="vg.button.TexturePressed" />
	</Template>

	<!-- HUD Window -->
	<Template Name="CVG.Window.Client">
		<Y>16</Y>
		<Height>r16</Height>
		<Width>100%</Width>
	</Template>
	<Template Name="CVG.Window">
		<Border>0</Border>
		<BorderColor>FF655025</BorderColor>
		<Resizable>0</Resizable>
		<CloseButton />
		<MinimizeButton />
		<WidthResizable>0</WidthResizable>
		<HeightResizable>0</HeightResizable>
		<TitleBar Template="VG.Window.TitleBar" />
		<OffsetTitleBarHeight />
		<Client Template="CVG.Window.Client" />
		<BackgroundColor>FF000000</BackgroundColor>
		<StorePosition>1</StorePosition>
	</Template>
	
	<!-- Window Name: (VG-Find) -->
	<Window Name="VG-Find" Template="VG.Window">
		<!-- Basic Window Information -->
		<StorePosition>1</StorePosition>
		<X>100</X>
		<Y>100</Y>
		<Width>200</Width>
		<Height>100</Height>
		<Title>VG-Find</Title>
		<TitleBar Template="VG.Window.TitleBar">
			<X>0</X>
			<Y>0</Y>
			<Width>99%</Width>
			<Height>18</Height>
			<Children>
				<!-- Centered -->
				<Text Name="Title" Template="VG.Window.TitleBar.Title">
					<X>18</X>
					<Alignment>Center</Alignment>
				</Text>
				<!-- Minimize -->
				<Button Name="Minimize" Template="VG.Window.TitleBar.Minimize">
					<X>1</X>
					<Width>16</Width>
					<Height>16</Height>
				</Button>
				<!-- Close -->
				<CommandButton Name="Custom Quit Button" Template="VG.Window.TitleBar.Close">
					<X>r17</X>
					<Width>16</Width>
					<Height>16</Height>
					<OnLeftClick>
						endscript VG-Find
					</OnLeftClick>
					<Command>ui -unload "&filename;"</Command>					
				</CommandButton>
			</Children>
		</TitleBar>
		<!-- Nothing fancy for Window Client -->
		<Client Template="VG.Window.Client" />
		<Children>
			<checkbox Name="doFindTarget" Template="VG.GreenCheckbox">
				<visible>1</visible>
				<X>3%</X>
				<Y>15%</Y>
				<Width>15</Width>
				<Height>15</Height>
				<Font Template="VG.Text.Font">
					<Color>FFFFFFFF</Color>
				</Font>
				<Text>Name</Text>
				<OnLoad>
					if ${Script[VG-Find].VariableScope.doFindTarget}
					{
						This:SetChecked
					}
				</OnLoad>
				<OnLeftClick>
					Script[VG-Find].VariableScope.doFindTarget:Set[${This.Checked}]
				</OnLeftClick>
			</checkbox>
			<Textentry Name="FindTarget" Template="VG.TextEntry">
				<X>28%</X>
				<Y>15%</Y>
				<Width>70%</Width>
				<Height>15</Height>
				<Color>FFDDBB00</Color>
				<OnLoad>
					This:SetText[${Script[VG-Find].VariableScope.FindTarget}]
				</OnLoad>
				<OnChange>
					Script[VG-Find].VariableScope.FindTarget:Set[${This.Text}]
				</OnChange>
			</Textentry>
			<checkbox Name="doFindTitle" Template="VG.GreenCheckbox">
				<visible>1</visible>
				<X>3%</X>
				<Y>35%</Y>
				<Width>15</Width>
				<Height>15</Height>
				<Font Template="VG.Text.Font">
					<Color>FFFFFFFF</Color>
				</Font>
				<Text>Title</Text>
				<OnLoad>
					if ${Script[VG-Find].VariableScope.doFindTitle}
					{
						This:SetChecked
					}
				</OnLoad>
				<OnLeftClick>
					Script[VG-Find].VariableScope.doFindTitle:Set[${This.Checked}]
				</OnLeftClick>
			</checkbox>
			<Textentry Name="FindTitle" Template="VG.TextEntry">
				<X>28%</X>
				<Y>35%</Y>
				<Width>70%</Width>
				<Height>15</Height>
				<Color>FFDDBB00</Color>
				<OnLoad>
					This:SetText[${Script[VG-Find].VariableScope.FindTitle}]
				</OnLoad>
				<OnChange>
					Script[VG-Find].VariableScope.FindTitle:Set[${This.Text}]
				</OnChange>
			</Textentry>
			<Commandbutton Name="Run Button" Template="VG.GreyCommandButton">
				<visible>1</visible>
				<X>20%</X>
				<Y>65%</Y>
				<Width>60%</Width>
				<Height>23</Height>
				<Text>-PAUSED-</Text>
				<OnRender>
					if ${Script[VG-Find].Variable[doPause]}
						This:SetAlpha[0.5]
					else
						This:SetAlpha[1]
				</OnRender>
				<OnLeftClick>
					if ${Script[VG-Find].Variable[doPause]}
					{
						Script[VG-Find].Variable[doPause]:Set[FALSE]
						This:SetText[-RUNNING-]
					}
					elseif !${Script[VG-Find].Variable[doPause]}
					{
						Script[VG-Find].Variable[doPause]:Set[TRUE]
						This:SetText[-PAUSED-]
					}
				</OnLeftClick>
				<Data>${Script[VG-Find](exists)}</Data>
			</Commandbutton>
		</Children>
	</Window>
</ISUI>
