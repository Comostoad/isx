<?xml version="1.0" encoding="UTF-8"?>
<ISUI><!-- Main UI Window -->

	<!-- Font -->
	<Template Name="VG.Font">
		<Name>Tahoma</Name>
		<Size>14</Size>
		<Color>FF100000</Color>
	</Template>
	<Template Name="VG.BoldFont" Template="VG.Font">
		<Bold />
	</Template>

	<!-- Text -->
	<template name="VG.Text.Font" Template="VG.Font" />
	<template name="VG.Text">
		<Font Template="VG.Text.Font" />
		<Wrap>0</Wrap>
		<Alignment>Left</Alignment>
		<VerticalAlignment>Top</VerticalAlignment>
	</template>
	<template name="VG.BoldText">
		<Font Template="VG.BoldFont" />
		<Wrap>0</Wrap>
		<Alignment>Left</Alignment>
		<VerticalAlignment>Top</VerticalAlignment>
	</template>

	<!-- Green CheckBox -->
	<Template Name="VG.GreenCheckbox">
		<Font Template="VG.Checkbox.Font" />
		<Texture Template="VG.Checkbox.Texture" />
		<TextureHover Template="VG.Checkbox.TextureHover" />
		<TexturePressed Template="VG.Checkbox.TexturePressed" />
		<TextureChecked Template="VG.Checkbox.TextureChecked" />
		<TextureCheckedHover Template="VG.Checkbox.TextureCheckedHover" />
		<TextureCheckedPressed Template="VG.Checkbox.TextureCheckedPressed" />
	</Template>
	
	<!-- Grey CommandBox -->
	<Template Name="VG.GreyCommandButton">
		<Font Template="vg.button.Font" />
		<Texture Template="vg.button.Texture" />
		<TextureHover Template="vg.button.TextureHover" />
		<TexturePressed Template="vg.button.TexturePressed" />
	</Template>
	
	<!-- Window Name: (VG-PSI) -->
	<Window Name="VG-PSI" Template="VG.Window">
		<!-- Basic Window Information -->
		<StorePosition>1</StorePosition>
		<X>100</X>
		<Y>100</Y>
		<Width>350</Width>
		<Height>300</Height>
		<Title>VG-PSI</Title>
		<TitleBar Template="VG.Window.TitleBar">
			<X>0</X>
			<Y>0</Y>
			<Width>99%</Width>
			<Height>18</Height>
			<Children>
				<!-- Centered -->
				<Text Name="Title" Template="VG.Window.TitleBar.Title">
					<X>18</X>
					<Alignment>Center</Alignment>
				</Text>
				<!-- Minimize -->
				<Button Name="Minimize" Template="VG.Window.TitleBar.Minimize">
					<X>1</X>
					<Width>16</Width>
					<Height>16</Height>
				</Button>
				<!-- Close -->
				<CommandButton Name="Custom Quit Button" Template="VG.Window.TitleBar.Close">
					<X>r17</X>
					<Width>16</Width>
					<Height>16</Height>
					<OnLeftClick>
						Script[VG-PSI].Variable[isRunning]:Set[FALSE]
						endscript VG-PSI 
					</OnLeftClick>
				</CommandButton>
			</Children>
		</TitleBar>
		<!-- Nothing fancy for Window Client -->
		<Client Template="VG.Window.Client" />
<!--		
		<Client Template="VG.Window.Client">
			<Y>18</Y>
			<Height>r18</Height>
			<Texture Template="VG.TabControl.FrameTexture" />
		</Client>

-->		
		<Children>
			<!-- Tab: (Tabs) -->
			<TabControl Name="Tabs" Template="VG.Tabcontrol">
				<X>5</X>
				<Y>5</Y>
				<Font>
					<Name>Times New Roman</Name>
					<Size>14</Size>
				</Font>
				<OnSelect>
				</OnSelect>
				<TabHeight>20</TabHeight>
				<TabBorder>3</TabBorder>
				<Height>72%</Height>
				<Width>97%</Width>
				<Tabs>

					<!-- Tab Name: (Main) -->
					<Tab Name="Main">
						<Text Name="Text-Toggles" Template="VG.BoldText">
							<X>3%</X>
							<Y>6%</Y>
							<Width>200</Width>
							<Height>20</Height>
							<Alignment>Left</Alignment>
							<Text>TOGGLES:</Text>
						</Text>

						<checkbox Name="doNukes" Template="VG.GreenCheckbox">
							<visible>1</visible>
							<X>3%</X>
							<Y>14%</Y>
							<Width>15</Width>
							<Height>15</Height>
							<Text>NUKES</Text>
							<OnLoad>
								if ${Script[VG-PSI].VariableScope.doNukes}
								{
									This:SetChecked
								}
							</OnLoad>
							<OnLeftClick>
								Script[VG-PSI].VariableScope.doNukes:Set[${This.Checked}]
							</OnLeftClick>
						</checkbox>
						<checkbox Name="doDots" Template="VG.GreenCheckbox">
							<visible>1</visible>
							<X>3%</X>
							<Y>23%</Y>
							<Width>15</Width>
							<Height>15</Height>
							<Text>DOTS</Text>
							<OnLoad>
								if ${Script[VG-PSI].VariableScope.doDots}
								{
									This:SetChecked
								}
							</OnLoad>
							<OnLeftClick>
								Script[VG-PSI].VariableScope.doDots:Set[${This.Checked}]
							</OnLeftClick>
						</checkbox>
						<checkbox Name="doAE" Template="VG.GreenCheckbox">
							<visible>1</visible>
							<X>3%</X>
							<Y>32%</Y>
							<Width>15</Width>
							<Height>15</Height>
							<Text>AE</Text>
							<OnLoad>
								if ${Script[VG-PSI].VariableScope.doAE}
								{
									This:SetChecked
								}
							</OnLoad>
							<OnLeftClick>
								Script[VG-PSI].VariableScope.doAE:Set[${This.Checked}]
							</OnLeftClick>
						</checkbox>
						
						<checkbox Name="doPushHate" Template="VG.GreenCheckbox">
							<visible>1</visible>
							<X>30%</X>
							<Y>14%</Y>
							<Width>15</Width>
							<Height>15</Height>
							<Text>Push Hate</Text>
							<OnLoad>
								if ${Script[VG-PSI].VariableScope.doPushHate}
								{
									This:SetChecked
								}
							</OnLoad>
							<OnLeftClick>
								Script[VG-PSI].VariableScope.doPushHate:Set[${This.Checked}]
								UIElement[doPushHate@Misc@Tabs@VG-PSI]:ToggleChecked
							</OnLeftClick>
						</checkbox>
						<checkbox Name="doRemoveHate" Template="VG.GreenCheckbox">
							<visible>1</visible>
							<X>30%</X>
							<Y>23%</Y>
							<Width>15</Width>
							<Height>15</Height>
							<Text>Remove Hate</Text>
							<OnLoad>
								if ${Script[VG-PSI].VariableScope.doRemoveHate}
								{
									This:SetChecked
								}
							</OnLoad>
							<OnLeftClick>
								Script[VG-PSI].VariableScope.doRemoveHate:Set[${This.Checked}]
								UIElement[doRemoveHate@Misc@Tabs@VG-PSI]:ToggleChecked
							</OnLeftClick>
						</checkbox>

						<checkbox Name="doFaceSlow" Template="VG.GreenCheckbox">
							<visible>1</visible>
							<X>65%</X>
							<Y>14%</Y>
							<Width>15</Width>
							<Height>15</Height>
							<Text>Face Slow</Text>
							<OnLoad>
								if ${Script[VG-PSI].VariableScope.doFaceSlow}
								{
									This:SetChecked
								}
							</OnLoad>
							<OnLeftClick>
								Script[VG-PSI].VariableScope.doFaceSlow:Set[${This.Checked}]
							</OnLeftClick>
						</checkbox>
						<checkbox Name="doLootAll" Template="VG.GreenCheckbox">
							<visible>1</visible>
							<X>65%</X>
							<Y>23%</Y>
							<Width>15</Width>
							<Height>15</Height>
							<Text>Loot All</Text>
							<OnLoad>
								if ${Script[VG-PSI].VariableScope.doLootAll}
								{
									This:SetChecked
								}
							</OnLoad>
							<OnLeftClick>
								Script[VG-PSI].VariableScope.doLootAll:Set[${This.Checked}]
							</OnLeftClick>
						</checkbox>
						<checkbox Name="doFullThrottle" Template="VG.GreenCheckbox">
							<visible>1</visible>
							<X>65%</X>
							<Y>32%</Y>
							<Width>15</Width>
							<Height>15</Height>
							<Text>Full Throttle</Text>
							<AutoTooltip>Do not pause 1 sec to catch crits</AutoTooltip>
							<OnLoad>
								if ${Script[VG-PSI].VariableScope.doFullThrottle}
								{
									This:SetChecked
								}
							</OnLoad>
							<OnLeftClick>
								Script[VG-PSI].VariableScope.doFullThrottle:Set[${This.Checked}]
							</OnLeftClick>
						</checkbox>

<!--						
						<checkbox Name="doBuffs" Template="VG.GreenCheckbox">
							<visible>1</visible>
							<X>65%</X>
							<Y>20%</Y>
							<Width>15</Width>
							<Height>15</Height>
							<Text>Buffs</Text>
							<OnLoad>
								if ${Script[VG-PSI].VariableScope.doBuffs}
								{
									This:SetChecked
								}
							</OnLoad>
							<OnLeftClick>
								Script[VG-PSI].VariableScope.doBuffs:Set[${This.Checked}]
							</OnLeftClick>
						</checkbox>
-->

						<Text Name="Text-UseAbility" Template="VG.BoldText">
							<X>3%</X>
							<Y>45%</Y>
							<Width>200</Width>
							<Height>20</Height>
							<Alignment>Left</Alignment>
							<Text>USE ABILITIES:</Text>
						</Text>

						<checkbox Name='doArcane' Template='VG.GreenCheckbox'>
							<visible>1</visible>
							<X>3%</X>
							<Y>53%</Y>
							<Width>15</Width>
							<Height>15</Height>
							<Text>Arcane</Text>
							<OnLoad>
								if ${Script[VG-PSI].VariableScope.doArcane}
								{
									This:SetChecked
								}
							</OnLoad>
							<OnLeftClick>
								Script[VG-PSI].VariableScope.doArcane:Set[${This.Checked}]
							</OnLeftClick>
						</checkbox>
						<checkbox Name='doPhysical' Template='VG.GreenCheckbox'>
							<visible>1</visible>
							<X>30%</X>
							<Y>53%</Y>
							<Width>15</Width>
							<Height>15</Height>
							<Text>Physical</Text>
							<OnLoad>
								if ${Script[VG-PSI].VariableScope.doPhysical}
								{
									This:SetChecked
								}
							</OnLoad>
							<OnLeftClick>
								Script[VG-PSI].VariableScope.doPhysical:Set[${This.Checked}]
							</OnLeftClick>
						</checkbox>
						<checkbox Name='doMental' Template='VG.GreenCheckbox'>
							<visible>1</visible>
							<X>65%</X>
							<Y>53%</Y>
							<Width>15</Width>
							<Height>15</Height>
							<Text>Mental</Text>
							<OnLoad>
								if ${Script[VG-PSI].VariableScope.doMental}
								{
									This:SetChecked
								}
							</OnLoad>
							<OnLeftClick>
								Script[VG-PSI].VariableScope.doMental:Set[${This.Checked}]
							</OnLeftClick>
						</checkbox>

						<Commandbutton Name="Button-Set Tank" Template="VG.GreenCommandButton">
							<visible>1</visible>
							<X>10%</X>
							<Y>65%</Y>
							<Width>80%</Width>
							<Height>25</Height>
							<Text>Assist:  </Text>
                            <Onload>
								if ${Me.DTarget(exists)}
								{
									Script[VG-PSI].Variable[Tank]:Set[${Me.DTarget.Name}]
									This:SetText[Assist:  ${Me.DTarget.Name}]
								}
								else
								{
									Script[VG-PSI].Variable[Tank]:Set[${Me.FName}]
									This:SetText[Assist:  ${Me.FName}]
								}
                            </Onload>
							<OnLeftClick>
								if ${Me.DTarget(exists)}
								{
									Script[VG-PSI].Variable[Tank]:Set[${Me.DTarget.Name}]
									This:SetText[Assist:  ${Me.DTarget.Name}]
								}
								else
								{
									Script[VG-PSI].Variable[Tank]:Set[${Me.FName}]
									This:SetText[Assist:  ${Me.FName}]
								}
							</OnLeftClick>
						</Commandbutton>
						
						
						<Text Name="Combat Form Text" Template="VG.BoldText">
							<X>3%</X>
							<Y>81%</Y>
							<Width>200</Width>
							<Height>20</Height>
							<Alignment>Left</Alignment>
							<Text>COMBAT FORM:</Text>
						</Text>
						<ComboBox name="Combat Form" template="VG.ComboBox">
							<visible>1</visible>
							<X>3%</X>
							<Y>88%</Y>
							<Width>45%</Width>
							<Height>18</Height>
							<Sort>None</Sort>
							<Items>
								<Item value='1'>1    Free Mind</Item>
								<Item value='2'>2    Though Thief</Item>
								<Item value='3' default='3'>3    Phrenic Rage</Item>
								<Item value='4'>4    Transcendance</Item>
							</Items>
							<OnSelect>
								if ${This.Selection}==1
								{
									Script[VG-PSI].Variable[CombatForm]:Set[Free Mind]
								}
								if ${This.Selection}==2
								{
									Script[VG-PSI].Variable[CombatForm]:Set[Free Mind]
									if ${Me.Form[Concentration: Thought Thief](exists)}
									{
										Script[VG-PSI].Variable[CombatForm]:Set[Concentration: Thought Thief]
									}
								}
								if ${This.Selection}==3
								{
									Script[VG-PSI].Variable[CombatForm]:Set[Free Mind]
									if ${Me.Form[Concentration: Phrenic Rage](exists)}
									{
										Script[VG-PSI].Variable[CombatForm]:Set[Concentration: Phrenic Rage]
									}
								}
								if ${This.Selection}==4
								{
									Script[VG-PSI].Variable[CombatForm]:Set[Free Mind]
									if ${Me.Form[Concentration: Transcendance](exists)}
									{
										Script[VG-PSI].Variable[CombatForm]:Set[Concentration: Transcendance]
									}
								}
							</OnSelect>
						</ComboBox>
						
						<Text Name="Non-Combat Form Text" Template="VG.BoldText">
							<X>55%</X>
							<Y>81%</Y>
							<Width>200</Width>
							<Height>20</Height>
							<Alignment>Left</Alignment>
							<Text>OUT OF COMBAT FORM:</Text>
						</Text>
						<ComboBox name="Non-Combat Form" template="VG.ComboBox">
							<visible>1</visible>
							<X>55%</X>
							<Y>88%</Y>
							<Width>45%</Width>
							<Height>18</Height>
							<Sort>None</Sort>
							<Items>
								<Item value='1'>1    Free Mind</Item>
								<Item value='2'>2    Though Thief</Item>
								<Item value='3'>3    Phrenic Rage</Item>
								<Item value='4' default='4'>4    Transcendance</Item>
							</Items>
							<OnSelect>
								if ${This.Selection}==1
								{
									Script[VG-PSI].Variable[NonCombatForm]:Set[Free Mind]
								}
								if ${This.Selection}==2
								{
									Script[VG-PSI].Variable[NonCombatForm]:Set[Free Mind]
									if ${Me.Form[Concentration: Thought Thief](exists)}
									{
										Script[VG-PSI].Variable[NonCombatForm]:Set[Concentration: Thought Thief]
									}
								}
								if ${This.Selection}==3
								{
									Script[VG-PSI].Variable[NonCombatForm]:Set[Free Mind]
									if ${Me.Form[Concentration: Phrenic Rage](exists)}
									{
										Script[VG-PSI].Variable[NonCombatForm]:Set[Concentration: Phrenic Rage]
									}
								}
								if ${This.Selection}==4
								{
									Script[VG-PSI].Variable[NonCombatForm]:Set[Free Mind]
									if ${Me.Form[Concentration: Transcendance](exists)}
									{
										Script[VG-PSI].Variable[NonCombatForm]:Set[Concentration: Transcendance]
									}
								}
							</OnSelect>
						</ComboBox>
						
					</Tab>
					
					<!-- Tab Name: (Attack) -->
					<Tab name='Attack'>
						<Text Name="Text-Dots" Template="VG.BoldText">
							<X>3%</X>
							<Y>6%</Y>
							<Width>200</Width>
							<Height>20</Height>
							<Alignment>Left</Alignment>
							<Text>DOTS:                                   AE:</Text>
						</Text>
						<checkbox Name="doTemporalShift" Template="VG.GreenCheckbox">
							<visible>1</visible>
							<X>3%</X>
							<Y>14%</Y>
							<Width>15</Width>
							<Height>15</Height>
							<Text>Temporal Shift</Text>
							<OnLoad>
								if ${Script[VG-PSI].VariableScope.doTemporalShift}
								{
									This:SetChecked
								}
							</OnLoad>
							<OnLeftClick>
								Script[VG-PSI].VariableScope.doTemporalShift:Set[${This.Checked}]
							</OnLeftClick>
						</checkbox>
						<checkbox Name="doCompressionSphere" Template="VG.GreenCheckbox">
							<visible>1</visible>
							<X>3%</X>
							<Y>23%</Y>
							<Width>15</Width>
							<Height>15</Height>
							<Text>Compression Sphere</Text>
							<OnLoad>
								if ${Script[VG-PSI].VariableScope.doCompressionSphere}
								{
									This:SetChecked
								}
							</OnLoad>
							<OnLeftClick>
								Script[VG-PSI].VariableScope.doCompressionSphere:Set[${This.Checked}]
							</OnLeftClick>
						</checkbox>
						<checkbox Name="doPsychicSchism" Template="VG.GreenCheckbox">
							<visible>1</visible>
							<X>3%</X>
							<Y>32%</Y>
							<Width>15</Width>
							<Height>15</Height>
							<Text>Psychic Schism</Text>
							<OnLoad>
								if ${Script[VG-PSI].VariableScope.doPsychicSchism}
								{
									This:SetChecked
								}
							</OnLoad>
							<OnLeftClick>
								Script[VG-PSI].VariableScope.doPsychicSchism:Set[${This.Checked}]
							</OnLeftClick>
						</checkbox>

						<checkbox Name="doDementia" Template="VG.GreenCheckbox">
							<visible>1</visible>
							<X>55%</X>
							<Y>14%</Y>
							<Width>15</Width>
							<Height>15</Height>
							<Text>Dementia</Text>
							<OnLoad>
								if ${Script[VG-PSI].VariableScope.doDementia}
								{
									This:SetChecked
								}
							</OnLoad>
							<OnLeftClick>
								Script[VG-PSI].VariableScope.doDementia:Set[${This.Checked}]
							</OnLeftClick>
						</checkbox>
						<checkbox Name="doThoughtSurge" Template="VG.GreenCheckbox">
							<visible>1</visible>
							<X>55%</X>
							<Y>23%</Y>
							<Width>15</Width>
							<Height>15</Height>
							<Text>Thought Surge</Text>
							<OnLoad>
								if ${Script[VG-PSI].VariableScope.doThoughtSurge}
								{
									This:SetChecked
								}
							</OnLoad>
							<OnLeftClick>
								Script[VG-PSI].VariableScope.doThoughtSurge:Set[${This.Checked}]
							</OnLeftClick>
						</checkbox>
						<checkbox Name="doChronoshift" Template="VG.GreenCheckbox">
							<visible>1</visible>
							<X>55%</X>
							<Y>32%</Y>
							<Width>15</Width>
							<Height>15</Height>
							<Text>Chronoshift</Text>
							<OnLoad>
								if ${Script[VG-PSI].VariableScope.doChronoshift}
								{
									This:SetChecked
								}
							</OnLoad>
							<OnLeftClick>
								Script[VG-PSI].VariableScope.doChronoshift:Set[${This.Checked}]
							</OnLeftClick>
						</checkbox>

						<Text Name="Text-Attack" Template="VG.BoldText">
							<X>3%</X>
							<Y>45%</Y>
							<Width>99%</Width>
							<Height>20</Height>
							<Alignment>Left</Alignment>
							<Text>NUKES:                                  START ATTACKING:</Text>
						</Text>
						<checkbox Name="doMentalBlast" Template="VG.GreenCheckbox">
							<visible>1</visible>
							<X>3%</X>
							<Y>53%</Y>
							<Width>15</Width>
							<Height>15</Height>
							<Text>Mental Blast</Text>
							<OnLoad>
								if ${Script[VG-PSI].VariableScope.doMentalBlast}
								{
									This:SetChecked
								}
							</OnLoad>
							<OnLeftClick>
								Script[VG-PSI].VariableScope.doMentalBlast:Set[${This.Checked}]
							</OnLeftClick>
						</checkbox>
						<checkbox Name="doThoughtPulse" Template="VG.GreenCheckbox">
							<visible>1</visible>
							<X>3%</X>
							<Y>62%</Y>
							<Width>15</Width>
							<Height>15</Height>
							<Text>Thought Pulse</Text>
							<OnLoad>
								if ${Script[VG-PSI].VariableScope.doThoughtPulse}
								{
									This:SetChecked
								}
							</OnLoad>
							<OnLeftClick>
								Script[VG-PSI].VariableScope.doThoughtPulse:Set[${This.Checked}]
							</OnLeftClick>
						</checkbox>
						<checkbox Name="doCorporealHammer" Template="VG.GreenCheckbox">
							<visible>1</visible>
							<X>3%</X>
							<Y>71%</Y>
							<Width>15</Width>
							<Height>15</Height>
							<Text>Corporeal Hammer</Text>
							<OnLoad>
								if ${Script[VG-PSI].VariableScope.doCorporealHammer}
								{
									This:SetChecked
								}
							</OnLoad>
							<OnLeftClick>
								Script[VG-PSI].VariableScope.doCorporealHammer:Set[${This.Checked}]
							</OnLeftClick>
						</checkbox>
						<checkbox Name="doPsionicBlast" Template="VG.GreenCheckbox">
							<visible>1</visible>
							<X>3%</X>
							<Y>80%</Y>
							<Width>15</Width>
							<Height>15</Height>
							<Text>Psionic Blast</Text>
							<OnLoad>
								if ${Script[VG-PSI].VariableScope.doPsionicBlast}
								{
									This:SetChecked
								}
							</OnLoad>
							<OnLeftClick>
								Script[VG-PSI].VariableScope.doPsionicBlast:Set[${This.Checked}]
							</OnLeftClick>
						</checkbox>
						<checkbox Name="doCorporealSmash" Template="VG.GreenCheckbox">
							<visible>1</visible>
							<X>3%</X>
							<Y>89%</Y>
							<Width>15</Width>
							<Height>15</Height>
							<Text>Corporeal Smash</Text>
							<OnLoad>
								if ${Script[VG-PSI].VariableScope.doCorporealSmash}
								{
									This:SetChecked
								}
							</OnLoad>
							<OnLeftClick>
								Script[VG-PSI].VariableScope.doCorporealSmash:Set[${This.Checked}]
							</OnLeftClick>
						</checkbox>
<!--
						<Text name='AttackRatioSliderText' Template='VG.BoldText'>
							<visible>1</visible>
							<X>55%</X>
							<Y>53%</Y>
							<Width>80%</Width>
							<Height>15</Height>
							<Alignment>Left</Alignment>
							<Text>Attacking when mob's health is:</Text>
						</Text>
-->

						<Text name='AttackRationSliderValue' Template='VG.BoldText'>
							<visible>1</visible>
							<X>83%</X>
							<Y>45%</Y>
							<Width>50</Width>
							<Height>15</Height>
							<Alignment>Right</Alignment>
							<OnRender>
								This:SetText[${Script[VG-PSI].Variable[StartAttack]}]
							</OnRender>
						</Text>
						<Slider name='AttackSlider' Template='VG.Slider'>
							<visible>1</visible>
							<X>55%</X>
							<Y>55%</Y>
							<Width>43%</Width>
							<Height>15</Height>
							<Range>100</Range>
							<Alignment>Center</Alignment>
							<OnLoad>
								This:SetValue[${Script[VG-PSI].Variable[StartAttack]}]
							</OnLoad>
							<OnChange>
								Script[VG-PSI].Variable[StartAttack]:Set[${Math.Calc[${This.Value}].Int}]
							</OnChange>
						</Slider>

					</Tab>

					<!-- Tab Name: (MEZ) -->
					<Tab Name="MEZ">
						<Text Name="Text-Mez" Template="VG.BoldText">
							<X>3%</X>
							<Y>7%</Y>
							<Width>200</Width>
							<Height>20</Height>
							<Alignment>Left</Alignment>
							<Text>Mezmerize Actions:</Text>
						</Text>

						<Commandbutton Name="Set1" Template="VG.GreyCommandButton">
							<visible>1</visible>
							<X>2%</X>
							<Y>17%</Y>
							<Width>40</Width>
							<Height>15</Height>
							<Text>Set</Text>
							<OnLeftClick>
								if ${Me.Target(exists)}
								{
									Script[VG-PSI].Variable[Mez1Name]:Set[${Me.Target.Name}]
									Script[VG-PSI].Variable[Mez1ID]:Set[${Me.Target.ID}]
									UIElement[Text-Mez1@MEZ@Tabs@VG-PSI]:SetText[${Me.Target.Name}]
								}
								else
								{
									Script[VG-PSI].Variable[Mez1Name]:Set[None]
									Script[VG-PSI].Variable[Mez1ID]:Set[]
									UIElement[Text-Mez1@MEZ@Tabs@VG-PSI]:SetText[None]
								}
							</OnLeftClick>
						</Commandbutton>
						<Commandbutton Name="Clr1" Template="VG.GreyCommandButton">
							<visible>1</visible>
							<X>14%</X>
							<Y>17%</Y>
							<Width>40</Width>
							<Height>15</Height>
							<Text>Clr</Text>
							<OnLeftClick>
								Script[VG-PSI].Variable[Mez1Name]:Set[None]
								Script[VG-PSI].Variable[Mez1ID]:Set[]
								UIElement[Text-Mez1@MEZ@Tabs@VG-PSI]:SetText[None]
							</OnLeftClick>
						</Commandbutton>
						<Commandbutton Name="Mez1" Template="VG.GreyCommandButton">
							<visible>1</visible>
							<X>26%</X>
							<Y>17%</Y>
							<Width>40</Width>
							<Height>15</Height>
							<Text>Mez</Text>
							<OnLeftClick>
								echo Mez1ID=${Mez1ID}
								Script[VG-PSI]:QueueCommand[call Mezmerize ${Mez1ID}]
							</OnLeftClick>
						</Commandbutton>
						<Commandbutton Name="Sync1" Template="VG.GreyCommandButton">
							<visible>1</visible>
							<X>39%</X>
							<Y>17%</Y>
							<Width>40</Width>
							<Height>15</Height>
							<Text>Sync</Text>
							<OnLeftClick>
								Script[VG-PSI]:QueueCommand[call Synchronize ${Mez1ID}]
							</OnLeftClick>
						</Commandbutton>
						<Text Name="Text-Mez1" Template="VG.BoldText">
							<X>53%</X>
							<Y>17%</Y>
							<Width>47%</Width>
							<Height>20</Height>
							<Alignment>Left</Alignment>
							<Text>None</Text>
						</Text>

						<Commandbutton Name="Set2" Template="VG.GreyCommandButton">
							<visible>1</visible>
							<X>2%</X>
							<Y>27%</Y>
							<Width>40</Width>
							<Height>15</Height>
							<Text>Set</Text>
							<OnLeftClick>
								if ${Me.Target(exists)}
								{
									Script[VG-PSI].Variable[Mez2Name]:Set[${Me.Target.Name}]
									Script[VG-PSI].Variable[Mez2ID]:Set[${Me.Target.ID}]
									UIElement[Text-Mez2@MEZ@Tabs@VG-PSI]:SetText[${Me.Target.Name}]
								}
								else
								{
									Script[VG-PSI].Variable[Mez2Name]:Set[None]
									Script[VG-PSI].Variable[Mez2ID]:Set[]
									UIElement[Text-Mez2@MEZ@Tabs@VG-PSI]:SetText[None]
								}
							</OnLeftClick>
						</Commandbutton>
						<Commandbutton Name="Clr2" Template="VG.GreyCommandButton">
							<visible>1</visible>
							<X>14%</X>
							<Y>27%</Y>
							<Width>40</Width>
							<Height>15</Height>
							<Text>Clr</Text>
							<OnLeftClick>
								Script[VG-PSI].Variable[Mez2Name]:Set[None]
								Script[VG-PSI].Variable[Mez2ID]:Set[]
								UIElement[Text-Mez2@MEZ@Tabs@VG-PSI]:SetText[None]
							</OnLeftClick>
						</Commandbutton>
						<Commandbutton Name="Mez2" Template="VG.GreyCommandButton">
							<visible>1</visible>
							<X>26%</X>
							<Y>27%</Y>
							<Width>40</Width>
							<Height>15</Height>
							<Text>Mez</Text>
							<OnLeftClick>
								Script[VG-PSI]:QueueCommand[call Mezmerize ${Mez2ID}]
							</OnLeftClick>
						</Commandbutton>
						<Commandbutton Name="Sync2" Template="VG.GreyCommandButton">
							<visible>1</visible>
							<X>39%</X>
							<Y>27%</Y>
							<Width>40</Width>
							<Height>15</Height>
							<Text>Sync</Text>
							<OnLeftClick>
								Script[VG-PSI]:QueueCommand[call Synchronize ${Mez2ID}]
							</OnLeftClick>
						</Commandbutton>
						<Text Name="Text-Mez2" Template="VG.BoldText">
							<X>53%</X>
							<Y>27%</Y>
							<Width>47%</Width>
							<Height>20</Height>
							<Alignment>Left</Alignment>
							<Text>None</Text>
						</Text>

						<Commandbutton Name="Set3" Template="VG.GreyCommandButton">
							<visible>1</visible>
							<X>2%</X>
							<Y>37%</Y>
							<Width>40</Width>
							<Height>15</Height>
							<Text>Set</Text>
							<OnLeftClick>
								if ${Me.Target(exists)}
								{
									Script[VG-PSI].Variable[Mez3Name]:Set[${Me.Target.Name}]
									Script[VG-PSI].Variable[Mez3ID]:Set[${Me.Target.ID}]
									UIElement[Text-Mez3@MEZ@Tabs@VG-PSI]:SetText[${Me.Target.Name}]
								}
								else
								{
									Script[VG-PSI].Variable[Mez3Name]:Set[None]
									Script[VG-PSI].Variable[Mez3ID]:Set[]
									UIElement[Text-Mez3@MEZ@Tabs@VG-PSI]:SetText[None]
								}
							</OnLeftClick>
						</Commandbutton>
						<Commandbutton Name="Clr3" Template="VG.GreyCommandButton">
							<visible>1</visible>
							<X>14%</X>
							<Y>37%</Y>
							<Width>40</Width>
							<Height>15</Height>
							<Text>Clr</Text>
							<OnLeftClick>
								Script[VG-PSI].Variable[Mez3Name]:Set[None]
								Script[VG-PSI].Variable[Mez3ID]:Set[]
								UIElement[Text-Mez3@MEZ@Tabs@VG-PSI]:SetText[None]
							</OnLeftClick>
						</Commandbutton>
						<Commandbutton Name="Mez3" Template="VG.GreyCommandButton">
							<visible>1</visible>
							<X>26%</X>
							<Y>37%</Y>
							<Width>40</Width>
							<Height>15</Height>
							<Text>Mez</Text>
							<OnLeftClick>
								Script[VG-PSI]:QueueCommand[call Mezmerize ${Mez3ID}]
							</OnLeftClick>
						</Commandbutton>
						<Commandbutton Name="Sync3" Template="VG.GreyCommandButton">
							<visible>1</visible>
							<X>39%</X>
							<Y>37%</Y>
							<Width>40</Width>
							<Height>15</Height>
							<Text>Sync</Text>
							<OnLeftClick>
								Script[VG-PSI]:QueueCommand[call Synchronize ${Mez3ID}]
							</OnLeftClick>
						</Commandbutton>
						<Text Name="Text-Mez3" Template="VG.BoldText">
							<X>53%</X>
							<Y>37%</Y>
							<Width>47%</Width>
							<Height>20</Height>
							<Alignment>Left</Alignment>
							<Text>None</Text>
						</Text>

						<Commandbutton Name="Synchronize Tanks Target" Template="VG.GreenCommandButton">
							<visible>1</visible>
							<X>10%</X>
							<Y>55%</Y>
							<Width>80%</Width>
							<Height>25</Height>
							<Text>Synchronize Tank's Target</Text>
 							<OnLeftClick>
								Script[VG-PSI]:QueueCommand[call SynchronizeTanksTarget]
							</OnLeftClick>
						</Commandbutton>

						<Commandbutton Name="Mezmerize Encounter-1" Template="VG.GreenCommandButton">
							<visible>1</visible>
							<X>10%</X>
							<Y>70%</Y>
							<Width>80%</Width>
							<Height>25</Height>
							<Text>Mezmerize 1st Encounter</Text>
 							<OnLeftClick>
								Script[VG-PSI]:QueueCommand[call Mezmerize ${Me.Encounter[1].ID}]
							</OnLeftClick>
						</Commandbutton>

						<Commandbutton Name="Mezmerize Encounter-2" Template="VG.GreenCommandButton">
							<visible>1</visible>
							<X>10%</X>
							<Y>85%</Y>
							<Width>80%</Width>
							<Height>25</Height>
							<Text>Mezmerize 2nd Encounter</Text>
 							<OnLeftClick>
								Script[VG-PSI]:QueueCommand[call Mezmerize ${Me.Encounter[2].ID}]
							</OnLeftClick>
						</Commandbutton>
					</Tab>

					<!-- Tab Name: (Misc) -->
					<Tab Name="Misc">
					
						<checkbox Name='doFollow' Template='VG.GreenCheckbox'>
							<visible>1</visible>
							<X>3%</X>
							<Y>7%</Y>
							<Width>15</Width>
							<Height>15</Height>
							<Text> </Text>
							<OnLoad>
								if ${Script[VG-PSI].VariableScope.doFollow}
								{
									This:SetChecked
								}
							</OnLoad>
							<OnLeftClick>
								Script[VG-PSI].VariableScope.doFollow:Set[${This.Checked}]
							</OnLeftClick>
						</checkbox>
						<Commandbutton Name='Set Follow' Template='VG.GreenCommandButton'>
							<visible>6</visible>
							<X>10%</X>
							<Y>6%</Y>
							<Text>Set</Text>
							<Width>40</Width> 
							<Height>18</Height>
							<OnLeftClick>
								Script[VG-PSI].Variable[FollowName]:Set[${Me.DTarget.Name}]
								Script[VG-PSI].Variable[FollowID]:Set[${Me.DTarget.ID}]
							</OnLeftClick>
						</Commandbutton>
						<Text Name="Follow Name" Template="VG.BoldText">
							<X>25%</X>
							<Y>7%</Y>
							<Width>85%</Width>
							<Height>25</Height>
							<Text> </Text>
						</Text>

						<checkbox Name='doPushHate' Template='VG.GreenCheckbox'>
							<visible>1</visible>
							<X>3%</X>
							<Y>17%</Y>
							<Width>15</Width>
							<Height>15</Height>
							<Text> </Text>
							<OnLoad>
								if ${Script[VG-PSI].VariableScope.doPushHate}
								{
									This:SetChecked
								}
							</OnLoad>
							<OnLeftClick>
								Script[VG-PSI].VariableScope.doPushHate:Set[${This.Checked}]
								UIElement[doPushHate@Main@Tabs@VG-PSI]:ToggleChecked
							</OnLeftClick>
						</checkbox>
						<Commandbutton Name='Set PushHateTo' Template='VG.GreenCommandButton'>
							<visible>6</visible>
							<X>10%</X>
							<Y>16%</Y>
							<Text>Set</Text>
							<Width>40</Width> 
							<Height>18</Height>
							<OnLeftClick>
								Script[VG-PSI].Variable[PushHateTo]:Set[${Me.DTarget.Name}]
							</OnLeftClick>
						</Commandbutton>
						<Text Name="PushHateTo Name" Template="VG.BoldText">
							<X>25%</X>
							<Y>17%</Y>
							<Width>85%</Width>
							<Height>25</Height>
							<Text> </Text>
						</Text>

						<checkbox Name='doRemoveHate' Template='VG.GreenCheckbox'>
							<visible>1</visible>
							<X>3%</X>
							<Y>27%</Y>
							<Width>15</Width>
							<Height>15</Height>
							<Text> </Text>
							<OnLoad>
								if ${Script[VG-PSI].VariableScope.doRemoveHate}
								{
									This:SetChecked
								}
							</OnLoad>
							<OnLeftClick>
								Script[VG-PSI].VariableScope.doRemoveHate:Set[${This.Checked}]
								UIElement[doRemoveHate@Main@Tabs@VG-PSI]:ToggleChecked
							</OnLeftClick>
						</checkbox>
						<Commandbutton Name='Set RemoveHateFrom' Template='VG.GreenCommandButton'>
							<visible>6</visible>
							<X>10%</X>
							<Y>26%</Y>
							<Text>Set</Text>
							<Width>40</Width> 
							<Height>18</Height>
							<OnLeftClick>
								Script[VG-PSI].Variable[RemoveHateFrom]:Set[${Me.DTarget.Name}]
							</OnLeftClick>
						</Commandbutton>
						<Text Name="RemoveHateFrom Name" Template="VG.BoldText">
							<X>25%</X>
							<Y>27%</Y>
							<Width>85%</Width>
							<Height>25</Height>
							<Text> </Text>
						</Text>

<!--
						<Text Name="Manage Aggro" Template="VG.BoldText">
							<X>3%</X>
							<Y>7%</Y>
							<Width>200</Width>
							<Height>20</Height>
							<Alignment>Left</Alignment>
							<Text>MANAGE AGGRO:</Text>
						</Text>
						<Commandbutton Name="Push Hate" Template="VG.GreenCommandButton">
							<visible>1</visible>
							<X>10%</X>
							<Y>15%</Y>
							<Width>80%</Width>
							<Height>20</Height>
							<Text>Push Hate to:  None</Text>
                            <Onload>
								Script[VG-PSI].Variable[PushHateTo]:Set[None]
								This:SetText[Push Hate to:  None]
                            </Onload>
							<OnLeftClick>
								if ${Me.DTarget(exists)}
								{
									Script[VG-PSI].Variable[PushHateTo]:Set[${Me.DTarget.Name}]
									This:SetText[Push Hate to:  ${Me.DTarget.Name}]
								}
								else
								{
									Script[VG-PSI].Variable[PushHateTo]:Set[None]
									This:SetText[Push Hate to:  None]
								}
							</OnLeftClick>
						</Commandbutton>
						<Commandbutton Name="Remove Hate" Template="VG.GreenCommandButton">
							<visible>1</visible>
							<X>10%</X>
							<Y>27%</Y>
							<Width>80%</Width>
							<Height>20</Height>
							<Text>Remove Hate from:  None</Text>
                            <Onload>
								This:SetText[Remove Hate from:  ${Script[VG-PSI].Variable[RemoveHateFrom]}]
                            </Onload>
							<OnLeftClick>
								if ${Me.DTarget(exists)}
								{
									Script[VG-PSI].Variable[RemoveHateFrom]:Set[${Me.DTarget.Name}]
									This:SetText[Remove Hate from:  ${Me.DTarget.Name}]
								}
								else
								{
									Script[VG-PSI].Variable[RemoveHateFrom]:Set[None]
									This:SetText[Remove Hate from:  None]
								}
							</OnLeftClick>
						</Commandbutton>
-->
						
						
						<Text Name="Chat monitor" Template="VG.BoldText">
							<X>3%</X>
							<Y>51%</Y>
							<Width>200</Width>
							<Height>22</Height>
							<Alignment>Left</Alignment>
							<Text>CHAT MONITOR:</Text>
						</Text>
						<Text Name="Start Following" Template="VG.Text">
							<X>3%</X>
							<Y>61%</Y>
							<Width>30%</Width>
							<Height>25</Height>
							<Text>Start Following:</Text>
						</Text>
						<Textentry Name='StartFollowText' Template='VG.TextEntry'>
							<X>35%</X>
							<Y>60%</Y>
							<Width>64%</Width>
							<Height>18</Height>
							<Border>0</Border>
							<OnLoad>
								This:SetText[${Script[VG-PSI].VariableScope.StartFollowText}]
							</OnLoad>
							<OnChange>
								if ${This.Text.Length} > 0
								{
									Script[VG-PSI].VariableScope.StartFollowText:Set[${This.Text}]
								}
							</OnChange>
						</Textentry>

						<Text Name="Stop Following" Template="VG.Text">
							<X>3%</X>
							<Y>71%</Y>
							<Width>30%</Width>
							<Height>25</Height>
							<Text>Stop Following:</Text>
						</Text>
						<Textentry Name='StopFollowText' Template='VG.TextEntry'>
							<X>35%</X>
							<Y>70%</Y>
							<Width>64%</Width>
							<Height>18</Height>
							<Border>0</Border>
							<OnLoad>
								This:SetText[${Script[VG-PSI].VariableScope.StopFollowText}]
							</OnLoad>
							<OnChange>
								if ${This.Text.Length} > 0
								{
									Script[VG-PSI].VariableScope.StopFollowText:Set[${This.Text}]
								}
							</OnChange>
						</Textentry>

						<Text Name="Kill Levitation" Template="VG.Text">
							<X>3%</X>
							<Y>81%</Y>
							<Width>30%</Width>
							<Height>25</Height>
							<Text>Kill Levitation:</Text>
						</Text>
						<Textentry Name='KillLevitationText' Template='VG.TextEntry'>
							<X>35%</X>
							<Y>80%</Y>
							<Width>64%</Width>
							<Height>18</Height>
							<Border>0</Border>
							<OnLoad>
								This:SetText[${Script[VG-PSI].VariableScope.KillLevitationText}]
							</OnLoad>
							<OnChange>
								if ${This.Text.Length} > 0
								{
									Script[VG-PSI].VariableScope.KillLevitationText:Set[${This.Text}]
								}
							</OnChange>
						</Textentry>
						
						<Text Name="Buff Everyone" Template="VG.Text">
							<X>3%</X>
							<Y>91%</Y>
							<Width>30%</Width>
							<Height>25</Height>
							<Text>Buff Everyone:</Text>
						</Text>
						<Textentry Name='BuffEveryoneText' Template='VG.TextEntry'>
							<X>35%</X>
							<Y>90%</Y>
							<Width>64%</Width>
							<Height>18</Height>
							<Border>0</Border>
							<OnLoad>
								This:SetText[${Script[VG-PSI].VariableScope.BuffEveryoneText}]
							</OnLoad>
							<OnChange>
								if ${This.Text.Length} > 0
								{
									Script[VG-PSI].VariableScope.BuffEveryoneText:Set[${This.Text}]
								}
							</OnChange>
						</Textentry>
						

<!--
						<Text Name="Manage Regen" Template="VG.BoldText">
							<X>3%</X>
							<Y>45%</Y>
							<Width>200</Width>
							<Height>20</Height>
							<Alignment>Left</Alignment>
							<Text>MANAGE REGEN:</Text>
						</Text>
						<ComboBox name="Regen Dot" template="VG.ComboBox">
							<visible>1</visible>
							<X>3%</X>
							<Y>52%</Y>
							<Width>95%</Width>
							<Height>18</Height>
							<Sort>None</Sort>
							<Items>
								<Item value='1' default='1'>1    Compression Sphere</Item>
								<Item value='2'>2    Psychic Schism</Item>
								<Item value='3'>3    None</Item>
							</Items>
							<OnSelect>
								if ${This.Selection}==1
								{
									Script[VG-PSI].Variable[RegenDot]:Set[None]
									if ${Me.Ability[Compression Sphere I](exists)}
									{
										Script[VG-PSI].Variable[RegenDot]:Set[Compression Sphere I]
									}
									if ${Me.Ability[Compression Sphere II](exists)}
									{
										Script[VG-PSI].Variable[RegenDot]:Set[Compression Sphere II]
									}
									if ${Me.Ability[Compression Sphere III](exists)}
									{
										Script[VG-PSI].Variable[RegenDot]:Set[Compression Sphere III]
									}
									if ${Me.Ability[Compression Sphere IV](exists)}
									{
										Script[VG-PSI].Variable[RegenDot]:Set[Compression Sphere IV]
									}
									if ${Me.Ability[Compression Sphere V](exists)}
									{
										Script[VG-PSI].Variable[RegenDot]:Set[Compression Sphere V]
									}
									if ${Me.Ability[Compression Sphere VI](exists)}
									{
										Script[VG-PSI].Variable[RegenDot]:Set[Compression Sphere VI]
									}
									if ${Me.Ability[Compression Sphere VII](exists)}
									{
										Script[VG-PSI].Variable[RegenDot]:Set[Compression Sphere VII]
									}
									if ${Me.Ability[Compression Sphere VIII](exists)}
									{
										Script[VG-PSI].Variable[RegenDot]:Set[Compression Sphere VIII]
									}
									if ${Me.Ability[Compression Sphere IX](exists)}
									{
										Script[VG-PSI].Variable[RegenDot]:Set[Compression Sphere IX]
									}
								}
								if ${This.Selection}==2
								{
									Script[VG-PSI].Variable[RegenDot]:Set[None]
									if ${Me.Ability[Psychic Schism I](exists)}
									{
										Script[VG-PSI].Variable[RegenDot]:Set[Psychic Schism I]
									}
									if ${Me.Ability[Psychic Schism II](exists)}
									{
										Script[VG-PSI].Variable[RegenDot]:Set[Psychic Schism II]
									}
									if ${Me.Ability[Psychic Schism III](exists)}
									{
										Script[VG-PSI].Variable[RegenDot]:Set[Psychic Schism III]
									}
									if ${Me.Ability[Psychic Schism IV](exists)}
									{
										Script[VG-PSI].Variable[RegenDot]:Set[Psychic Schism IV]
									}
								}
								if ${This.Selection}==3
								{
									Script[VG-PSI].Variable[RegenDot]:Set[None]
								}
							</OnSelect>
						</ComboBox>
-->
					</Tab>


					<!-- Tab Name: (Stats) -->
					<Tab name='Stats'>
						<Text Name="DPS" Template="VG.BoldText">
							<X>3%</X>
							<Y>5%</Y>
							<Width>46%</Width>
							<Height>20</Height>
							<Alignment>Left</Alignment>
							<Text>a</Text>
						</Text>
						<Text Name="TotalDamage" Template="VG.BoldText">
							<X>50%</X>
							<Y>5%</Y>
							<Width>48%</Width>
							<Height>20</Height>
							<Alignment>Left</Alignment>
							<Text>a</Text>
						</Text>

						<Text Name="CRIT" Template="VG.BoldText">
							<X>3%</X>
							<Y>13%</Y>
							<Width>50%</Width>
							<Height>20</Height>
							<Alignment>Left</Alignment>
							<Text>b</Text>
						</Text>
						<Text Name="EPIC" Template="VG.BoldText">
							<X>50%</X>
							<Y>13%</Y>
							<Width>49%</Width>
							<Height>20</Height>
							<Alignment>Left</Alignment>
							<Text>b</Text>
						</Text>

						<Text Name="TemporalShift" Template="VG.BoldText">
							<X>3%</X>
							<Y>29%</Y>
							<Width>49.5%</Width>
							<Height>20</Height>
							<Alignment>Left</Alignment>
							<Text>c</Text>
						</Text>
						<Text Name="CompressionSphere" Template="VG.BoldText">
							<X>3%</X>
							<Y>37%</Y>
							<Width>49.5%</Width>
							<Height>20</Height>
							<Alignment>Left</Alignment>
							<Text>d</Text>
						</Text>
						<Text Name="PsychicSchism" Template="VG.BoldText">
							<X>3%</X>
							<Y>45%</Y>
							<Width>49.5%</Width>
							<Height>20</Height>
							<Alignment>Left</Alignment>
							<Text>e</Text>
						</Text>
						<Text Name="Dementia" Template="VG.BoldText">
							<X>55%</X>
							<Y>29%</Y>
							<Width>44.5%</Width>
							<Height>20</Height>
							<Alignment>Left</Alignment>
							<Text>k</Text>
						</Text>
						<Text Name="ThoughtSurge" Template="VG.BoldText">
							<X>55%</X>
							<Y>37%</Y>
							<Width>44.5%</Width>
							<Height>20</Height>
							<Alignment>Left</Alignment>
							<Text>l</Text>
						</Text>
						<Text Name="Chronoshift" Template="VG.BoldText">
							<X>55%</X>
							<Y>45%</Y>
							<Width>44.5%</Width>
							<Height>20</Height>
							<Alignment>Left</Alignment>
							<Text>m</Text>
						</Text>

						
						
						<Text Name="MentalBlast" Template="VG.BoldText">
							<X>3%</X>
							<Y>59%</Y>
							<Width>74%</Width>
							<Height>20</Height>
							<Alignment>Left</Alignment>
							<Text>f</Text>
						</Text>
						<Text Name="ThoughtPulse" Template="VG.BoldText">
							<X>3%</X>
							<Y>67%</Y>
							<Width>74%</Width>
							<Height>20</Height>
							<Alignment>Left</Alignment>
							<Text>g</Text>
						</Text>
						<Text Name="PsionicBlast" Template="VG.BoldText">
							<X>3%</X>
							<Y>75%</Y>
							<Width>74%</Width>
							<Height>20</Height>
							<Alignment>Left</Alignment>
							<Text>i</Text>
						</Text>

						<Text Name="Mindfire" Template="VG.BoldText">
							<X>55%</X>
							<Y>59%</Y>
							<Width>49.5%</Width>
							<Height>20</Height>
							<Alignment>Left</Alignment>
							<Text>k</Text>
						</Text>
						<Text Name="TelekineticBlast" Template="VG.BoldText">
							<X>55%</X>
							<Y>67%</Y>
							<Width>49.5%</Width>
							<Height>20</Height>
							<Alignment>Left</Alignment>
							<Text>l</Text>
						</Text>
						<Text Name="TemporalFracture" Template="VG.BoldText">
							<X>55%</X>
							<Y>75%</Y>
							<Width>49.5%</Width>
							<Height>20</Height>
							<Alignment>Left</Alignment>
							<Text>m</Text>
						</Text>


						<Text Name="CorporealSmash" Template="VG.BoldText">
							<X>3%</X>
							<Y>83%</Y>
							<Width>74%</Width>
							<Height>20</Height>
							<Alignment>Left</Alignment>
							<Text>j</Text>
						</Text>
						
						<Text Name="TotalTime" Template="VG.BoldText">
							<X>3%</X>
							<Y>93%</Y>
							<Width>96%</Width>
							<Height>20</Height>
							<Alignment>Left</Alignment>
							<Text>j</Text>
						</Text>



					</Tab>

					
					
					<!-- Tab Name: (About) -->
					<Tab name='About'>
						<Text Name='About Line 1'>
							<X>0</X>
							<Y>12%</Y>
							<Width>100%</Width>
							<Height>80%</Height>
							<Alignment>Center</Alignment>
							<Font Template="VG.Text.Font">
								<Name>terminal</Name>
								<Size>16</Size>
							</Font>
						<!--	<Text>Tool for Psionicists v${Script[VG-PSI].Variable[Version]}</Text> -->
							<Text>Tool for Psionicists v1.0</Text>
						</Text>
						<Text Name='About Line 2'>
							<X>0</X>
							<Y>33%</Y>
							<Width>100%</Width>
							<Height>15</Height>
							<Alignment>Center</Alignment>
							<Font Template="VG.Text.Font">
								<Name>terminal</Name>
								<Size>14</Size>
							</Font>
							<Text>by Zandros</Text>
						</Text>
						<Text Name='About Line 3'>
							<X>0</X>
							<Y>50%</Y>
							<Width>100%</Width>
							<Height>15</Height>
							<Alignment>Center</Alignment>
							<Font Template="VG.Text.Font">
								<Name>terminal</Name>
								<Size>12</Size>
							</Font>
							<Text>Special thanks to all you programmers</Text>
						</Text>
						<Text Name='About Line 4'>
							<X>0</X>
							<Y>57%</Y>
							<Width>100%</Width>
							<Height>15</Height>
							<Alignment>Center</Alignment>
							<Font Template="VG.Text.Font">
								<Name>terminal</Name>
								<Size>12</Size>
							</Font>
							<Text>that shared your ideas and talents!</Text>
						</Text>
					</Tab>
				</Tabs>
			</TabControl>


			<!-- Outside the tab: (Tabs) -->
			
			
			<Text Name="Text-Status" Template="VG.BoldText">
				<visible>1</visible>
				<X>2%</X>
				<Y>75%</Y>
				<Width>98%</Width>
				<Height>20</Height>
				<Font Template="VG.Text.Font">
					<Color>FFDDBB00</Color>
				</Font>
			<!--	<Text> Current Action:  ${Script[VG-PSI].Variable[CurrentAction]}</Text>  -->
				<Text></Text>
			</Text>
			<Text Name="Text-Immune" Template="VG.BoldText">
				<visible>1</visible>
				<X>2%</X>
				<Y>80%</Y>
				<Width>275</Width>
				<Height>20</Height>
				<Font Template="VG.Text.Font">
					<Color>FFDDBB00</Color>
				</Font>
			<!--	<Text> Target's Immunity:  ${Script[VG-PSI].Variable[TargetImmunity]}</Text>  -->
				<Text></Text>
			</Text>
			<Text Name="Text-TOT" Template="VG.BoldText">
				<visible>1</visible>
				<X>2%</X>
				<Y>85%</Y>
				<Width>275</Width>
				<Height>20</Height>
				<Font Template="VG.Text.Font">
					<Color>FFDDBB00</Color>
				</Font>
			<!--	<Text> Target's Target:  ${Script[VG-PSI].Variable[TargetsTarget]}</Text>  -->
				<Text></Text>
			</Text>
			<Commandbutton Name="Run Button" Template="VG.GreyCommandButton">
				<visible>1</visible>
				<X>3%</X>
				<Y>90.5%</Y>
				<Width>45%</Width>
				<Height>23</Height>
				<Text>This script is PAUSED</Text>
				<OnLeftClick>
					if ${Script[VG-PSI].Variable[isPaused]}
					{
						Script[VG-PSI].Variable[isPaused]:Set[FALSE]
						This:SetText[This script is RUNNING]
					}
					elseif !${Script[VG-PSI].Variable[isPaused]}
					{
						Script[VG-PSI].Variable[isPaused]:Set[TRUE]
						This:SetText[This script is Paused]
					}
				</OnLeftClick>
			</Commandbutton>
			<Commandbutton Name="BuffArea" Template="VG.GreyCommandButton">
				<visible>1</visible>
				<X>70%</X>
				<Y>90.5%</Y>
				<Width>25%</Width>
				<Height>23</Height>
				<Text>Buff Area</Text>
				<OnLeftClick>
					Script[VG-PSI]:QueueCommand[call ScanAreaToBuff]
				</OnLeftClick>
			</Commandbutton>
		</Children>
	</Window>
</ISUI>
